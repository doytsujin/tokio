var N=null,E="",T="t",U="u",searchIndex={};
var R=["tokio_trace_core","callsite","metadata","dispatch","setglobaldefaulterror","interest","record","field","option","Returns an [`Identifier`] that uniquely identifies the…","identifier","is_event","valueset","Returns `Attributes` describing a new child span of the…","contains","is_empty","register_callsite","Registers a new callsite with this subscriber, returning…","new_span","attributes","Record a set of values on a span.","record_follows_from","Adds an indication that `span` follows from the span with…","Records that an [`Event`] has occurred.","Records that a span has been exited.","clone_span","Notifies the subscriber that a [span ID] has been cloned.","drop_span","Notifies the subscriber that a [span ID] has been dropped.","downcast_ref","tokio_trace_core::callsite","tokio_trace_core::dispatcher","to_owned","clone_into","try_from","borrow_mut","try_into","result","type_id","tokio_trace_core::event","typeid","tokio_trace_core::field","to_string","borrow","tokio_trace_core::metadata","tokio_trace_core::span","tokio_trace_core::subscriber","displayvalue","debugvalue","ordering","formatter","Callsite","Dispatch","FieldSet","ValueSet","Metadata","Attributes","Subscriber","Interest","Identifier","SetGlobalDefaultError","DisplayValue","DebugValue","tokio_sync","lockguard","senderror","trysenderror","Closes the receiving half of a channel, without dropping it.","try_send","unboundedtrysenderror","Receiver","RecvError","tokio_sync::oneshot","Check if the associated [`Receiver`] handle has been…","tryrecverror","semaphore","acquireerror","tryacquireerror","is_closed","channel","SendError","tokio_sync::watch","recverror","poll_close","tokio_sync::lock","tokio_sync::mpsc","tokio_sync::mpsc::error","string","tokio_sync::oneshot::error","tokio_sync::semaphore","tokio_sync::task","tokio_sync::watch::error","description","start_send","startsend","poll_complete","into_inner","Get the inner value.","UnboundedReceiver","UnboundedSender","Semaphore","TryAcquireError","AtomicTask","LockGuard","TrySendError","UnboundedSendError","UnboundedTrySendError","UnboundedRecvError","TryRecvError","AcquireError","tokio_executor","entererror","spawnerror","Provides a best effort hint to whether or not `spawn` will…","tokio_executor::park","park_timeout","defaultexecutor","executeerror","SpawnError","DefaultExecutor","ParkThread","TypedExecutor","EnterError","ParkError","UnparkThread","with_default","tokio_trace","`Dispatch` trace data to a [`Subscriber`].","`Event`s represent single points in time where something…","A field value of an erased type.","Visits this value with the given `Visitor`.","Trait representing the functions required to collect trace…","Returns true if a span or event with the specified…","Visit the construction of a new span, returning a new…","Records that a span has been entered.","downcast_raw","If `self` is the same type as the provided `TypeId`,…","Returned if setting the global dispatcher fails.","set_global_default","tokio_trace::dispatcher","tokio_trace::event","tokio_trace::subscriber","tokio_trace::field","tokio_trace::level_filters","tokio_trace::span","levelfilter","partial_cmp","The \"error\" level.","The \"warn\" level.","The \"info\" level.","The \"debug\" level.","The \"trace\" level.","LevelFilter","dispatcher","Dispatches trace events to `Subscriber`s.c","Sets this dispatch as the default for the duration of a…","Sets this dispatch as the global default for the duration…","get_default","Executes a closure with a reference to this thread's…","Returns a new `Dispatch` that discards events and spans.","Returns a `Dispatch` that forwards to the given…","Record the construction of a new span, returning a new…","Returns true if a span with the specified [metadata] would…","Records that a span has been can_enter.","Returns `true` if this `Dispatch` forwards to a…","Returns some reference to the `Subscriber` this `Dispatch`…","Events represent single points in time during the…","Constructs a new `Event` with the specified metadata and…","Visits all the fields on this `Event` with the specified…","Returns an iterator over the set of values on this `Event`.","Returns [metadata] describing this `Event`.","An opaque key allowing O(1) access to a field in a…","Describes the fields present on a span.","A set of fields and values for a span.","An iterator over a set of fields.","A `Value` which serializes as a string using `fmt::Display`.","A `Value` which serializes as a string using `fmt::Debug`.","Wraps a type implementing `fmt::Display` as a `Value` that…","Wraps a type implementing `fmt::Debug` as a `Value` that…","Visits typed values.","record_i64","Visit a signed 64-bit integer value.","record_u64","Visit an umsigned 64-bit integer value.","record_bool","Visit a boolean value.","record_str","Visit a string value.","record_debug","Visit a value implementing `fmt::Debug`.","Returns a string representing the name of the field.","Returns the [`Field`] named `name`, or `None` if no such…","Returns `true` if `self` contains the given `field`.","Returns an iterator over the `Field`s in this `FieldSet`.","Returns the number of fields in this `FieldSet`.","Metadata describing a [span] or [event].","Describes the level of verbosity of a span or event.","Construct new metadata for a span, with a name, target,…","Returns the set of fields on the described span.","Returns the level of verbosity of the described span.","Returns the name of the span.","Returns a string describing the part of the system where…","module_path","Returns the path to the Rust module where the span…","Returns the name of the source code file where the span…","Returns the line number in the source code file where the…","Returns an opaque `Identifier` that uniquely identifies…","Returns true if the callsite kind is `Event`.","Return true if the callsite kind is `Span`.","Spans represent periods of time in the execution of a…","Identifies a span within the context of a subscriber.","Attributes provided to a `Subscriber` describing a new…","A set of fields recorded by a span.","Constructs a new span ID from the given `u64`.","Returns the span's ID as a  `u64`.","new_root","Returns `Attributes` describing a new span at the root of…","child_of","Returns a reference to the new span's metadata.","Returns a reference to a `ValueSet` containing any values…","Returns true if the new span shoold be a root.","is_contextual","Returns true if the new span's parent should be determined…","Returns the new span's explicitly-specified parent, if…","Records all the fields in this set of `Attributes` with…","Returns `true` if this set of `Attributes` contains a…","Returns true if this set of `Attributes` contains no values.","Constructs a new `Record` from a `ValueSet`.","Records all the fields in this `Record` with the provided…","Returns `true` if this `Record` contains a value for the…","Returns true if this `Record` contains no values.","subscriber","Indicates a [`Subscriber`]'s interest in a particular…","Returns `true` if this `Subscriber` is the same type as `T`.","Returns some reference to this `Subscriber` value if it is…","Returns an `Interest` indicating that the subscriber is…","sometimes","Returns an `Interest` indicating the subscriber is…","Returns an `Interest` indicating the subscriber is always…","Returns `true` if the subscriber is never interested in…","is_sometimes","Returns `true` if the subscriber is sometimes interested…","is_always","Returns `true` if the subscriber is always interested in…","into_iter","tokio_current_thread","blockerror","Run the executor to completion, blocking the thread until…","runtimeouterror","duration","turnerror","Spawn the future on the executor.","Synchronously waits for the provided `future` to complete.","runerror","run_timeout","Perform a single iteration of the event loop.","Returns a reference to the underlying `Park` instance.","get_park_mut","Returns a mutable reference to the underlying `Park`…","taskexecutor","CurrentThread","TaskExecutor","RunTimeoutError","BlockError","TurnError","block_on","tokio_timer","A queue of delayed elements.","DelayQueue","delayqueue","Sets the delay of the item associated with `key` to expire…","Slow down a stream by enforcing a delay between items.","Returns whether the throttle error has occured because of…","Allows a `Future` or `Stream` to execute for a limited…","instant","Returns `true` if the error was caused by the inner value…","A handle to a source of time.","Set the default timer for the duration of the closure.","new_with_now","Create a new `Timer` instance that uses `park` to block…","is_elapsed","Returns `true` if the error was caused by the timer being…","Create a new `Interval` that starts at `at` and yields…","interval","tokio_timer::delay_queue","tokio_timer::timeout","into_future","tokio_timer::clock","tokio_timer::throttle","tokio_timer::timer","ThrottleError","at_capacity","is_shutdown","is_at_capacity","get_park","default","tokio_test","Run the provided closure with a `MockClock` that starts at…","tokio_test::clock","tokio_test::task","MockClock","tokio_buf","tokio_buf::util","sizehint","BufStreamExt","An extension trait for `BufStream`'s that provides a…","Takes two buf streams and creates a new buf stream over…","Consumes all data from `self`, storing it in byte storage…","Limit the number of bytes that the stream can yield.","into_stream","Creates a `Stream` from a `BufStream`.","intostream","tokio_buf::util::error","poll_buf","is_stream_err","Returns `true` if the error was caused by polling the…","IntoStream","FromBufStream","BufStream","CollectError","CollectVecError","CollectBytesError","LimitError","Creates a future which will read all the bytes associated…","tokio_io","shutdown","tokio_io::io","write_buf","allowstdio","write_all","read_to_end","read_exact","prepare_uninitialized_buffer","Prepares an uninitialized buffer to be safe to pass to…","poll_read","Attempt to read from the `AsyncRead` into `buf`.","read_buf","Pull some bytes from this source into the specified…","Provides a `Stream` and `Sink` interface for reading and…","Helper method for splitting this read/write object into…","poll_write","Attempt to write bytes from `buf` into the object.","poll_flush","Attempt to flush the object, ensuring that any buffered…","Write a `Buf` into this value, returning how many bytes…","AllowStdIo","WriteHalf","AsyncRead","AsyncWrite","ReadExact","ReadToEnd","ReadUntil","get_ref","get_mut","tokio_threadpool","blockingerror","threadpool","tokio_threadpool::park","workerid","DefaultPark","ThreadPool","BlockingError","SpawnHandle","DefaultUnpark","Error returned by [`ParkThread`]","Shutdown","tokio_codec","bytesmut","asyncsink","bytescodec","linescodec","decode_eof","framedparts","Returns a reference to the underlying I/O stream wrapped…","Returns a mutable reference to the underlying I/O stream…","Returns a reference to the underlying decoder.","Returns a mutable reference to the underlying decoder.","FramedParts","BytesCodec","LinesCodec","FramedRead","FramedWrite","Queries the file system metadata for a path.","MetadataFuture","OpenOptions","Options and flags which can be used to configure how a…","tokio_fs","openoptions","tokio_fs::file","openfuture","Seek to an offset, in bytes, in a stream.","metadatafuture","Queries metadata about the underlying file.","Create a new `File` instance that shares the same…","permissions","poll_metadata","tokio_fs::os::unix","CreateDirFuture","CreateDirAllFuture","HardLinkFuture","ReadDirFuture","ReadLinkFuture","RemoveDirFuture","RemoveFileFuture","RenameFuture","SetPermissionsFuture","SymlinkMetadataFuture","WriteFile","CloneFuture","CreateFuture","OpenFuture","SeekFuture","SymlinkFuture","tokio_tls","tlsstream","tlsconnector","tlsacceptor","TlsStream","TlsConnector","TlsAcceptor","tokio_reactor","poll_read_ready","poll_write_ready","setfallbackerror","background","Background","PollEvented","Registration","SetFallbackError","shutdown_on_idle","shutdown_now","register","tokio_signal","Creates a stream which receives \"ctrl-c\" notifications…","iostream","iofuture","Creates a new stream which will receive notifications when…","tokio_signal::unix","tokio_udp","udpsocket","socketaddr","UdpFramed","RecvDgram","UdpSocket","SendDgram","A future used to write the entire contents of some data to…","Creates a future that will write the entire contents of…","A unified `Stream` and `Sink` interface to an underlying…","into_parts","as_raw_fd","broadcast","tokio_uds","unixdatagram","Receives data from the socket.","unixlistener","local_addr","Test whether this socket is ready to be read or not.","take_error","Returns the value of the `SO_ERROR` option.","Attempt to accept a connection and create a new connected…","from_std","unixstream","Creates an unnamed pair of connected sockets.","Test whether this socket is ready to be written to or not.","peer_addr","UnixDatagram","UnixDatagramFramed","UnixListener","UnixStream","ConnectFuture","Returns the local address that this socket is bound to.","poll_send","poll_recv","poll_send_to","send_dgram","senddgram","poll_recv_from","recv_dgram","recvdgram","tokio_tcp","tcplistener","tcpstream","connectfuture","Gets the value of the `IP_TTL` option for this socket.","Sets the value for the `IP_TTL` option on this socket.","TcpListener","TcpStream","Incoming","poll_accept","poll_accept_std","incoming","Consumes this listener, returning a stream of the sockets…","connect","Shuts down the read, write, or both halves of this…","max_frame_length","lengthdelimitedcodec","tokio::fs","A reference to an open file on the filesystem.","An error returned when an operation could not be completed…","initializer","Creates a \"by reference\" adaptor for this instance of…","An I/O object representing a TCP socket listening for…","An I/O object representing a TCP stream connected to a…","tokio::net","An I/O object representing a UDP socket.","An I/O object representing a Unix datagram socket.","A Unix socket which can accept connections from other Unix…","A structure representing a connected Unix socket.","Same as `join`, but with more futures.","Flatten the execution of this future when the successful…","futureresult","Creates a \"leaf future\" from an immediate value of a…","Do something with the item of a future, passing it on.","tokio::prelude","An unbounded set of futures.","tokio::prelude::stream","Chain on a computation for when a value is ready, passing…","Concatenate all results of a stream into a single…","catch_unwind","catchunwind","futures_unordered","A stream combinator to concatenate the results of a stream…","An adapter for merging the output of two streams.","A stream which is just a shim over an underlying instance…","Converts an `Iterator` over `Result`s into a `Stream`…","Converts a list of futures into a `Stream` of results from…","An adaptor for a stream of futures to execute the futures…","CatchUnwind","Trait for types which are a placeholder of a value that…","The type of value that this future will resolved with if…","The type of error that this future will resolve with if it…","Query this future to see if its value has become…","Block the current thread until this future is resolved.","Map this future's result to a different type, returning a…","Map this future's error to a different error, returning a…","from_err","Map this future's error to any error implementing `From`…","Chain on a computation for when a future finished, passing…","and_then","Execute another future after this one has resolved…","Execute another future if this one resolves with an error.","Waits for either one of two futures to complete.","Waits for either one of two differently-typed futures to…","Joins the result of two futures, waiting for them both to…","Convert this future into a single element stream.","flatten","flatten_stream","flattenstream","Fuse a future such that `poll` will never again be called…","inspect","Catches unwinding panics while polling the future.","Create a cloneable handle to this future where all handles…","IntoFuture","Class of types which can be converted into a future.","The future that this type can be converted into.","The item that the future may resolve with.","The error that the future may resolve with.","Consumes this object and produces a future.","Composes a function in front of the sink.","A future that completes after the given stream has been…","A stream of values, not all of which may have been…","The type of item this stream will yield on success.","The type of error this stream may generate.","Attempt to pull out the next value of this stream,…","Creates an iterator which blocks the current thread until…","Converts this stream into a `Future`.","streamfuture","Converts a stream of type `T` to a stream of type `U`.","Converts a stream of error type `T` to a stream of error…","Filters the values produced by this stream according to…","filter_map","Filters the values produced by this stream while…","filtermap","Chain on a computation for when an error happens, passing…","Collect all of the values of this stream into a vector,…","Execute an accumulating computation over a stream,…","Flattens a stream of streams into just one continuous…","skip_while","Skip elements on this stream while the predicate provided…","skipwhile","take_while","Take elements from this stream while the predicate…","takewhile","Runs this stream to completion, executing the provided…","Map this stream's error to any error implementing `From`…","Creates a new stream of at most `amt` items of the…","Creates a new stream which skips `amt` items of the…","Fuse a stream such that `poll` will never again be called…","Borrows a stream, rather than consuming it.","Catches unwinding panics while polling the stream.","buffered","An adaptor for creating a buffered list of pending futures.","buffer_unordered","An adaptor for creating a buffered list of pending futures…","bufferunordered","An adapter for zipping two streams together.","Adapter for chaining two stream.","peekable","Creates a new stream which exposes a `peek` method.","An adaptor for chunking up items of the stream inside a…","Creates a stream that selects the next element from either…","Splits this `Stream + Sink` object into separate `Stream`…","Do something with each item of this stream, afterwards…","inspect_err","Do something with the error of this stream, afterwards…","inspecterr","The `Read` trait allows for reading bytes from a source.","read_vectored","Like `read`, except that it reads into a slice of buffers.","Determines if this `Read`er can work with buffers of…","Read all bytes until EOF in this source, placing them into…","read_to_string","Read all bytes until EOF in this source, appending them to…","Read the exact number of bytes required to fill `buf`.","Transforms this `Read` instance to an [`Iterator`] over…","Creates an adaptor which will chain this stream with…","Creates an adaptor which will read at most `limit` bytes…","A trait for objects which are byte-oriented sinks.","Write a buffer into this writer, returning how many bytes…","write_vectored","Like `write`, except that it writes from a slice of buffers.","Flush this output stream, ensuring that all intermediately…","Attempts to write an entire buffer into this writer.","write_fmt","Writes a formatted string into this writer, returning any…","arguments","Read bytes asynchronously.","Writes bytes asynchronously.","Initiates or attempts to shut down this writer, returning…","enumerate","tokio::sync","tokio::sync::mpsc","tokio::sync::oneshot","tokio::sync::watch","tokio::timer","timeout","Creates a new future which allows `self` until `timeout`.","throttle","Throttle down the stream by enforcing a fixed delay…","Creates a new stream which gives the current iteration…","Creates a new stream which allows `self` until `timeout`.","FutureExt","An extension trait for `Future` that provides a variety of…","StreamExt","tokio::util","An extension trait for `Stream` that provides a variety of…","Executor","Start the Tokio runtime using the supplied future to…","tokio::runtime","Returns a new runtime builder initialized with default…","Set the `Clock` instance that will be used by the runtime.","Create the configured `Runtime`.","runtime","Spawn a future onto the Tokio runtime.","block_on_all","tokio::codec","tokio::codec::length_delimited","tokio::fs::file","tokio::fs::os::unix","tokio::io","tokio::net::tcp","tokio::net::udp","tokio::net::unix","tokio::prelude::future","tokio::prelude::stream::futures_unordered","tokio::prelude::task","tokio::reactor","tokio::sync::lock","tokio::sync::mpsc::error","tokio::sync::oneshot::error","tokio::sync::watch::error","tokio::timer::delay_queue","tokio::timer::timeout","tokio::executor","tokio::runtime::current_thread","errorkind","unparkevent","futuresordered","futuresunordered","from_iter","executeerrorkind","execute","framedread","framedwrite","shareditem","sharederror","Acquires a reference to the underlying stream that this…","Acquires a mutable reference to the underlying stream that…","Consumes this combinator, returning the underlying stream.","reuniteerror","Attempts to put the two \"halves\" of a split `Stream +…","atomictask","is_not_ready","pollevented","LengthDelimitedCodec","ErrorKind","FutureFrom","ExecuteErrorKind","MergedItem","ReuniteError","AsyncSink","Builder","FrameTooBig","ExecuteError","SelectAll","SharedItem","SelectNext","SharedError","FlattenStream","FuturesUnordered","TakeWhile","StreamFuture","SplitStream","InspectErr","FilterMap","SplitSink","FuturesOrdered","IterResult","IterStream","BufferUnordered","FutureSender","SkipWhile","UnparkEvent","PollEvented2","Errors returned by `Executor::spawn`.","Executes futures on the default executor for the current…","Return a new `SpawnError` reflecting a shutdown executor…","Return a new `SpawnError` reflecting an executor at…","Returns `true` if the error reflects a shutdown executor…","Returns `true` if the error reflects an executor at…","Returns a handle to the default executor for the current…","A value that executes futures.","Spawns a future object to run on this executor.","A value that spawns futures of a specific type.","Spawns a future to run on this executor.","Executes futures on the current thread.","Handle to spawn a future on the corresponding…","Executes a future on the current thread.","Returns an executor that executes futures on the current…","spawn_local","Spawn a future onto the current `CurrentThread` instance.","Utilities for tracking time.","A future that completes at a specified instant in time.","Errors encountered by the timer implementation.","Interval","A stream representing notifications at fixed interval","A configurable source of time.","Returns an `Instant` corresponding to \"now\".","delay_queue","An entry in `DelayQueue` that has expired and removed.","Token to a value stored in a `DelayQueue`.","Create a new, empty, `DelayQueue`","with_capacity_and_handle","Create a new, empty, `DelayQueue` backed by the specified…","with_capacity","Create a new, empty, `DelayQueue` with the specified…","insert_at","Insert `value` into the queue set to expire at a specific…","Insert `value` into the queue set to expire after the…","Remove the item associated with `key` from the queue.","Clears the queue, removing all items.","Returns the number of elements the queue can hold without…","Reserve capacity for at least `additional` more items to…","Returns `true` if there are no items in the queue.","Returns a reference to the inner value.","Returns a mutable reference to the inner value.","Consumes `self` and returns the inner value.","Allows a future or stream to execute for a maximum amount…","Error returned by `Timeout`.","Create a new `Timeout` that allows `value` to execute for…","Gets a reference to the underlying value in this timeout.","Gets a mutable reference to the underlying value in this…","Consumes this timeout, returning the underlying value.","Create a new `Timeout` that completes when `future`…","Create a new `Error` representing the inner value…","Consumes `self`, returning the inner future error.","Create a new `Error` representing the inner value not…","Creates a new `Error` representing an error encountered by…","Returns `true` if the error was caused by the timer.","into_timer","Consumes `self`, returning the error raised by the timer…","current","Create a new `Delay` instance that elapses at `deadline`.","Returns the instant at which the future will complete.","Returns true if the `Delay` has elapsed","Reset the `Delay` instance to a new deadline.","Create an error representing a shutdown timer.","Create an error representing a timer at capacity.","new_interval","Creates new `Interval` that yields with interval of…","Timeout","collect","size_hint","Collect","A future which will copy all data from a reader into a…","A future used to fully flush an I/O object.","A future which can be used to easily read exactly enough…","A future which can be used to easily read the entire…","A future which can be used to easily read the contents of…","A future used to fully shutdown an I/O object.","WriteAll","Combinator created by the top-level `lines` method which…","ReadHalf","The readable half of an object returned from…","The writable half of an object returned from…","Creates a future which represents copying all the bytes…","Creates a future which will entirely flush an I/O object…","Tries to read some bytes directly into the given `buf` in…","Creates a future which will read exactly enough bytes to…","readexact","readtoend","read_until","readuntil","Creates a future which will entirely shutdown an I/O…","Creates a new stream from the I/O object given…","Returns the underlying I/O object.","Reunite with a previously split `WriteHalf`.","writehalf","Reunite with a previously split `ReadHalf`.","builder","keep_alive","panic_handler","name_prefix","stack_size","Set the stack size (in bytes) for worker threads.","after_start","Execute function `f` after each thread is started but…","before_stop","Execute function `f` before each thread stops.","Utilities for encoding and decoding frames.","Decoding of frames via buffers.","The type of decoded frames.","The type of unrecoverable frame decoding errors.","Attempts to decode a frame from the provided buffer of…","A default method available to be called when there are no…","Trait of helper objects to write out messages as bytes,…","The type of items consumed by the `Encoder`","The type of encoding errors.","Encodes a frame into the buffer provided.","`FramedParts` contains an export of the data of a Framed…","The inner transport used to read bytes to and write bytes to","The codec","The buffer with read but unprocessed data.","A buffer with unprocessed data which are not written yet.","A `Stream` of messages decoded from an `AsyncRead`.","A `Sink` of frames encoded to an `AsyncWrite`.","A simple `Codec` implementation that just ships bytes…","A simple `Codec` implementation that splits up data into…","Creates a new `BytesCodec` for shipping around raw bytes.","Returns a `LinesCodec` for splitting up data into lines.","new_with_max_length","Returns a `LinesCodec` with a maximum line length limit.","max_length","Returns the maximum line length when decoding.","from_parts","Returns a reference to the underlying codec wrapped by…","codec_mut","Returns a mutable reference to the underlying codec…","Consumes the `Frame`, returning its underlying I/O stream.","Consumes the `Frame`, returning its underlying I/O stream,…","Create a new, default, `FramedParts`","Creates a new `FramedRead` with the given `decoder`.","Consumes the `FramedRead`, returning its underlying I/O…","decoder","decoder_mut","Creates a new `FramedWrite` with the given `encoder`.","Consumes the `FramedWrite`, returning its underlying I/O…","encoder","encoder_mut","ReadFile","A future used to open a file and read its entire contents…","A handle to the standard error stream of a process.","A handle to the standard input stream of a process.","A handle to the standard output stream of a process.","A future used to open a file for writing and write the…","create_dir","Creates a new, empty directory at the provided path","createdirfuture","create_dir_all","Recursively create a directory and all of its parent…","createdirallfuture","hard_link","Creates a new hard link on the filesystem.","hardlinkfuture","Creates a future which will open a file for reading and…","Returns a stream over the entries within a directory.","readdirfuture","read_link","Reads a symbolic link, returning the file that the link…","readlinkfuture","remove_dir","Removes an existing, empty directory.","removedirfuture","remove_file","Removes a file from the filesystem.","removefilefuture","Rename a file or directory to a new name, replacing the…","renamefuture","set_permissions","Changes the permissions found on a file or a directory.","setpermissionsfuture","Constructs a new handle to the standard error of the…","Constructs a new handle to the standard input of the…","Constructs a new handle to the standard output of the…","symlink_metadata","symlinkmetadatafuture","Creates a future that will open a file for writing and…","writefile","Types for working with [`File`].","Future returned by `File::try_clone`.","Future returned by `File::create` and resolves to a `File`…","Future returned by `File::metadata` and resolves to a…","Future returned by `File::open` and resolves to a `File`…","Future returned by `File::seek`.","Creates a blank new set of options ready for configuration.","See the underlying [`read`] call for details.","See the underlying [`write`] call for details.","See the underlying [`append`] call for details.","See the underlying [`truncate`] call for details.","See the underlying [`create`] call for details.","create_new","See the underlying [`create_new`] call for details.","Opens a file at `path` with the options specified by `self`.","Attempts to open a file in read-only mode.","Opens a file in write-only mode.","createfuture","Convert a [`std::fs::File`][std] to a…","poll_seek","seekfrom","seekfuture","poll_sync_all","Attempts to sync all OS-internal metadata to disk.","poll_sync_data","This function is similar to `poll_sync_all`, except that…","poll_set_len","Truncates or extends the underlying file, updating the…","poll_try_clone","try_clone","clonefuture","poll_set_permissions","Changes the permissions on the underlying file.","Destructures the `tokio_fs::File` into a…","OS-specific functionality.","Unix-specific extensions to primitives in the `tokio_fs`…","Future returned by `symlink`.","Creates a new symbolic link on the filesystem.","symlinkfuture","into_std","Event loop that drives Tokio I/O resources.","Handle to the reactor running on a background thread.","Associates an I/O resource that implements the…","Associates an I/O resource with the reactor instance that…","The core reactor, or event loop.","A reference to a reactor.","Return value from the `turn` method on `Reactor`.","Returns a reference to the reactor handle.","Shutdown the reactor on idle.","Shutdown the reactor immediately","Run the reactor on its thread until the process terminates.","Creates a new `PollEvented` associated with the default…","new_with_handle","Creates a new `PollEvented` associated with the specified…","Returns a shared reference to the underlying I/O object…","Returns a mutable reference to the underlying I/O object…","Consumes self, returning the inner I/O object","Check the I/O resource's read readiness state.","clear_read_ready","Clears the I/O resource's read readiness state and…","Check the I/O resource's write readiness state.","clear_write_ready","Resets the I/O resource's write readiness state and…","Create a new `Registration`.","registration","Register the I/O resource with the default reactor.","deregister","Deregister the I/O resource from the reactor it is…","register_with","Register the I/O resource with the specified reactor.","Poll for events on the I/O resource's read readiness stream.","take_read_ready","Consume any pending read readiness event.","Poll for events on the I/O resource's write readiness…","take_write_ready","Consume any pending write readiness event.","Creates a new event loop, returning any error that…","reactor","Returns a handle to this event loop which can be sent…","set_fallback","Configures the fallback handle to be returned from…","Performs one iteration of the event loop, blocking on…","Returns true if the reactor is currently idle.","Run this reactor on a background thread.","Returns a \"default\" handle, i.e., a handle that lazily…","UDP bindings for `tokio`.","A future used to receive a datagram from a UDP socket.","Create a new `UdpFramed` backed by the given socket and…","udpframed","Consumes the `Framed`, returning its underlying I/O stream.","Consume the `RecvDgram`, returning the socket and buffer.","This function will create a new UDP socket and attempt to…","Creates a new `UdpSocket` from the previously bound socket…","Connects the UDP socket setting the default destination…","Sends data on the socket to the remote address to which it…","Receives a single datagram message on the socket from the…","Sends data on the socket to the given address. On success,…","Receives data from the socket. On success, returns the…","Creates a future that receive a datagram to be written to…","Check the UDP socket's read readiness state.","Check the UDP socket's write readiness state.","Gets the value of the `SO_BROADCAST` option for this socket.","set_broadcast","Sets the value of the `SO_BROADCAST` option for this socket.","multicast_loop_v4","Gets the value of the `IP_MULTICAST_LOOP` option for this…","set_multicast_loop_v4","Sets the value of the `IP_MULTICAST_LOOP` option for this…","multicast_ttl_v4","Gets the value of the `IP_MULTICAST_TTL` option for this…","set_multicast_ttl_v4","Sets the value of the `IP_MULTICAST_TTL` option for this…","multicast_loop_v6","Gets the value of the `IPV6_MULTICAST_LOOP` option for…","set_multicast_loop_v6","Sets the value of the `IPV6_MULTICAST_LOOP` option for…","join_multicast_v4","Executes an operation of the `IP_ADD_MEMBERSHIP` type.","join_multicast_v6","Executes an operation of the `IPV6_ADD_MEMBERSHIP` type.","leave_multicast_v4","Executes an operation of the `IP_DROP_MEMBERSHIP` type.","leave_multicast_v6","Executes an operation of the `IPV6_DROP_MEMBERSHIP` type.","Stream of listeners","A future for receiving datagrams from a Unix datagram…","A future for writing a buffer to a Unix datagram socket.","Future returned by `UnixStream::connect` which will…","Credentials of a process","UID (user ID) of the process","GID (group ID) of the process","Creates a new `UnixDatagram` bound to the specified path.","Consumes a `UnixDatagram` in the standard library and…","Creates a new `UnixDatagram` which is not bound to any…","Connects the socket to the specified address.","Returns the address of this socket's peer.","Returns a future for receiving a datagram. See the…","Sends data on the socket to the specified address.","Sends data on the socket to the socket's peer.","Returns a future sending the data in buf to the socket at…","Shut down the read, write, or both halves of this…","Create a new `UnixDatagramFramed` backed by the given…","unixdatagramframed","Creates a new `UnixListener` bound to the specified path.","Consumes a `UnixListener` in the standard library and…","Returns the local socket address of this listener.","Connects to the socket named by `path`.","Consumes a `UnixStream` in the standard library and…","Returns the socket address of the local half of this…","Returns the socket address of the remote half of this…","Returns effective credentials of the process which called…","TCP bindings for `tokio`.","Stream returned by the `TcpListener::incoming` function…","Future returned by `TcpStream::connect` which will resolve…","Create a new TCP listener associated with this event loop.","Create a new TCP listener from the standard library's TCP…","Returns the local address that this listener is bound to.","Create a new TCP stream connected to the specified address.","Create a new `TcpStream` from a `net::TcpStream`.","connect_std","Creates a new `TcpStream` from the pending socket inside…","Check the TCP stream's read readiness state.","Check the TCP stream's write readiness state.","Returns the local address that this stream is bound to.","Returns the remote address that this stream is connected…","Receives data on the socket from the remote address to…","Gets the value of the `TCP_NODELAY` option on this socket.","set_nodelay","Sets the value of the `TCP_NODELAY` option on this socket.","recv_buffer_size","Gets the value of the `SO_RCVBUF` option on this socket.","set_recv_buffer_size","Sets the value of the `SO_RCVBUF` option on this socket.","send_buffer_size","Gets the value of the `SO_SNDBUF` option on this socket.","set_send_buffer_size","Sets the value of the `SO_SNDBUF` option on this socket.","Returns whether keepalive messages are enabled on this…","set_keepalive","Sets whether keepalive messages are enabled to be sent on…","Reads the linger duration for this socket by getting the…","Sets the linger duration of this socket by setting the…","An asynchronous `Mutex`-like type.","An asynchronous mutual exclusion primitive useful for…","A handle to a held `Lock`.","Creates a new lock in an unlocked state ready for use.","Try to acquire the lock.","A multi-producer, single-consumer queue for sending values…","Receive values from the associated `Sender`.","Send values to the associated `Receiver`.","Receive values from the associated `UnboundedSender`.","Send values to the associated `UnboundedReceiver`.","Create a bounded mpsc channel for communicating between…","unbounded_channel","Create an unbounded mpsc channel for communicating between…","Check if the `Sender` is ready to handle a value.","Attempts to send a message on this `Sender`, returning the…","Attempts to send a message on this `UnboundedSender`…","Channel error types","Error returned by `Receiver`.","Error returned by the `Sender`.","Error returned by `Sender::try_send`.","Error returned by `UnboundedReceiver`.","Error returned by the `UnboundedSender`.","Returned by `UnboundedSender::try_send` when the channel…","A channel for sending a single message between…","Sends a value to the associated `Receiver`.","Receive a value from the associated `Sender`.","Create a new one-shot channel for sending single values…","Oneshot error types","Error returned by the `Future` implementation for…","Error returned by the `try_recv` function on `Receiver`.","Completes this oneshot with a successful result.","Prevent the associated [`Sender`] handle from sending a…","Attempts to receive a value outside of the context of a…","A synchronization primitive for task notification.","Create an `AtomicTask` initialized with the given `Task`","Registers the current task to be notified on calls to…","register_task","Registers the provided task to be notified on calls to…","Notifies the task that last called `register`.","A single-producer, multi-consumer channel that only…","Receives values from the associated `Sender`.","Sends values to the associated `Receiver`.","Returns a reference to the inner value","Create a new watch channel, returning the \"send\" and…","Watch error types","Error produced when receiving a value fails.","Error produced when sending a value fails.","Returns a reference to the most recently sent value","Attempts to receive the latest value sent via the channel.","Broadcast a new value via the channel, notifying all…","Returns `Ready` when all receivers have dropped.","Did the send fail because the channel has been closed?","Did the send fail because the channel was at capacity?"];
searchIndex["tokio"]={"doc":"A runtime for writing reliable, asynchronous, and slim…","i":[[5,"run","tokio",R[647],N,[[["f"]]]],[0,"clock",E,R[746],N,N],[5,"now","tokio::clock",R[747],N,[[],[R[274]]]],[0,"codec","tokio",R[829],N,N],[3,R[378],R[655],R[846],N,N],[8,"Decoder",E,R[830],N,N],[16,"Item",E,R[831],0,N],[16,"Error",E,R[832],0,N],[10,"decode",E,R[833],0,[[[R[367]],["self"]],[[R[37],[R[8]]],[R[8]]]]],[11,R[371],E,R[834],0,[[[R[367]],["self"]],[[R[37],[R[8]]],[R[8]]]]],[11,"framed",E,R[338],0,[[[T]],["framed"]]],[8,"Encoder",E,R[835],N,N],[16,"Item",E,R[836],1,N],[16,"Error",E,R[837],1,N],[10,"encode",E,R[838],1,[[[R[367]],["self"]],[R[37]]]],[3,"Framed",E,R[447],N,N],[3,R[377],E,R[839],N,N],[12,"io",E,R[840],2,N],[12,"codec",E,R[841],2,N],[12,R[336],E,R[842],2,N],[12,R[327],E,R[843],2,N],[3,R[380],E,R[844],N,N],[3,R[381],E,R[845],N,N],[3,R[379],E,R[847],N,N],[0,"length_delimited",E,"Frame a stream of bytes based on a length prefix",N,N],[3,R[701],R[656],"Configure length delimited `LengthDelimitedCodec`s.",N,N],[3,R[702],E,"An error when the number of bytes read is more than max…",N,N],[3,R[694],E,"A codec for frames delimited by a frame head specifying…",N,N],[11,"new",E,"Creates a new `LengthDelimitedCodec` with the default…",3,[[],["self"]]],[11,R[494],E,"Returns the current max frame setting",3,[[["self"]],["usize"]]],[11,"set_max_frame_length",E,"Updates the max frame setting.",3,[[["self"],["usize"]]]],[11,"new",E,"Creates a new length delimited codec builder with default…",4,[[],[R[819]]]],[11,"big_endian",E,"Read the length field as a big endian integer",4,[[["self"]],["self"]]],[11,"little_endian",E,"Read the length field as a little endian integer",4,[[["self"]],["self"]]],[11,"native_endian",E,"Read the length field as a native endian integer",4,[[["self"]],["self"]]],[11,R[494],E,"Sets the max frame length",4,[[["self"],["usize"]],["self"]]],[11,"length_field_length",E,"Sets the number of bytes used to represent the length field",4,[[["self"],["usize"]],["self"]]],[11,"length_field_offset",E,"Sets the number of bytes in the header before the length…",4,[[["self"],["usize"]],["self"]]],[11,"length_adjustment",E,"Delta between the payload length specified in the header…",4,[[["isize"],["self"]],["self"]]],[11,"num_skip",E,"Sets the number of bytes to skip before reading the payload",4,[[["self"],["usize"]],["self"]]],[11,"new_codec",E,"Create a configured length delimited `LengthDelimitedCodec`",4,[[["self"]],[R[495]]]],[11,"new_read",E,"Create a configured length delimited `FramedRead`",4,[[["self"],[T]],[[R[682],[R[495]]],[R[495]]]]],[11,"new_write",E,"Create a configured length delimited `FramedWrite`",4,[[["self"],[T]],[[R[683],[R[495]]],[R[495]]]]],[11,"new_framed",E,"Create a configured length delimited `Framed`",4,[[["self"],[T]],[[R[495]],["framed",[R[495]]]]]],[0,"fs","tokio","Asynchronous filesystem manipulation operations.",N,N],[3,R[384],R[496],R[385],N,N],[5,R[875],E,R[876],N,[[["p"]],[R[877]]]],[5,R[878],E,R[879],N,[[["p"]],[R[880]]]],[0,"file",E,R[908],N,N],[3,"File",R[657],R[497],N,N],[3,R[410],E,R[912],N,N],[3,R[409],E,R[910],N,N],[3,R[383],E,R[911],N,N],[3,R[408],E,R[909],N,N],[3,R[384],E,R[385],N,N],[3,R[411],E,R[913],N,N],[5,R[881],R[496],R[882],N,[[["q"],["p"]],[R[883]]]],[5,R[2],E,R[382],N,[[["p"]],[R[391]]]],[0,"os",E,R[942],N,N],[0,"unix","tokio::fs::os",R[943],N,N],[5,"symlink",R[658],R[945],N,[[["q"],["p"]],[R[946]]]],[3,R[412],E,R[944],N,N],[5,"read_dir",R[496],R[885],N,[[["p"]],[R[886]]]],[5,R[887],E,R[888],N,[[["p"]],[R[889]]]],[5,"read",E,R[884],N,[[["p"]],["readfile"]]],[5,"write",E,R[906],N,[[["c"],["p"]],[R[907]]]],[3,R[869],E,R[870],N,N],[3,R[407],E,R[874],N,N],[5,R[890],E,R[891],N,[[["p"]],[R[892]]]],[5,R[893],E,R[894],N,[[["p"]],[R[895]]]],[5,"rename",E,R[896],N,[[["q"],["p"]],[R[897]]]],[5,R[898],E,R[899],N,[[["p"],[R[394]]],[R[900]]]],[5,R[904],E,R[382],N,[[["p"]],[R[905]]]],[3,"File",E,R[497],N,N],[0,"io","tokio","Asynchronous I/O.",N,N],[8,R[347],R[659],R[626],N,N],[11,R[332],E,R[333],5,[[["self"]],["bool"]]],[11,R[334],E,R[335],5,[[["self"]],[["async",["usize"]],[R[37],["async","error"]],["error"]]]],[11,R[336],E,R[337],5,[[["b"],["self"]],[["async",["usize"]],[R[37],["async","error"]],["error"]]]],[11,"framed",E,R[338],5,[[[T]],["framed"]]],[11,"split",E,R[339],5,[[]]],[8,R[348],E,R[627],N,N],[11,R[340],E,R[341],6,[[["self"]],[["async",["usize"]],[R[37],["async","error"]],["error"]]]],[11,R[342],E,R[343],6,[[["self"]],[[R[37],["async","error"]],["async"],["error"]]]],[10,R[325],E,R[628],6,[[["self"]],[[R[37],["async","error"]],["async"],["error"]]]],[11,R[327],E,R[344],6,[[["b"],["self"]],[["async",["usize"]],[R[37],["async","error"]],["error"]]]],[5,"stderr",E,R[901],N,[[],["stderr"]]],[5,"stdin",E,R[902],N,[[],["stdin"]]],[5,"stdout",E,R[903],N,[[],["stdout"]]],[3,"Stderr",E,R[871],N,N],[3,"Stdin",E,R[872],N,N],[3,"Stdout",E,R[873],N,N],[5,"copy",E,R[805],N,[[["w"],["r"]],["copy"]]],[5,"flush",E,R[806],N,[[["a"]],["flush"]]],[5,"lines",E,R[814],N,[[["a"]],["lines"]]],[5,"read",E,R[807],N,[[[T],["r"]],["read"]]],[5,R[331],E,R[808],N,[[["a"],[T]],[R[809]]]],[5,R[330],E,R[323],N,[[["vec",["u8"]],["a"],["u8"]],[R[810]]]],[5,R[811],E,R[323],N,[[["vec",["u8"]],["a"],["u8"]],[R[812]]]],[5,R[325],E,R[813],N,[[["a"]],[R[325]]]],[5,R[329],E,R[446],N,[[["a"],[T]],["writeall"]]],[3,"Copy",E,R[794],N,N],[3,"Flush",E,R[795],N,N],[3,"Lines",E,R[801],N,N],[3,R[349],E,R[796],N,N],[3,R[802],E,R[803],N,N],[3,R[350],E,R[797],N,N],[3,R[351],E,R[798],N,N],[3,R[365],E,R[799],N,N],[3,R[800],E,R[445],N,N],[3,R[346],E,R[804],N,N],[3,"Error",E,"The error type for I/O operations of the [`Read`],…",N,N],[4,R[695],E,"A list specifying general categories of I/O error.",N,N],[13,"NotFound",E,"An entity was not found, often a file.",7,N],[13,"PermissionDenied",E,"The operation lacked the necessary privileges to complete.",7,N],[13,"ConnectionRefused",E,"The connection was refused by the remote server.",7,N],[13,"ConnectionReset",E,"The connection was reset by the remote server.",7,N],[13,"ConnectionAborted",E,"The connection was aborted (terminated) by the remote…",7,N],[13,"NotConnected",E,"The network operation failed because it was not connected…",7,N],[13,"AddrInUse",E,"A socket address could not be bound because the address is…",7,N],[13,"AddrNotAvailable",E,"A nonexistent interface was requested or the requested…",7,N],[13,"BrokenPipe",E,"The operation failed because a pipe was closed.",7,N],[13,"AlreadyExists",E,"An entity already exists, often a file.",7,N],[13,"WouldBlock",E,"The operation needs to block to complete, but the blocking…",7,N],[13,"InvalidInput",E,"A parameter was incorrect.",7,N],[13,"InvalidData",E,"Data not valid for the operation were encountered.",7,N],[13,"TimedOut",E,"The I/O operation's timeout expired, causing it to be…",7,N],[13,"WriteZero",E,R[498],7,N],[13,"Interrupted",E,"This operation was interrupted.",7,N],[13,"Other",E,"Any I/O error not part of this list.",7,N],[13,"UnexpectedEof",E,R[498],7,N],[8,"Read",E,R[606],N,N],[10,"read",E,R[337],8,[[["self"]],[[R[37],["usize","error"]],["usize"],["error"]]]],[11,R[607],E,R[608],8,[[["self"]],[[R[37],["usize","error"]],["usize"],["error"]]]],[11,R[499],E,R[609],8,[[["self"]],[R[499]]]],[11,R[330],E,R[610],8,[[["vec"],["self"]],[[R[37],["usize","error"]],["usize"],["error"]]]],[11,R[611],E,R[612],8,[[["self"],[R[87]]],[[R[37],["usize","error"]],["usize"],["error"]]]],[11,R[331],E,R[613],8,[[["self"]],[[R[37],["error"]],["error"]]]],[11,"by_ref",E,R[500],8,[[["self"]],["self"]]],[11,"bytes",E,R[614],8,[[],["bytes"]]],[11,"chain",E,R[615],8,[[["r"]],["chain"]]],[11,"take",E,R[616],8,[[["u64"]],["take"]]],[6,"Result",E,"A specialized `Result` type for I/O operations.",N,N],[8,"Write",E,R[617],N,N],[10,"write",E,R[618],9,[[["self"]],[[R[37],["usize","error"]],["usize"],["error"]]]],[11,R[619],E,R[620],9,[[["self"]],[[R[37],["usize","error"]],["usize"],["error"]]]],[10,"flush",E,R[621],9,[[["self"]],[[R[37],["error"]],["error"]]]],[11,R[329],E,R[622],9,[[["self"]],[[R[37],["error"]],["error"]]]],[11,R[623],E,R[624],9,[[[R[625]],["self"]],[[R[37],["error"]],["error"]]]],[11,"by_ref",E,R[500],9,[[["self"]],["self"]]],[0,"net","tokio","TCP/UDP/Unix bindings for `tokio`.",N,N],[3,R[485],R[503],R[501],N,N],[3,R[486],E,R[502],N,N],[3,R[441],E,R[447],N,N],[3,R[443],E,R[504],N,N],[3,R[465],E,R[505],N,N],[3,R[466],E,R[447],N,N],[3,R[467],E,R[506],N,N],[3,R[468],E,R[507],N,N],[0,"tcp",E,R[1059],N,N],[3,R[469],R[660],R[1061],N,N],[3,R[487],E,R[1060],N,N],[3,R[485],E,R[501],N,N],[3,R[486],E,R[502],N,N],[0,"udp",R[503],R[993],N,N],[3,R[442],R[661],R[994],N,N],[3,R[444],E,R[445],N,N],[3,R[441],E,R[447],N,N],[3,R[443],E,R[504],N,N],[0,"unix",R[503],"Unix domain socket bindings for `tokio` (only available on…",N,N],[3,R[469],R[662],R[1035],N,N],[3,R[487],E,R[1032],N,N],[3,R[442],E,R[1033],N,N],[3,R[444],E,R[1034],N,N],[3,"UCred",E,R[1036],N,N],[12,"uid",E,R[1037],10,N],[12,"gid",E,R[1038],10,N],[3,R[465],E,R[505],N,N],[3,R[466],E,R[447],N,N],[3,R[467],E,R[506],N,N],[3,R[468],E,R[507],N,N],[0,"prelude","tokio","A \"prelude\" for users of the `tokio` crate.",N,N],[0,"future",R[513],"Futures",N,N],[8,"Future",R[663],R[528],N,N],[16,"Item",E,R[529],11,N],[16,"Error",E,R[530],11,N],[10,"poll",E,R[531],11,[[["self"]],[[R[37],["async"]],["async"]]]],[11,"wait",E,R[532],11,[[],[R[37]]]],[11,"map",E,R[533],11,[[["f"]],["map"]]],[11,"map_err",E,R[534],11,[[["f"]],["maperr"]]],[11,R[535],E,R[536],11,[[],["fromerr"]]],[11,"then",E,R[537],11,[[["f"]],["then"]]],[11,R[538],E,R[539],11,[[["f"]],["andthen"]]],[11,"or_else",E,R[540],11,[[["f"]],["orelse"]]],[11,"select",E,R[541],11,[[["b"]],["select"]]],[11,"select2",E,R[542],11,[[["b"]],["select2"]]],[11,"join",E,R[543],11,[[["b"]],["join"]]],[11,"join3",E,R[508],11,[[["c"],["b"]],["join3"]]],[11,"join4",E,R[508],11,[[["c"],["d"],["b"]],["join4"]]],[11,"join5",E,R[508],11,[[["e"],["c"],["d"],["b"]],["join5"]]],[11,R[309],E,R[544],11,[[],[R[311]]]],[11,R[545],E,R[509],11,[[],[R[545]]]],[11,R[546],E,R[509],11,[[],[R[547]]]],[11,"fuse",E,R[548],11,[[],["fuse"]]],[11,R[549],E,R[512],11,[[["f"]],[R[549]]]],[11,R[518],E,R[550],11,[[],[R[519]]]],[11,"shared",E,R[551],11,[[],["shared"]]],[8,R[552],E,R[553],N,N],[16,"Future",E,R[554],12,N],[16,"Item",E,R[555],12,N],[16,"Error",E,R[556],12,N],[10,R[286],E,R[557],12,[[]]],[8,R[696],E,"Asynchronous conversion from a type `T`.",N,N],[16,"Future",E,"The future for the conversion.",13,N],[16,"Error",E,"Possible errors during conversion.",13,N],[10,"future_from",E,"Consume the given value, beginning the conversion.",13,[[[T]]]],[8,R[646],E,"A trait for types which can spawn fresh futures.",N,N],[10,R[681],E,"Spawns a future to run on this `Executor`, typically in…",14,[[["self"],["f"]],[[R[117]],[R[37],[R[117]]]]]],[3,R[703],E,"Errors returned from the `Spawn::spawn` function.",N,N],[4,R[697],E,"Kinds of errors that can be returned from the…",N,N],[13,R[365],E,"This executor has shut down and will no longer accept new…",15,N],[13,"NoCapacity",E,"This executor has no more capacity to run more futures.…",15,N],[3,R[527],E,"Future for the `catch_unwind` combinator.",N,N],[3,"LoopFn",E,"A future implementing a tail-recursive loop.",N,N],[3,"Fuse",E,"A future which \"fuses\" a future once it's been resolved.",N,N],[3,"MapErr",E,"Future for the `map_err` combinator, changing the error…",N,N],[3,R[704],E,"Future for the `select_all` combinator, waiting for one of…",N,N],[3,"Finished",E,"A future representing a value that is immediately ready.",N,N],[4,"Loop",E,"The status of a `loop_fn` loop.",N,N],[13,"Break",E,"Indicates that the loop has completed with output `T`.",16,N],[13,"Continue",E,"Indicates that the loop function should be called again…",16,N],[3,R[705],E,"A wrapped item of the original future that is cloneable…",N,N],[3,"Join3",E,"Future for the `join3` combinator, waiting for three…",N,N],[4,"Either",E,"Combines two different futures yielding the same item and…",N,N],[13,"A",E,"First branch of the type",17,N],[13,"B",E,"Second branch of the type",17,N],[3,R[706],E,"Future yielded as the second result in a `Select` future.",N,N],[5,"join_all",E,"Creates a future which represents a collection of the…",N,[[["i"]],["joinall"]]],[3,"Shared",E,"A future that is cloneable and can be polled in multiple…",N,N],[5,R[37],E,"Creates a new \"leaf future\" which will resolve with the…",N,[[[R[37]]],[R[510]]]],[5,"empty",E,"Creates a future which never resolves, representing a…",N,[[],["empty"]]],[5,"err",E,R[511],N,[[["e"]],[R[510]]]],[3,"Empty",E,"A future which is never resolved.",N,N],[3,"OrElse",E,"Future for the `or_else` combinator, chaining a…",N,N],[5,"ok",E,R[511],N,[[[T]],[R[510]]]],[5,"select_all",E,"Creates a new future which will select over a list of…",N,[[["i"]],["selectall"]]],[3,R[793],E,"A future which takes a list of futures and resolves with a…",N,N],[3,"Lazy",E,"A future which defers creation of the actual future until…",N,N],[3,R[707],E,"A wrapped error of the original future that is cloneable…",N,N],[3,"Then",E,"Future for the `then` combinator, chaining computations on…",N,N],[3,"PollFn",E,"A future which adapts a function returning `Poll`.",N,N],[5,"lazy",E,"Creates a new future which will eventually be the same as…",N,[[["f"]],["lazy"]]],[3,R[708],E,"Future for the `flatten_stream` combinator, flattening a…",N,N],[3,"Map",E,"Future for the `map` combinator, changing the type of a…",N,N],[3,"Flatten",E,"Future for the `flatten` combinator, flattening a…",N,N],[5,"poll_fn",E,"Creates a new future wrapping around a function returning…",N,[[["f"]],["pollfn"]]],[3,"Join",E,"Future for the `join` combinator, waiting for two futures…",N,N],[3,"Select2",E,"Future for the `select2` combinator, waiting for one of…",N,N],[3,"Select",E,"Future for the `select` combinator, waiting for one of two…",N,N],[3,"FromErr",E,"Future for the `from_err` combinator, changing the error…",N,N],[3,R[316],E,"Future that forwards one element from the underlying…",N,N],[3,"SelectOk",E,"Future for the `select_ok` combinator, waiting for one of…",N,N],[5,"select_ok",E,"Creates a new future which will select the first…",N,[[["i"]],["selectok"]]],[3,"AndThen",E,"Future for the `and_then` combinator, chaining a…",N,N],[3,"Join5",E,"Future for the `join5` combinator, waiting for five…",N,N],[5,"loop_fn",E,"Creates a new future implementing a tail-recursive loop.",N,[[["s"],["f"]],["loopfn"]]],[3,"Inspect",E,R[512],N,N],[3,"Join4",E,"Future for the `join4` combinator, waiting for four…",N,N],[0,"stream",R[513],"Asynchronous streams",N,N],[0,R[520],R[515],R[514],N,N],[3,R[709],R[664],R[514],N,N],[3,"IterMut",E,"Mutable iterator over all futures in the unordered set.",N,N],[8,"Stream",R[515],R[560],N,N],[16,"Item",E,R[561],18,N],[16,"Error",E,R[562],18,N],[10,"poll",E,R[563],18,[[["self"]],[["async",[R[8]]],[R[37],["async"]]]]],[11,"wait",E,R[564],18,[[],["wait"]]],[11,R[286],E,R[565],18,[[],[R[566]]]],[11,"map",E,R[567],18,[[["f"]],["map"]]],[11,"map_err",E,R[568],18,[[["f"]],["maperr"]]],[11,"filter",E,R[569],18,[[["f"]],["filter"]]],[11,R[570],E,R[571],18,[[["f"]],[R[572]]]],[11,"then",E,R[516],18,[[["f"]],["then"]]],[11,R[538],E,R[516],18,[[["f"]],["andthen"]]],[11,"or_else",E,R[573],18,[[["f"]],["orelse"]]],[11,R[791],E,R[574],18,[[],[R[791]]]],[11,"concat2",E,R[517],18,[[],["concat2"]]],[11,"concat",E,R[517],18,[[],["concat"]]],[11,"fold",E,R[575],18,[[["f"],[T]],["fold"]]],[11,R[545],E,R[576],18,[[],[R[545]]]],[11,R[577],E,R[578],18,[[["p"]],[R[579]]]],[11,R[580],E,R[581],18,[[["p"]],[R[582]]]],[11,"for_each",E,R[583],18,[[["f"]],["foreach"]]],[11,R[535],E,R[584],18,[[],["fromerr"]]],[11,"take",E,R[585],18,[[["u64"]],["take"]]],[11,"skip",E,R[586],18,[[["u64"]],["skip"]]],[11,"fuse",E,R[587],18,[[],["fuse"]]],[11,"by_ref",E,R[588],18,[[["self"]],["self"]]],[11,R[518],E,R[589],18,[[],[R[519]]]],[11,R[590],E,R[591],18,[[["usize"]],[R[590]]]],[11,R[592],E,R[593],18,[[["usize"]],[R[594]]]],[11,"merge",E,R[522],18,[[["s"]],["merge"]]],[11,"zip",E,R[595],18,[[["s"]],["zip"]]],[11,"chain",E,R[596],18,[[["s"]],["chain"]]],[11,R[597],E,R[598],18,[[],[R[597]]]],[11,"chunks",E,R[599],18,[[["usize"]],["chunks"]]],[11,"select",E,R[600],18,[[["s"]],["select"]]],[11,"forward",E,R[559],18,[[["s"]],["forward"]]],[11,"split",E,R[601],18,[[]]],[11,R[549],E,R[602],18,[[["f"]],[R[549]]]],[11,R[603],E,R[604],18,[[["f"]],[R[605]]]],[5,R[520],E,R[525],N,[[["i"]],[R[678]]]],[3,R[710],E,"A stream combinator which takes elements from a stream…",N,N],[3,R[711],E,"A combinator used to temporarily convert a stream into a…",N,N],[3,"Filter",E,"A stream combinator used to filter the results of a stream…",N,N],[3,"ForEach",E,"A stream combinator which executes a unit closure over…",N,N],[3,"Repeat",E,"Stream that produces the same element repeatedly.",N,N],[3,"Concat2",E,R[521],N,N],[3,R[712],E,"A `Stream` part of the split pair",N,N],[3,"IterOk",E,R[523],N,N],[3,R[713],E,"Do something with the error of a stream, passing it on.",N,N],[3,"Then",E,"A stream combinator which chains a computation onto each…",N,N],[3,R[714],E,"A combinator used to filter the results of a stream and…",N,N],[5,"iter_ok",E,"Converts an `Iterator` into a `Stream` which is always…",N,[[["i"]],["iterok"]]],[3,"Once",E,"A stream which emits single element and then EOF.",N,N],[3,"Map",E,"A stream combinator which will change the type of a stream…",N,N],[3,"Chain",E,"An adapter for chaining the output of two streams.",N,N],[3,"Take",E,"A stream combinator which returns a maximum number of…",N,N],[3,"Sender",E,"The transmission end of a channel which is used to send…",N,N],[5,"unfold",E,"Creates a `Stream` from a seed and a closure returning a…",N,[[["f"],[T]],["unfold"]]],[4,R[698],E,"An item returned from a merge stream, which represents an…",N,N],[13,"First",E,"An item from the first stream",19,N],[13,"Second",E,"An item from the second stream",19,N],[13,"Both",E,"Items from both streams",19,N],[3,"Concat",E,R[521],N,N],[3,"Zip",E,R[522],N,N],[3,R[715],E,"A `Sink` part of the split pair",N,N],[3,R[716],E,"An unbounded queue of futures.",N,N],[5,"once",E,"Creates a stream of single element",N,[[[R[37]]],["once"]]],[3,R[717],E,R[523],N,N],[3,"Inspect",E,"Do something with the items of a stream, passing it on.",N,N],[3,"Fuse",E,"A stream which \"fuse\"s a stream once it's terminated.",N,N],[3,"MapErr",E,"A stream combinator which will change the error type of a…",N,N],[3,R[718],E,R[523],N,N],[3,R[699],E,"Error indicating a `SplitSink<S>` and `SplitStream<S>`…",N,N],[12,"0",E,E,20,N],[12,"1",E,E,20,N],[3,"Forward",E,"Future for the `Stream::forward` combinator, which sends a…",N,N],[3,R[719],E,R[526],N,N],[3,R[720],E,"Future returned by `Sender::send`.",N,N],[5,"iter",E,R[524],N,[[["j"]],["iter"]]],[3,"Fold",E,"A future used to collect all the results of a stream into…",N,N],[5,"repeat",E,"Create a stream which produces the same item repeatedly.",N,[[[T]],["repeat"]]],[5,"empty",E,"Creates a stream which contains no elements.",N,[[],["empty"]]],[3,"Empty",E,"A stream which contains no elements.",N,N],[3,"Merge",E,R[522],N,N],[3,"OrElse",E,"A stream combinator which chains a computation onto errors…",N,N],[5,"iter_result",E,R[524],N,[[["j"]],["iterresult"]]],[3,R[793],E,"A future which collects all of the values of a stream into…",N,N],[5,"futures_ordered",E,R[525],N,[[["i"]],[R[677]]]],[3,"Peekable",E,"A `Stream` that implements a `peek` method.",N,N],[3,R[70],E,"The receiving end of a channel which implements the…",N,N],[5,R[79],E,"Creates an in-memory channel implementation of the…",N,[[]]],[3,"PollFn",E,"A stream which adapts a function returning `Poll`.",N,N],[3,"Chunks",E,"An adaptor that chunks up elements in a vector.",N,N],[3,R[80],E,"Error type for sending, used when the receiving end of the…",N,N],[3,"Flatten",E,"A combinator used to flatten a stream-of-streams into one…",N,N],[5,"poll_fn",E,"Creates a new stream wrapping around a function returning…",N,[[["f"]],["pollfn"]]],[3,R[721],E,"A stream combinator which skips elements of a stream while…",N,N],[3,"Select",E,R[522],N,N],[3,"FromErr",E,"A stream combinator to change the error type of a stream.",N,N],[3,"Buffered",E,R[526],N,N],[3,"Unfold",E,"A stream which creates futures, polls them and return…",N,N],[3,"AndThen",E,"A stream combinator which chains a computation onto values…",N,N],[3,"Skip",E,"A stream combinator which skips a number of elements…",N,N],[3,"Wait",E,"A stream combinator which converts an asynchronous stream…",N,N],[3,R[527],E,"Stream for the `catch_unwind` combinator.",N,N],[0,"task",R[513],"Tasks used to drive a future computation",N,N],[5,"spawn",R[665],"Spawns a future or stream, returning it and the new task…",N,[[[T]],["spawn"]]],[3,"Task",E,"A handle to a \"task\", which represents a single…",N,N],[5,"init",E,"Initialize the `futures` task system.",N,[[],["bool"]]],[3,"Spawn",E,"Representation of a spawned future/stream.",N,N],[8,"EventSet",E,"A concurrent set which allows for the insertion of `usize`…",N,N],[10,"insert",E,"Insert the given ID into the set",21,[[["self"],["usize"]]]],[5,R[781],E,"Returns a handle to the current task to call `notify` at a…",N,[[],["task"]]],[3,"Run",E,"Units of work submitted to an `Executor`, currently only…",N,N],[8,R[646],E,"A trait representing requests to poll futures.",N,N],[10,R[681],E,"Requests that `Run` is executed soon on the given executor.",22,[[["run"],["self"]]]],[3,R[722],E,"A set insertion to trigger upon `unpark`.",N,N],[3,"TaskRc",E,"A reference to a piece of data that's accessible only…",N,N],[3,R[102],E,R[1123],N,N],[3,"LocalKey",E,"A key for task-local data stored in a future's task.",N,N],[5,"with_unpark_event",E,"For the duration of the given callback, add an \"unpark…",N,[[[R[676]],["f"]],["r"]]],[5,"is_in_task",E,"Return whether the caller is running in a task (and so can…",N,[[],["bool"]]],[8,"Unpark",E,"A trait which represents a sink of notifications that a…",N,N],[10,"unpark",E,"Indicates that an associated future and/or task are ready…",23,[[["self"]]]],[4,"Async",R[513],"Return type of future, indicating whether a value is ready…",N,N],[13,"Ready",E,"Represents that a value is immediately ready.",24,N],[13,"NotReady",E,"Represents that a value is not ready yet, but may be so…",24,N],[4,R[700],E,"The result of an asynchronous attempt to send a value to a…",N,N],[13,"Ready",E,"The `start_send` attempt succeeded, so the sending process…",25,N],[13,"NotReady",E,"The `start_send` attempt failed due to the sink being…",25,N],[8,"Future",E,R[528],N,N],[16,"Item",E,R[529],11,N],[16,"Error",E,R[530],11,N],[10,"poll",E,R[531],11,[[["self"]],[[R[37],["async"]],["async"]]]],[11,"wait",E,R[532],11,[[],[R[37]]]],[11,"map",E,R[533],11,[[["f"]],["map"]]],[11,"map_err",E,R[534],11,[[["f"]],["maperr"]]],[11,R[535],E,R[536],11,[[],["fromerr"]]],[11,"then",E,R[537],11,[[["f"]],["then"]]],[11,R[538],E,R[539],11,[[["f"]],["andthen"]]],[11,"or_else",E,R[540],11,[[["f"]],["orelse"]]],[11,"select",E,R[541],11,[[["b"]],["select"]]],[11,"select2",E,R[542],11,[[["b"]],["select2"]]],[11,"join",E,R[543],11,[[["b"]],["join"]]],[11,"join3",E,R[508],11,[[["c"],["b"]],["join3"]]],[11,"join4",E,R[508],11,[[["c"],["d"],["b"]],["join4"]]],[11,"join5",E,R[508],11,[[["e"],["c"],["d"],["b"]],["join5"]]],[11,R[309],E,R[544],11,[[],[R[311]]]],[11,R[545],E,R[509],11,[[],[R[545]]]],[11,R[546],E,R[509],11,[[],[R[547]]]],[11,"fuse",E,R[548],11,[[],["fuse"]]],[11,R[549],E,R[512],11,[[["f"]],[R[549]]]],[11,R[518],E,R[550],11,[[],[R[519]]]],[11,"shared",E,R[551],11,[[],["shared"]]],[8,R[552],E,R[553],N,N],[16,"Future",E,R[554],12,N],[16,"Item",E,R[555],12,N],[16,"Error",E,R[556],12,N],[10,R[286],E,R[557],12,[[]]],[6,"Poll",E,"Return type of the `Future::poll` method, indicates…",N,N],[8,"Sink",E,"A `Sink` is a value into which other values can be sent,…",N,N],[16,"SinkItem",E,"The type of value that the sink accepts.",26,N],[16,"SinkError",E,"The type of value produced by the sink when an error occurs.",26,N],[10,R[93],E,"Begin the process of sending a value to the sink.",26,[[["self"]],[[R[368]],[R[37],[R[368]]]]]],[10,R[95],E,"Flush all output from this sink, if necessary.",26,[[["self"]],[[R[37],["async"]],["async"]]]],[11,"close",E,"A method to indicate that no more values will ever be…",26,[[["self"]],[[R[37],["async"]],["async"]]]],[11,"wait",E,"Creates a new object which will produce a synchronous sink.",26,[[],["wait"]]],[11,"with",E,R[558],26,[[["f"]],["with"]]],[11,"with_flat_map",E,R[558],26,[[["f"]],["withflatmap"]]],[11,"sink_map_err",E,"Transforms the error returned by the sink.",26,[[["f"]],["sinkmaperr"]]],[11,"sink_from_err",E,"Map this sink's error to any error implementing `From` for…",26,[[],["sinkfromerr"]]],[11,"buffer",E,"Adds a fixed-size buffer to the current sink.",26,[[["usize"]],["buffer"]]],[11,"fanout",E,"Fanout items to multiple sinks.",26,[[["s"]],["fanout"]]],[11,"flush",E,"A future that completes when the sink has finished…",26,[[],["flush"]]],[11,"send",E,"A future that completes after the given item has been…",26,[[],["send"]]],[11,"send_all",E,R[559],26,[[["s"]],["sendall"]]],[8,"Stream",E,R[560],N,N],[16,"Item",E,R[561],18,N],[16,"Error",E,R[562],18,N],[10,"poll",E,R[563],18,[[["self"]],[["async",[R[8]]],[R[37],["async"]]]]],[11,"wait",E,R[564],18,[[],["wait"]]],[11,R[286],E,R[565],18,[[],[R[566]]]],[11,"map",E,R[567],18,[[["f"]],["map"]]],[11,"map_err",E,R[568],18,[[["f"]],["maperr"]]],[11,"filter",E,R[569],18,[[["f"]],["filter"]]],[11,R[570],E,R[571],18,[[["f"]],[R[572]]]],[11,"then",E,R[516],18,[[["f"]],["then"]]],[11,R[538],E,R[516],18,[[["f"]],["andthen"]]],[11,"or_else",E,R[573],18,[[["f"]],["orelse"]]],[11,R[791],E,R[574],18,[[],[R[791]]]],[11,"concat2",E,R[517],18,[[],["concat2"]]],[11,"concat",E,R[517],18,[[],["concat"]]],[11,"fold",E,R[575],18,[[["f"],[T]],["fold"]]],[11,R[545],E,R[576],18,[[],[R[545]]]],[11,R[577],E,R[578],18,[[["p"]],[R[579]]]],[11,R[580],E,R[581],18,[[["p"]],[R[582]]]],[11,"for_each",E,R[583],18,[[["f"]],["foreach"]]],[11,R[535],E,R[584],18,[[],["fromerr"]]],[11,"take",E,R[585],18,[[["u64"]],["take"]]],[11,"skip",E,R[586],18,[[["u64"]],["skip"]]],[11,"fuse",E,R[587],18,[[],["fuse"]]],[11,"by_ref",E,R[588],18,[[["self"]],["self"]]],[11,R[518],E,R[589],18,[[],[R[519]]]],[11,R[590],E,R[591],18,[[["usize"]],[R[590]]]],[11,R[592],E,R[593],18,[[["usize"]],[R[594]]]],[11,"merge",E,R[522],18,[[["s"]],["merge"]]],[11,"zip",E,R[595],18,[[["s"]],["zip"]]],[11,"chain",E,R[596],18,[[["s"]],["chain"]]],[11,R[597],E,R[598],18,[[],[R[597]]]],[11,"chunks",E,R[599],18,[[["usize"]],["chunks"]]],[11,"select",E,R[600],18,[[["s"]],["select"]]],[11,"forward",E,R[559],18,[[["s"]],["forward"]]],[11,"split",E,R[601],18,[[]]],[11,R[549],E,R[602],18,[[["f"]],[R[549]]]],[11,R[603],E,R[604],18,[[["f"]],[R[605]]]],[8,"Read",E,R[606],N,N],[10,"read",E,R[337],8,[[["self"]],[[R[37],["usize","error"]],["usize"],["error"]]]],[11,R[607],E,R[608],8,[[["self"]],[[R[37],["usize","error"]],["usize"],["error"]]]],[11,R[499],E,R[609],8,[[["self"]],[R[499]]]],[11,R[330],E,R[610],8,[[["vec"],["self"]],[[R[37],["usize","error"]],["usize"],["error"]]]],[11,R[611],E,R[612],8,[[["self"],[R[87]]],[[R[37],["usize","error"]],["usize"],["error"]]]],[11,R[331],E,R[613],8,[[["self"]],[[R[37],["error"]],["error"]]]],[11,"by_ref",E,R[500],8,[[["self"]],["self"]]],[11,"bytes",E,R[614],8,[[],["bytes"]]],[11,"chain",E,R[615],8,[[["r"]],["chain"]]],[11,"take",E,R[616],8,[[["u64"]],["take"]]],[8,"Write",E,R[617],N,N],[10,"write",E,R[618],9,[[["self"]],[[R[37],["usize","error"]],["usize"],["error"]]]],[11,R[619],E,R[620],9,[[["self"]],[[R[37],["usize","error"]],["usize"],["error"]]]],[10,"flush",E,R[621],9,[[["self"]],[[R[37],["error"]],["error"]]]],[11,R[329],E,R[622],9,[[["self"]],[[R[37],["error"]],["error"]]]],[11,R[623],E,R[624],9,[[[R[625]],["self"]],[[R[37],["error"]],["error"]]]],[11,"by_ref",E,R[500],9,[[["self"]],["self"]]],[8,R[347],E,R[626],N,N],[11,R[332],E,R[333],5,[[["self"]],["bool"]]],[11,R[334],E,R[335],5,[[["self"]],[["async",["usize"]],[R[37],["async","error"]],["error"]]]],[11,R[336],E,R[337],5,[[["b"],["self"]],[["async",["usize"]],[R[37],["async","error"]],["error"]]]],[11,"framed",E,R[338],5,[[[T]],["framed"]]],[11,"split",E,R[339],5,[[]]],[8,R[348],E,R[627],N,N],[11,R[340],E,R[341],6,[[["self"]],[["async",["usize"]],[R[37],["async","error"]],["error"]]]],[11,R[342],E,R[343],6,[[["self"]],[[R[37],["async","error"]],["async"],["error"]]]],[10,R[325],E,R[628],6,[[["self"]],[[R[37],["async","error"]],["async"],["error"]]]],[11,R[327],E,R[344],6,[[["b"],["self"]],[["async",["usize"]],[R[37],["async","error"]],["error"]]]],[8,R[641],E,R[642],N,N],[11,R[635],E,R[636],27,[[[R[249]]],[R[635]]]],[8,R[643],E,R[645],N,N],[11,R[637],E,R[638],28,[[[R[249]]],[R[637]]]],[11,R[629],E,R[639],28,[[],[R[629]]]],[11,R[635],E,R[640],28,[[[R[249]]],[R[635]]]],[0,R[985],"tokio",R[948],N,N],[3,R[425],R[666],R[949],N,N],[3,"Handle",E,R[953],N,N],[3,R[723],E,R[950],N,N],[3,"Reactor",E,R[952],N,N],[3,R[427],E,R[951],N,N],[3,"Turn",E,R[954],N,N],[0,"sync","tokio","Future-aware synchronization",N,N],[0,"lock",R[630],R[1090],N,N],[3,"Lock",R[667],R[1091],N,N],[3,R[103],E,R[1092],N,N],[0,"mpsc",R[630],R[1095],N,N],[0,"error",R[631],R[1106],N,N],[3,R[106],R[668],R[1112],N,N],[3,R[107],E,R[1110],N,N],[3,R[104],E,R[1109],N,N],[3,R[71],E,R[1107],N,N],[3,R[105],E,R[1111],N,N],[3,R[80],E,R[1108],N,N],[3,R[70],R[631],R[1096],N,N],[5,R[79],E,R[1100],N,[[["usize"]]]],[3,"Sender",E,R[1097],N,N],[5,R[1101],E,R[1102],N,[[]]],[3,R[98],E,R[1098],N,N],[3,R[99],E,R[1099],N,N],[0,"oneshot",R[630],R[1113],N,N],[3,"Sender",R[632],R[1114],N,N],[3,R[70],E,R[1115],N,N],[0,"error",E,R[1117],N,N],[3,R[71],R[669],R[1118],N,N],[3,R[108],E,R[1119],N,N],[5,R[79],R[632],R[1116],N,[[]]],[0,"watch",R[630],R[1129],N,N],[3,R[70],R[633],R[1130],N,N],[3,"Sender",E,R[1131],N,N],[3,"Ref",E,R[1132],N,N],[0,"error",E,R[1134],N,N],[3,R[71],R[670],R[1135],N,N],[3,R[80],E,R[1136],N,N],[5,R[79],R[633],R[1133],N,[[[T]]]],[0,"timer","tokio",R[741],N,N],[0,R[748],R[634],R[267],N,N],[3,R[268],R[671],R[267],N,N],[3,"Expired",E,R[749],N,N],[3,"Key",E,R[750],N,N],[0,R[635],R[634],R[767],N,N],[3,R[790],R[672],R[273],N,N],[3,"Error",E,R[768],N,N],[3,"Delay",R[634],R[742],N,N],[3,R[268],E,R[267],N,N],[3,"Error",E,R[743],N,N],[3,R[744],E,R[745],N,N],[3,R[790],E,R[273],N,N],[0,"util","tokio","Utilities for working with Tokio.",N,N],[11,R[635],R[513],R[636],27,[[[R[249]]],[R[635]]]],[11,R[637],E,R[638],28,[[[R[249]]],[R[637]]]],[11,R[629],E,R[639],28,[[],[R[629]]]],[11,R[635],E,R[640],28,[[[R[249]]],[R[635]]]],[8,R[641],R[644],R[642],N,N],[11,R[635],R[513],R[636],27,[[[R[249]]],[R[635]]]],[8,R[643],R[644],R[645],N,N],[11,R[637],R[513],R[638],28,[[[R[249]]],[R[637]]]],[11,R[629],E,R[639],28,[[],[R[629]]]],[11,R[635],E,R[640],28,[[[R[249]]],[R[635]]]],[0,"executor","tokio","Task execution utilities.",N,N],[8,R[646],R[673],R[731],N,N],[10,"spawn",E,R[732],29,[[["self"],["future"],["box",["future"]]],[[R[112]],[R[37],[R[112]]]]]],[11,"status",E,R[113],29,[[["self"]],[[R[112]],[R[37],[R[112]]]]]],[8,R[121],E,R[733],N,N],[10,"spawn",E,R[734],30,[[["self"],[T]],[[R[112]],[R[37],[R[112]]]]]],[11,"status",E,R[113],30,[[["self"]],[[R[112]],[R[37],[R[112]]]]]],[3,R[119],E,R[725],N,N],[3,R[118],E,R[724],N,N],[3,"Spawn",E,"Return value from the `spawn` function.",N,N],[5,"spawn",E,"Spawns a future on the default executor.",N,[[["f"]],["spawn"]]],[0,R[652],"tokio","A batteries included runtime for applications using Tokio.",N,N],[3,R[701],R[648],"Builds Tokio Runtime with custom configuration values.",N,N],[3,"Runtime",E,"Handle to the Tokio runtime.",N,N],[3,R[365],E,"A future that resolves when the Tokio `Runtime` is shut…",N,N],[3,R[261],E,"Executes futures on the runtime",N,N],[5,"run",E,R[647],N,[[["f"]]]],[0,"current_thread",E,"A runtime implementation that runs everything on the…",N,N],[5,"spawn",R[674],R[737],N,[[["f"]]]],[3,R[261],E,R[735],N,N],[3,R[701],E,"Builds a Single-threaded runtime with custom configuration…",N,N],[3,"Runtime",E,"Single-threaded runtime provides a way to start reactor…",N,N],[3,"Handle",E,R[736],N,N],[5,R[654],E,"Run the provided future to completion using a runtime…",N,[[["f"]],[R[37]]]],[5,"run",E,"Start a current-thread runtime using the supplied future…",N,[[["f"]]]],[11,"new",E,R[649],31,[[],[R[819]]]],[11,"clock",E,R[650],31,[[["self"],["clock"]],["self"]]],[11,"build",E,R[651],31,[[["self"]],[[R[652]],[R[37],[R[652]]]]]],[11,"spawn",E,"Spawn a future onto the `CurrentThread` runtime instance…",32,[[["self"],["f"]],[[R[37],[R[112]]],[R[112]]]]],[11,"status",E,R[113],32,[[["self"]],[[R[37],[R[112]]],[R[112]]]]],[11,"new",E,"Returns a new runtime initialized with default…",33,[[],[[R[652]],[R[37],[R[652]]]]]],[11,"handle",E,"Get a new handle to spawn futures on the single-threaded…",33,[[["self"]],["handle"]]],[11,"spawn",E,"Spawn a future onto the single-threaded Tokio runtime.",33,[[["self"],["f"]],["self"]]],[11,R[265],E,"Runs the provided future, blocking the current thread…",33,[[["self"],["f"]],[R[37]]]],[11,"run",E,R[247],33,[[["self"]],[[R[253]],[R[37],[R[253]]]]]],[11,"new",R[648],R[649],34,[[],[R[819]]]],[11,"clock",E,R[650],34,[[["self"],["clock"]],["self"]]],[11,R[821],E,"Sets a callback to handle panics in futures.",34,[[["self"],["f"]],["self"]]],[11,"core_threads",E,"Set the maximum number of worker threads for the…",34,[[["self"],["usize"]],["self"]]],[11,"blocking_threads",E,"Set the maximum number of concurrent blocking sections in…",34,[[["self"],["usize"]],["self"]]],[11,R[820],E,"Set the worker thread keep alive duration for threads in…",34,[[["self"],[R[8],[R[249]]],[R[249]]],["self"]]],[11,R[822],E,"Set name prefix of threads spawned by the `Runtime`'s…",34,[[[R[87]],["self"],["into",[R[87]]]],["self"]]],[11,R[823],E,R[824],34,[[["self"],["usize"]],["self"]]],[11,R[825],E,R[826],34,[[["self"],["f"]],["self"]]],[11,R[827],E,R[828],34,[[["self"],["f"]],["self"]]],[11,"build",E,R[651],34,[[["self"]],[[R[37],[R[652]]],[R[652]]]]],[11,"spawn",E,R[653],35,[[["self"],["f"]]]],[11,"new",E,"Create a new runtime instance with default configuration…",36,[[],[R[37]]]],[11,R[985],E,"Return a reference to the reactor handle for this runtime…",36,[[["self"]],["handle"]]],[11,"executor",E,"Return a handle to the runtime's executor.",36,[[["self"]],[R[259]]]],[11,"spawn",E,R[653],36,[[["self"],["f"]],["self"]]],[11,R[265],E,"Run a future to completion on the Tokio runtime.",36,[[["self"],["f"]],[R[37]]]],[11,R[654],E,"Run a future to completion on the Tokio runtime, then wait…",36,[[["f"]],[R[37]]]],[11,R[429],E,"Signals the runtime to shutdown once it becomes idle.",36,[[],[R[325]]]],[11,R[430],E,"Signals the runtime to shutdown immediately.",36,[[],[R[325]]]],[11,"from",R[655],E,37,[[[T]],[T]]],[11,"into",E,E,37,[[],[U]]],[11,R[32],E,E,37,[[["self"]],[T]]],[11,R[33],E,E,37,[[[T],["self"]]]],[11,R[34],E,E,37,[[[U]],[R[37]]]],[11,R[43],E,E,37,[[["self"]],[T]]],[11,R[38],E,E,37,[[["self"]],[R[40]]]],[11,R[35],E,E,37,[[["self"]],[T]]],[11,R[36],E,E,37,[[],[R[37]]]],[11,"from",E,E,38,[[[T]],[T]]],[11,"into",E,E,38,[[],[U]]],[11,R[34],E,E,38,[[[U]],[R[37]]]],[11,R[43],E,E,38,[[["self"]],[T]]],[11,R[38],E,E,38,[[["self"]],[R[40]]]],[11,R[35],E,E,38,[[["self"]],[T]]],[11,R[36],E,E,38,[[],[R[37]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,"into",E,E,2,[[],[U]]],[11,R[34],E,E,2,[[[U]],[R[37]]]],[11,R[43],E,E,2,[[["self"]],[T]]],[11,R[38],E,E,2,[[["self"]],[R[40]]]],[11,R[35],E,E,2,[[["self"]],[T]]],[11,R[36],E,E,2,[[],[R[37]]]],[11,"from",E,E,39,[[[T]],[T]]],[11,"into",E,E,39,[[],[U]]],[11,R[34],E,E,39,[[[U]],[R[37]]]],[11,R[43],E,E,39,[[["self"]],[T]]],[11,R[38],E,E,39,[[["self"]],[R[40]]]],[11,R[35],E,E,39,[[["self"]],[T]]],[11,R[36],E,E,39,[[],[R[37]]]],[11,"from",E,E,40,[[[T]],[T]]],[11,"into",E,E,40,[[],[U]]],[11,R[34],E,E,40,[[[U]],[R[37]]]],[11,R[43],E,E,40,[[["self"]],[T]]],[11,R[38],E,E,40,[[["self"]],[R[40]]]],[11,R[35],E,E,40,[[["self"]],[T]]],[11,R[36],E,E,40,[[],[R[37]]]],[11,"from",E,E,41,[[[T]],[T]]],[11,"into",E,E,41,[[],[U]]],[11,R[32],E,E,41,[[["self"]],[T]]],[11,R[33],E,E,41,[[[T],["self"]]]],[11,R[34],E,E,41,[[[U]],[R[37]]]],[11,R[43],E,E,41,[[["self"]],[T]]],[11,R[38],E,E,41,[[["self"]],[R[40]]]],[11,R[35],E,E,41,[[["self"]],[T]]],[11,R[36],E,E,41,[[],[R[37]]]],[11,"from",R[656],E,4,[[[T]],[T]]],[11,"into",E,E,4,[[],[U]]],[11,R[32],E,E,4,[[["self"]],[T]]],[11,R[33],E,E,4,[[[T],["self"]]]],[11,R[34],E,E,4,[[[U]],[R[37]]]],[11,R[43],E,E,4,[[["self"]],[T]]],[11,R[38],E,E,4,[[["self"]],[R[40]]]],[11,R[35],E,E,4,[[["self"]],[T]]],[11,R[36],E,E,4,[[],[R[37]]]],[11,"from",E,E,42,[[[T]],[T]]],[11,"into",E,E,42,[[],[U]]],[11,R[42],E,E,42,[[["self"]],[R[87]]]],[11,R[34],E,E,42,[[[U]],[R[37]]]],[11,R[43],E,E,42,[[["self"]],[T]]],[11,R[38],E,E,42,[[["self"]],[R[40]]]],[11,R[35],E,E,42,[[["self"]],[T]]],[11,R[36],E,E,42,[[],[R[37]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,"into",E,E,3,[[],[U]]],[11,R[34],E,E,3,[[[U]],[R[37]]]],[11,R[43],E,E,3,[[["self"]],[T]]],[11,R[38],E,E,3,[[["self"]],[R[40]]]],[11,R[35],E,E,3,[[["self"]],[T]]],[11,R[36],E,E,3,[[],[R[37]]]],[11,"from",R[657],E,43,[[[T]],[T]]],[11,"into",E,E,43,[[],[U]]],[11,R[32],E,E,43,[[["self"]],[T]]],[11,R[33],E,E,43,[[[T],["self"]]]],[11,R[34],E,E,43,[[[U]],[R[37]]]],[11,R[43],E,E,43,[[["self"]],[T]]],[11,R[38],E,E,43,[[["self"]],[R[40]]]],[11,R[35],E,E,43,[[["self"]],[T]]],[11,R[36],E,E,43,[[],[R[37]]]],[11,"from",R[496],E,44,[[[T]],[T]]],[11,"into",E,E,44,[[],[U]]],[11,R[34],E,E,44,[[[U]],[R[37]]]],[11,R[43],E,E,44,[[["self"]],[T]]],[11,R[38],E,E,44,[[["self"]],[R[40]]]],[11,R[35],E,E,44,[[["self"]],[T]]],[11,R[36],E,E,44,[[],[R[37]]]],[11,"from",R[657],E,45,[[[T]],[T]]],[11,"into",E,E,45,[[],[U]]],[11,R[34],E,E,45,[[[U]],[R[37]]]],[11,R[43],E,E,45,[[["self"]],[T]]],[11,R[38],E,E,45,[[["self"]],[R[40]]]],[11,R[35],E,E,45,[[["self"]],[T]]],[11,R[36],E,E,45,[[],[R[37]]]],[11,R[286],E,E,45,[[],["f"]]],[11,"from",E,E,46,[[[T]],[T]]],[11,"into",E,E,46,[[],[U]]],[11,R[34],E,E,46,[[[U]],[R[37]]]],[11,R[43],E,E,46,[[["self"]],[T]]],[11,R[38],E,E,46,[[["self"]],[R[40]]]],[11,R[35],E,E,46,[[["self"]],[T]]],[11,R[36],E,E,46,[[],[R[37]]]],[11,R[286],E,E,46,[[],["f"]]],[11,"from",E,E,47,[[[T]],[T]]],[11,"into",E,E,47,[[],[U]]],[11,R[34],E,E,47,[[[U]],[R[37]]]],[11,R[43],E,E,47,[[["self"]],[T]]],[11,R[38],E,E,47,[[["self"]],[R[40]]]],[11,R[35],E,E,47,[[["self"]],[T]]],[11,R[36],E,E,47,[[],[R[37]]]],[11,R[286],E,E,47,[[],["f"]]],[11,"from",E,E,48,[[[T]],[T]]],[11,"into",E,E,48,[[],[U]]],[11,R[34],E,E,48,[[[U]],[R[37]]]],[11,R[43],E,E,48,[[["self"]],[T]]],[11,R[38],E,E,48,[[["self"]],[R[40]]]],[11,R[35],E,E,48,[[["self"]],[T]]],[11,R[36],E,E,48,[[],[R[37]]]],[11,R[286],E,E,48,[[],["f"]]],[11,"from",E,E,49,[[[T]],[T]]],[11,"into",E,E,49,[[],[U]]],[11,R[34],E,E,49,[[[U]],[R[37]]]],[11,R[43],E,E,49,[[["self"]],[T]]],[11,R[38],E,E,49,[[["self"]],[R[40]]]],[11,R[35],E,E,49,[[["self"]],[T]]],[11,R[36],E,E,49,[[],[R[37]]]],[11,R[286],E,E,49,[[],["f"]]],[11,"from",R[658],E,50,[[[T]],[T]]],[11,"into",E,E,50,[[],[U]]],[11,R[34],E,E,50,[[[U]],[R[37]]]],[11,R[43],E,E,50,[[["self"]],[T]]],[11,R[38],E,E,50,[[["self"]],[R[40]]]],[11,R[35],E,E,50,[[["self"]],[T]]],[11,R[36],E,E,50,[[],[R[37]]]],[11,R[286],E,E,50,[[],["f"]]],[11,"from",R[496],E,51,[[[T]],[T]]],[11,"into",E,E,51,[[],[U]]],[11,R[34],E,E,51,[[[U]],[R[37]]]],[11,R[43],E,E,51,[[["self"]],[T]]],[11,R[38],E,E,51,[[["self"]],[R[40]]]],[11,R[35],E,E,51,[[["self"]],[T]]],[11,R[36],E,E,51,[[],[R[37]]]],[11,R[286],E,E,51,[[],["f"]]],[11,"from",E,E,52,[[[T]],[T]]],[11,"into",E,E,52,[[],[U]]],[11,R[34],E,E,52,[[[U]],[R[37]]]],[11,R[43],E,E,52,[[["self"]],[T]]],[11,R[38],E,E,52,[[["self"]],[R[40]]]],[11,R[35],E,E,52,[[["self"]],[T]]],[11,R[36],E,E,52,[[],[R[37]]]],[11,R[286],E,E,52,[[],["f"]]],[11,"from",R[659],E,53,[[[T]],[T]]],[11,"into",E,E,53,[[],[U]]],[11,R[34],E,E,53,[[[U]],[R[37]]]],[11,R[43],E,E,53,[[["self"]],[T]]],[11,R[38],E,E,53,[[["self"]],[R[40]]]],[11,R[35],E,E,53,[[["self"]],[T]]],[11,R[36],E,E,53,[[],[R[37]]]],[11,"from",E,E,54,[[[T]],[T]]],[11,"into",E,E,54,[[],[U]]],[11,R[34],E,E,54,[[[U]],[R[37]]]],[11,R[43],E,E,54,[[["self"]],[T]]],[11,R[38],E,E,54,[[["self"]],[R[40]]]],[11,R[35],E,E,54,[[["self"]],[T]]],[11,R[36],E,E,54,[[],[R[37]]]],[11,"from",E,E,55,[[[T]],[T]]],[11,"into",E,E,55,[[],[U]]],[11,R[34],E,E,55,[[[U]],[R[37]]]],[11,R[43],E,E,55,[[["self"]],[T]]],[11,R[38],E,E,55,[[["self"]],[R[40]]]],[11,R[35],E,E,55,[[["self"]],[T]]],[11,R[36],E,E,55,[[],[R[37]]]],[11,"from",E,E,56,[[[T]],[T]]],[11,"into",E,E,56,[[],[U]]],[11,R[34],E,E,56,[[[U]],[R[37]]]],[11,R[43],E,E,56,[[["self"]],[T]]],[11,R[38],E,E,56,[[["self"]],[R[40]]]],[11,R[35],E,E,56,[[["self"]],[T]]],[11,R[36],E,E,56,[[],[R[37]]]],[11,R[286],E,E,56,[[],["f"]]],[11,"from",E,E,57,[[[T]],[T]]],[11,"into",E,E,57,[[],[U]]],[11,R[34],E,E,57,[[[U]],[R[37]]]],[11,R[43],E,E,57,[[["self"]],[T]]],[11,R[38],E,E,57,[[["self"]],[R[40]]]],[11,R[35],E,E,57,[[["self"]],[T]]],[11,R[36],E,E,57,[[],[R[37]]]],[11,R[286],E,E,57,[[],["f"]]],[11,"from",E,E,58,[[[T]],[T]]],[11,"into",E,E,58,[[],[U]]],[11,R[34],E,E,58,[[[U]],[R[37]]]],[11,R[43],E,E,58,[[["self"]],[T]]],[11,R[38],E,E,58,[[["self"]],[R[40]]]],[11,R[35],E,E,58,[[["self"]],[T]]],[11,R[36],E,E,58,[[],[R[37]]]],[11,"from",E,E,59,[[[T]],[T]]],[11,"into",E,E,59,[[],[U]]],[11,R[34],E,E,59,[[[U]],[R[37]]]],[11,R[43],E,E,59,[[["self"]],[T]]],[11,R[38],E,E,59,[[["self"]],[R[40]]]],[11,R[35],E,E,59,[[["self"]],[T]]],[11,R[36],E,E,59,[[],[R[37]]]],[11,R[286],E,E,59,[[],["f"]]],[11,"from",E,E,60,[[[T]],[T]]],[11,"into",E,E,60,[[],[U]]],[11,R[34],E,E,60,[[[U]],[R[37]]]],[11,R[43],E,E,60,[[["self"]],[T]]],[11,R[38],E,E,60,[[["self"]],[R[40]]]],[11,R[35],E,E,60,[[["self"]],[T]]],[11,R[36],E,E,60,[[],[R[37]]]],[11,"from",E,E,61,[[[T]],[T]]],[11,"into",E,E,61,[[],[U]]],[11,R[34],E,E,61,[[[U]],[R[37]]]],[11,R[43],E,E,61,[[["self"]],[T]]],[11,R[38],E,E,61,[[["self"]],[R[40]]]],[11,R[35],E,E,61,[[["self"]],[T]]],[11,R[36],E,E,61,[[],[R[37]]]],[11,R[286],E,E,61,[[],["f"]]],[11,"from",E,E,62,[[[T]],[T]]],[11,"into",E,E,62,[[],[U]]],[11,R[34],E,E,62,[[[U]],[R[37]]]],[11,R[43],E,E,62,[[["self"]],[T]]],[11,R[38],E,E,62,[[["self"]],[R[40]]]],[11,R[35],E,E,62,[[["self"]],[T]]],[11,R[36],E,E,62,[[],[R[37]]]],[11,R[286],E,E,62,[[],["f"]]],[11,"from",E,E,63,[[[T]],[T]]],[11,"into",E,E,63,[[],[U]]],[11,R[34],E,E,63,[[[U]],[R[37]]]],[11,R[43],E,E,63,[[["self"]],[T]]],[11,R[38],E,E,63,[[["self"]],[R[40]]]],[11,R[35],E,E,63,[[["self"]],[T]]],[11,R[36],E,E,63,[[],[R[37]]]],[11,R[286],E,E,63,[[],["f"]]],[11,"from",E,E,64,[[[T]],[T]]],[11,"into",E,E,64,[[],[U]]],[11,R[34],E,E,64,[[[U]],[R[37]]]],[11,R[43],E,E,64,[[["self"]],[T]]],[11,R[38],E,E,64,[[["self"]],[R[40]]]],[11,R[35],E,E,64,[[["self"]],[T]]],[11,R[36],E,E,64,[[],[R[37]]]],[11,R[286],E,E,64,[[],["f"]]],[11,"from",E,E,65,[[[T]],[T]]],[11,"into",E,E,65,[[],[U]]],[11,R[34],E,E,65,[[[U]],[R[37]]]],[11,R[43],E,E,65,[[["self"]],[T]]],[11,R[38],E,E,65,[[["self"]],[R[40]]]],[11,R[35],E,E,65,[[["self"]],[T]]],[11,R[36],E,E,65,[[],[R[37]]]],[11,"from",E,E,66,[[[T]],[T]]],[11,"into",E,E,66,[[],[U]]],[11,R[42],E,E,66,[[["self"]],[R[87]]]],[11,R[34],E,E,66,[[[U]],[R[37]]]],[11,R[43],E,E,66,[[["self"]],[T]]],[11,R[38],E,E,66,[[["self"]],[R[40]]]],[11,R[35],E,E,66,[[["self"]],[T]]],[11,R[36],E,E,66,[[],[R[37]]]],[11,"from",E,E,7,[[[T]],[T]]],[11,"into",E,E,7,[[],[U]]],[11,R[32],E,E,7,[[["self"]],[T]]],[11,R[33],E,E,7,[[[T],["self"]]]],[11,R[34],E,E,7,[[[U]],[R[37]]]],[11,R[43],E,E,7,[[["self"]],[T]]],[11,R[38],E,E,7,[[["self"]],[R[40]]]],[11,R[35],E,E,7,[[["self"]],[T]]],[11,R[36],E,E,7,[[],[R[37]]]],[11,"from",R[660],E,67,[[[T]],[T]]],[11,"into",E,E,67,[[],[U]]],[11,R[34],E,E,67,[[[U]],[R[37]]]],[11,R[43],E,E,67,[[["self"]],[T]]],[11,R[38],E,E,67,[[["self"]],[R[40]]]],[11,R[35],E,E,67,[[["self"]],[T]]],[11,R[36],E,E,67,[[],[R[37]]]],[11,"from",E,E,68,[[[T]],[T]]],[11,"into",E,E,68,[[],[U]]],[11,R[34],E,E,68,[[[U]],[R[37]]]],[11,R[43],E,E,68,[[["self"]],[T]]],[11,R[38],E,E,68,[[["self"]],[R[40]]]],[11,R[35],E,E,68,[[["self"]],[T]]],[11,R[36],E,E,68,[[],[R[37]]]],[11,"from",R[661],E,69,[[[T]],[T]]],[11,"into",E,E,69,[[],[U]]],[11,R[34],E,E,69,[[[U]],[R[37]]]],[11,R[43],E,E,69,[[["self"]],[T]]],[11,R[38],E,E,69,[[["self"]],[R[40]]]],[11,R[35],E,E,69,[[["self"]],[T]]],[11,R[36],E,E,69,[[],[R[37]]]],[11,"from",E,E,70,[[[T]],[T]]],[11,"into",E,E,70,[[],[U]]],[11,R[34],E,E,70,[[[U]],[R[37]]]],[11,R[43],E,E,70,[[["self"]],[T]]],[11,R[38],E,E,70,[[["self"]],[R[40]]]],[11,R[35],E,E,70,[[["self"]],[T]]],[11,R[36],E,E,70,[[],[R[37]]]],[11,"from",R[662],E,71,[[[T]],[T]]],[11,"into",E,E,71,[[],[U]]],[11,R[34],E,E,71,[[[U]],[R[37]]]],[11,R[43],E,E,71,[[["self"]],[T]]],[11,R[38],E,E,71,[[["self"]],[R[40]]]],[11,R[35],E,E,71,[[["self"]],[T]]],[11,R[36],E,E,71,[[],[R[37]]]],[11,"from",E,E,72,[[[T]],[T]]],[11,"into",E,E,72,[[],[U]]],[11,R[34],E,E,72,[[[U]],[R[37]]]],[11,R[43],E,E,72,[[["self"]],[T]]],[11,R[38],E,E,72,[[["self"]],[R[40]]]],[11,R[35],E,E,72,[[["self"]],[T]]],[11,R[36],E,E,72,[[],[R[37]]]],[11,"from",E,E,73,[[[T]],[T]]],[11,"into",E,E,73,[[],[U]]],[11,R[34],E,E,73,[[[U]],[R[37]]]],[11,R[43],E,E,73,[[["self"]],[T]]],[11,R[38],E,E,73,[[["self"]],[R[40]]]],[11,R[35],E,E,73,[[["self"]],[T]]],[11,R[36],E,E,73,[[],[R[37]]]],[11,"from",E,E,74,[[[T]],[T]]],[11,"into",E,E,74,[[],[U]]],[11,R[34],E,E,74,[[[U]],[R[37]]]],[11,R[43],E,E,74,[[["self"]],[T]]],[11,R[38],E,E,74,[[["self"]],[R[40]]]],[11,R[35],E,E,74,[[["self"]],[T]]],[11,R[36],E,E,74,[[],[R[37]]]],[11,"from",R[660],E,75,[[[T]],[T]]],[11,"into",E,E,75,[[],[U]]],[11,R[34],E,E,75,[[[U]],[R[37]]]],[11,R[43],E,E,75,[[["self"]],[T]]],[11,R[38],E,E,75,[[["self"]],[R[40]]]],[11,R[35],E,E,75,[[["self"]],[T]]],[11,R[36],E,E,75,[[],[R[37]]]],[11,R[286],E,E,75,[[],["f"]]],[11,"from",E,E,76,[[[T]],[T]]],[11,"into",E,E,76,[[],[U]]],[11,R[34],E,E,76,[[[U]],[R[37]]]],[11,R[43],E,E,76,[[["self"]],[T]]],[11,R[38],E,E,76,[[["self"]],[R[40]]]],[11,R[35],E,E,76,[[["self"]],[T]]],[11,R[36],E,E,76,[[],[R[37]]]],[11,"from",R[661],E,77,[[[T]],[T]]],[11,"into",E,E,77,[[],[U]]],[11,R[34],E,E,77,[[[U]],[R[37]]]],[11,R[43],E,E,77,[[["self"]],[T]]],[11,R[38],E,E,77,[[["self"]],[R[40]]]],[11,R[35],E,E,77,[[["self"]],[T]]],[11,R[36],E,E,77,[[],[R[37]]]],[11,R[286],E,E,77,[[],["f"]]],[11,"from",E,E,78,[[[T]],[T]]],[11,"into",E,E,78,[[],[U]]],[11,R[34],E,E,78,[[[U]],[R[37]]]],[11,R[43],E,E,78,[[["self"]],[T]]],[11,R[38],E,E,78,[[["self"]],[R[40]]]],[11,R[35],E,E,78,[[["self"]],[T]]],[11,R[36],E,E,78,[[],[R[37]]]],[11,R[286],E,E,78,[[],["f"]]],[11,"from",R[662],E,79,[[[T]],[T]]],[11,"into",E,E,79,[[],[U]]],[11,R[34],E,E,79,[[[U]],[R[37]]]],[11,R[43],E,E,79,[[["self"]],[T]]],[11,R[38],E,E,79,[[["self"]],[R[40]]]],[11,R[35],E,E,79,[[["self"]],[T]]],[11,R[36],E,E,79,[[],[R[37]]]],[11,R[286],E,E,79,[[],["f"]]],[11,"from",E,E,80,[[[T]],[T]]],[11,"into",E,E,80,[[],[U]]],[11,R[34],E,E,80,[[[U]],[R[37]]]],[11,R[43],E,E,80,[[["self"]],[T]]],[11,R[38],E,E,80,[[["self"]],[R[40]]]],[11,R[35],E,E,80,[[["self"]],[T]]],[11,R[36],E,E,80,[[],[R[37]]]],[11,"from",E,E,81,[[[T]],[T]]],[11,"into",E,E,81,[[],[U]]],[11,R[34],E,E,81,[[[U]],[R[37]]]],[11,R[43],E,E,81,[[["self"]],[T]]],[11,R[38],E,E,81,[[["self"]],[R[40]]]],[11,R[35],E,E,81,[[["self"]],[T]]],[11,R[36],E,E,81,[[],[R[37]]]],[11,R[286],E,E,81,[[],["f"]]],[11,"from",E,E,82,[[[T]],[T]]],[11,"into",E,E,82,[[],[U]]],[11,R[34],E,E,82,[[[U]],[R[37]]]],[11,R[43],E,E,82,[[["self"]],[T]]],[11,R[38],E,E,82,[[["self"]],[R[40]]]],[11,R[35],E,E,82,[[["self"]],[T]]],[11,R[36],E,E,82,[[],[R[37]]]],[11,R[286],E,E,82,[[],["f"]]],[11,"from",E,E,10,[[[T]],[T]]],[11,"into",E,E,10,[[],[U]]],[11,R[32],E,E,10,[[["self"]],[T]]],[11,R[33],E,E,10,[[[T],["self"]]]],[11,R[34],E,E,10,[[[U]],[R[37]]]],[11,R[43],E,E,10,[[["self"]],[T]]],[11,R[38],E,E,10,[[["self"]],[R[40]]]],[11,R[35],E,E,10,[[["self"]],[T]]],[11,R[36],E,E,10,[[],[R[37]]]],[11,"from",R[663],E,83,[[[T]],[T]]],[11,"into",E,E,83,[[],[U]]],[11,R[34],E,E,83,[[[U]],[R[37]]]],[11,R[43],E,E,83,[[["self"]],[T]]],[11,R[38],E,E,83,[[["self"]],[R[40]]]],[11,R[35],E,E,83,[[["self"]],[T]]],[11,R[36],E,E,83,[[],[R[37]]]],[11,"from",E,E,15,[[[T]],[T]]],[11,"into",E,E,15,[[],[U]]],[11,R[32],E,E,15,[[["self"]],[T]]],[11,R[33],E,E,15,[[[T],["self"]]]],[11,R[34],E,E,15,[[[U]],[R[37]]]],[11,R[43],E,E,15,[[["self"]],[T]]],[11,R[38],E,E,15,[[["self"]],[R[40]]]],[11,R[35],E,E,15,[[["self"]],[T]]],[11,R[36],E,E,15,[[],[R[37]]]],[11,"from",E,E,84,[[[T]],[T]]],[11,"into",E,E,84,[[],[U]]],[11,R[34],E,E,84,[[[U]],[R[37]]]],[11,R[43],E,E,84,[[["self"]],[T]]],[11,R[38],E,E,84,[[["self"]],[R[40]]]],[11,R[35],E,E,84,[[["self"]],[T]]],[11,R[36],E,E,84,[[],[R[37]]]],[11,R[286],E,E,84,[[],["f"]]],[11,"from",E,E,85,[[[T]],[T]]],[11,"into",E,E,85,[[],[U]]],[11,R[34],E,E,85,[[[U]],[R[37]]]],[11,R[43],E,E,85,[[["self"]],[T]]],[11,R[38],E,E,85,[[["self"]],[R[40]]]],[11,R[35],E,E,85,[[["self"]],[T]]],[11,R[36],E,E,85,[[],[R[37]]]],[11,R[286],E,E,85,[[],["f"]]],[11,"from",E,E,86,[[[T]],[T]]],[11,"into",E,E,86,[[],[U]]],[11,R[34],E,E,86,[[[U]],[R[37]]]],[11,R[43],E,E,86,[[["self"]],[T]]],[11,R[38],E,E,86,[[["self"]],[R[40]]]],[11,R[35],E,E,86,[[["self"]],[T]]],[11,R[36],E,E,86,[[],[R[37]]]],[11,R[286],E,E,86,[[],["f"]]],[11,"from",E,E,87,[[[T]],[T]]],[11,"into",E,E,87,[[],[U]]],[11,R[34],E,E,87,[[[U]],[R[37]]]],[11,R[43],E,E,87,[[["self"]],[T]]],[11,R[38],E,E,87,[[["self"]],[R[40]]]],[11,R[35],E,E,87,[[["self"]],[T]]],[11,R[36],E,E,87,[[],[R[37]]]],[11,R[286],E,E,87,[[],["f"]]],[11,"from",E,E,88,[[[T]],[T]]],[11,"into",E,E,88,[[],[U]]],[11,R[34],E,E,88,[[[U]],[R[37]]]],[11,R[43],E,E,88,[[["self"]],[T]]],[11,R[38],E,E,88,[[["self"]],[R[40]]]],[11,R[35],E,E,88,[[["self"]],[T]]],[11,R[36],E,E,88,[[],[R[37]]]],[11,R[286],E,E,88,[[],["f"]]],[11,"from",E,E,89,[[[T]],[T]]],[11,"into",E,E,89,[[],[U]]],[11,R[32],E,E,89,[[["self"]],[T]]],[11,R[33],E,E,89,[[[T],["self"]]]],[11,R[34],E,E,89,[[[U]],[R[37]]]],[11,R[43],E,E,89,[[["self"]],[T]]],[11,R[38],E,E,89,[[["self"]],[R[40]]]],[11,R[35],E,E,89,[[["self"]],[T]]],[11,R[36],E,E,89,[[],[R[37]]]],[11,R[286],E,E,89,[[],["f"]]],[11,"from",E,E,16,[[[T]],[T]]],[11,"into",E,E,16,[[],[U]]],[11,R[34],E,E,16,[[[U]],[R[37]]]],[11,R[43],E,E,16,[[["self"]],[T]]],[11,R[38],E,E,16,[[["self"]],[R[40]]]],[11,R[35],E,E,16,[[["self"]],[T]]],[11,R[36],E,E,16,[[],[R[37]]]],[11,"from",E,E,90,[[[T]],[T]]],[11,"into",E,E,90,[[],[U]]],[11,R[32],E,E,90,[[["self"]],[T]]],[11,R[33],E,E,90,[[[T],["self"]]]],[11,R[34],E,E,90,[[[U]],[R[37]]]],[11,R[43],E,E,90,[[["self"]],[T]]],[11,R[38],E,E,90,[[["self"]],[R[40]]]],[11,R[35],E,E,90,[[["self"]],[T]]],[11,R[36],E,E,90,[[],[R[37]]]],[11,"from",E,E,91,[[[T]],[T]]],[11,"into",E,E,91,[[],[U]]],[11,R[34],E,E,91,[[[U]],[R[37]]]],[11,R[43],E,E,91,[[["self"]],[T]]],[11,R[38],E,E,91,[[["self"]],[R[40]]]],[11,R[35],E,E,91,[[["self"]],[T]]],[11,R[36],E,E,91,[[],[R[37]]]],[11,R[286],E,E,91,[[],["f"]]],[11,"from",E,E,17,[[[T]],[T]]],[11,"into",E,E,17,[[],[U]]],[11,R[34],E,E,17,[[[U]],[R[37]]]],[11,R[43],E,E,17,[[["self"]],[T]]],[11,R[38],E,E,17,[[["self"]],[R[40]]]],[11,R[35],E,E,17,[[["self"]],[T]]],[11,R[36],E,E,17,[[],[R[37]]]],[11,R[286],E,E,17,[[],["f"]]],[11,"from",E,E,92,[[[T]],[T]]],[11,"into",E,E,92,[[],[U]]],[11,R[34],E,E,92,[[[U]],[R[37]]]],[11,R[43],E,E,92,[[["self"]],[T]]],[11,R[38],E,E,92,[[["self"]],[R[40]]]],[11,R[35],E,E,92,[[["self"]],[T]]],[11,R[36],E,E,92,[[],[R[37]]]],[11,R[286],E,E,92,[[],["f"]]],[11,"from",E,E,93,[[[T]],[T]]],[11,"into",E,E,93,[[],[U]]],[11,R[32],E,E,93,[[["self"]],[T]]],[11,R[33],E,E,93,[[[T],["self"]]]],[11,R[34],E,E,93,[[[U]],[R[37]]]],[11,R[43],E,E,93,[[["self"]],[T]]],[11,R[38],E,E,93,[[["self"]],[R[40]]]],[11,R[35],E,E,93,[[["self"]],[T]]],[11,R[36],E,E,93,[[],[R[37]]]],[11,R[286],E,E,93,[[],["f"]]],[11,"from",E,E,94,[[[T]],[T]]],[11,"into",E,E,94,[[],[U]]],[11,R[34],E,E,94,[[[U]],[R[37]]]],[11,R[43],E,E,94,[[["self"]],[T]]],[11,R[38],E,E,94,[[["self"]],[R[40]]]],[11,R[35],E,E,94,[[["self"]],[T]]],[11,R[36],E,E,94,[[],[R[37]]]],[11,R[286],E,E,94,[[],["f"]]],[11,"from",E,E,95,[[[T]],[T]]],[11,"into",E,E,95,[[],[U]]],[11,R[34],E,E,95,[[[U]],[R[37]]]],[11,R[43],E,E,95,[[["self"]],[T]]],[11,R[38],E,E,95,[[["self"]],[R[40]]]],[11,R[35],E,E,95,[[["self"]],[T]]],[11,R[36],E,E,95,[[],[R[37]]]],[11,R[286],E,E,95,[[],["f"]]],[11,"from",E,E,96,[[[T]],[T]]],[11,"into",E,E,96,[[],[U]]],[11,R[34],E,E,96,[[[U]],[R[37]]]],[11,R[43],E,E,96,[[["self"]],[T]]],[11,R[38],E,E,96,[[["self"]],[R[40]]]],[11,R[35],E,E,96,[[["self"]],[T]]],[11,R[36],E,E,96,[[],[R[37]]]],[11,R[286],E,E,96,[[],["f"]]],[11,"from",E,E,97,[[[T]],[T]]],[11,"into",E,E,97,[[],[U]]],[11,R[34],E,E,97,[[[U]],[R[37]]]],[11,R[43],E,E,97,[[["self"]],[T]]],[11,R[38],E,E,97,[[["self"]],[R[40]]]],[11,R[35],E,E,97,[[["self"]],[T]]],[11,R[36],E,E,97,[[],[R[37]]]],[11,R[286],E,E,97,[[],["f"]]],[11,"from",E,E,98,[[[T]],[T]]],[11,"into",E,E,98,[[],[U]]],[11,R[32],E,E,98,[[["self"]],[T]]],[11,R[33],E,E,98,[[[T],["self"]]]],[11,R[42],E,E,98,[[["self"]],[R[87]]]],[11,R[34],E,E,98,[[[U]],[R[37]]]],[11,R[43],E,E,98,[[["self"]],[T]]],[11,R[38],E,E,98,[[["self"]],[R[40]]]],[11,R[35],E,E,98,[[["self"]],[T]]],[11,R[36],E,E,98,[[],[R[37]]]],[11,"from",E,E,99,[[[T]],[T]]],[11,"into",E,E,99,[[],[U]]],[11,R[34],E,E,99,[[[U]],[R[37]]]],[11,R[43],E,E,99,[[["self"]],[T]]],[11,R[38],E,E,99,[[["self"]],[R[40]]]],[11,R[35],E,E,99,[[["self"]],[T]]],[11,R[36],E,E,99,[[],[R[37]]]],[11,R[286],E,E,99,[[],["f"]]],[11,"from",E,E,100,[[[T]],[T]]],[11,"into",E,E,100,[[],[U]]],[11,R[34],E,E,100,[[[U]],[R[37]]]],[11,R[43],E,E,100,[[["self"]],[T]]],[11,R[38],E,E,100,[[["self"]],[R[40]]]],[11,R[35],E,E,100,[[["self"]],[T]]],[11,R[36],E,E,100,[[],[R[37]]]],[11,R[286],E,E,100,[[],["f"]]],[11,"from",E,E,101,[[[T]],[T]]],[11,"into",E,E,101,[[],[U]]],[11,R[34],E,E,101,[[[U]],[R[37]]]],[11,R[43],E,E,101,[[["self"]],[T]]],[11,R[38],E,E,101,[[["self"]],[R[40]]]],[11,R[35],E,E,101,[[["self"]],[T]]],[11,R[36],E,E,101,[[],[R[37]]]],[11,"from",E,E,102,[[[T]],[T]]],[11,"into",E,E,102,[[],[U]]],[11,R[34],E,E,102,[[[U]],[R[37]]]],[11,R[43],E,E,102,[[["self"]],[T]]],[11,R[38],E,E,102,[[["self"]],[R[40]]]],[11,R[35],E,E,102,[[["self"]],[T]]],[11,R[36],E,E,102,[[],[R[37]]]],[11,R[286],E,E,102,[[],["f"]]],[11,"from",E,E,103,[[[T]],[T]]],[11,"into",E,E,103,[[],[U]]],[11,R[34],E,E,103,[[[U]],[R[37]]]],[11,R[43],E,E,103,[[["self"]],[T]]],[11,R[38],E,E,103,[[["self"]],[R[40]]]],[11,R[35],E,E,103,[[["self"]],[T]]],[11,R[36],E,E,103,[[],[R[37]]]],[11,R[286],E,E,103,[[],["f"]]],[11,"from",E,E,104,[[[T]],[T]]],[11,"into",E,E,104,[[],[U]]],[11,R[34],E,E,104,[[[U]],[R[37]]]],[11,R[43],E,E,104,[[["self"]],[T]]],[11,R[38],E,E,104,[[["self"]],[R[40]]]],[11,R[35],E,E,104,[[["self"]],[T]]],[11,R[36],E,E,104,[[],[R[37]]]],[11,R[286],E,E,104,[[],["f"]]],[11,"from",E,E,105,[[[T]],[T]]],[11,"into",E,E,105,[[],[U]]],[11,R[34],E,E,105,[[[U]],[R[37]]]],[11,R[43],E,E,105,[[["self"]],[T]]],[11,R[38],E,E,105,[[["self"]],[R[40]]]],[11,R[35],E,E,105,[[["self"]],[T]]],[11,R[36],E,E,105,[[],[R[37]]]],[11,R[286],E,E,105,[[],["f"]]],[11,"from",E,E,106,[[[T]],[T]]],[11,"into",E,E,106,[[],[U]]],[11,R[34],E,E,106,[[[U]],[R[37]]]],[11,R[43],E,E,106,[[["self"]],[T]]],[11,R[38],E,E,106,[[["self"]],[R[40]]]],[11,R[35],E,E,106,[[["self"]],[T]]],[11,R[36],E,E,106,[[],[R[37]]]],[11,R[286],E,E,106,[[],["f"]]],[11,"from",E,E,107,[[[T]],[T]]],[11,"into",E,E,107,[[],[U]]],[11,R[34],E,E,107,[[[U]],[R[37]]]],[11,R[43],E,E,107,[[["self"]],[T]]],[11,R[38],E,E,107,[[["self"]],[R[40]]]],[11,R[35],E,E,107,[[["self"]],[T]]],[11,R[36],E,E,107,[[],[R[37]]]],[11,R[286],E,E,107,[[],["f"]]],[11,"from",E,E,108,[[[T]],[T]]],[11,"into",E,E,108,[[],[U]]],[11,R[34],E,E,108,[[[U]],[R[37]]]],[11,R[43],E,E,108,[[["self"]],[T]]],[11,R[38],E,E,108,[[["self"]],[R[40]]]],[11,R[35],E,E,108,[[["self"]],[T]]],[11,R[36],E,E,108,[[],[R[37]]]],[11,"from",E,E,109,[[[T]],[T]]],[11,"into",E,E,109,[[],[U]]],[11,R[34],E,E,109,[[[U]],[R[37]]]],[11,R[43],E,E,109,[[["self"]],[T]]],[11,R[38],E,E,109,[[["self"]],[R[40]]]],[11,R[35],E,E,109,[[["self"]],[T]]],[11,R[36],E,E,109,[[],[R[37]]]],[11,R[286],E,E,109,[[],["f"]]],[11,"from",E,E,110,[[[T]],[T]]],[11,"into",E,E,110,[[],[U]]],[11,R[34],E,E,110,[[[U]],[R[37]]]],[11,R[43],E,E,110,[[["self"]],[T]]],[11,R[38],E,E,110,[[["self"]],[R[40]]]],[11,R[35],E,E,110,[[["self"]],[T]]],[11,R[36],E,E,110,[[],[R[37]]]],[11,R[286],E,E,110,[[],["f"]]],[11,"from",E,E,111,[[[T]],[T]]],[11,"into",E,E,111,[[],[U]]],[11,R[34],E,E,111,[[[U]],[R[37]]]],[11,R[43],E,E,111,[[["self"]],[T]]],[11,R[38],E,E,111,[[["self"]],[R[40]]]],[11,R[35],E,E,111,[[["self"]],[T]]],[11,R[36],E,E,111,[[],[R[37]]]],[11,R[286],E,E,111,[[],["f"]]],[11,"from",E,E,112,[[[T]],[T]]],[11,"into",E,E,112,[[],[U]]],[11,R[34],E,E,112,[[[U]],[R[37]]]],[11,R[43],E,E,112,[[["self"]],[T]]],[11,R[38],E,E,112,[[["self"]],[R[40]]]],[11,R[35],E,E,112,[[["self"]],[T]]],[11,R[36],E,E,112,[[],[R[37]]]],[11,R[286],E,E,112,[[],["f"]]],[11,"from",E,E,113,[[[T]],[T]]],[11,"into",E,E,113,[[],[U]]],[11,R[34],E,E,113,[[[U]],[R[37]]]],[11,R[43],E,E,113,[[["self"]],[T]]],[11,R[38],E,E,113,[[["self"]],[R[40]]]],[11,R[35],E,E,113,[[["self"]],[T]]],[11,R[36],E,E,113,[[],[R[37]]]],[11,R[286],E,E,113,[[],["f"]]],[11,"from",R[664],E,114,[[[T]],[T]]],[11,"into",E,E,114,[[],[U]]],[11,R[34],E,E,114,[[[U]],[R[37]]]],[11,R[43],E,E,114,[[["self"]],[T]]],[11,R[38],E,E,114,[[["self"]],[R[40]]]],[11,R[35],E,E,114,[[["self"]],[T]]],[11,R[36],E,E,114,[[],[R[37]]]],[11,"from",E,E,115,[[[T]],[T]]],[11,R[244],E,E,115,[[],["i"]]],[11,"into",E,E,115,[[],[U]]],[11,R[34],E,E,115,[[[U]],[R[37]]]],[11,R[43],E,E,115,[[["self"]],[T]]],[11,R[38],E,E,115,[[["self"]],[R[40]]]],[11,R[35],E,E,115,[[["self"]],[T]]],[11,R[36],E,E,115,[[],[R[37]]]],[11,"from",R[515],E,116,[[[T]],[T]]],[11,"into",E,E,116,[[],[U]]],[11,R[34],E,E,116,[[[U]],[R[37]]]],[11,R[43],E,E,116,[[["self"]],[T]]],[11,R[38],E,E,116,[[["self"]],[R[40]]]],[11,R[35],E,E,116,[[["self"]],[T]]],[11,R[36],E,E,116,[[],[R[37]]]],[11,"from",E,E,117,[[[T]],[T]]],[11,"into",E,E,117,[[],[U]]],[11,R[34],E,E,117,[[[U]],[R[37]]]],[11,R[43],E,E,117,[[["self"]],[T]]],[11,R[38],E,E,117,[[["self"]],[R[40]]]],[11,R[35],E,E,117,[[["self"]],[T]]],[11,R[36],E,E,117,[[],[R[37]]]],[11,R[286],E,E,117,[[],["f"]]],[11,"from",E,E,118,[[[T]],[T]]],[11,"into",E,E,118,[[],[U]]],[11,R[34],E,E,118,[[[U]],[R[37]]]],[11,R[43],E,E,118,[[["self"]],[T]]],[11,R[38],E,E,118,[[["self"]],[R[40]]]],[11,R[35],E,E,118,[[["self"]],[T]]],[11,R[36],E,E,118,[[],[R[37]]]],[11,"from",E,E,119,[[[T]],[T]]],[11,"into",E,E,119,[[],[U]]],[11,R[34],E,E,119,[[[U]],[R[37]]]],[11,R[43],E,E,119,[[["self"]],[T]]],[11,R[38],E,E,119,[[["self"]],[R[40]]]],[11,R[35],E,E,119,[[["self"]],[T]]],[11,R[36],E,E,119,[[],[R[37]]]],[11,R[286],E,E,119,[[],["f"]]],[11,"from",E,E,120,[[[T]],[T]]],[11,"into",E,E,120,[[],[U]]],[11,R[34],E,E,120,[[[U]],[R[37]]]],[11,R[43],E,E,120,[[["self"]],[T]]],[11,R[38],E,E,120,[[["self"]],[R[40]]]],[11,R[35],E,E,120,[[["self"]],[T]]],[11,R[36],E,E,120,[[],[R[37]]]],[11,"from",E,E,121,[[[T]],[T]]],[11,"into",E,E,121,[[],[U]]],[11,R[34],E,E,121,[[[U]],[R[37]]]],[11,R[43],E,E,121,[[["self"]],[T]]],[11,R[38],E,E,121,[[["self"]],[R[40]]]],[11,R[35],E,E,121,[[["self"]],[T]]],[11,R[36],E,E,121,[[],[R[37]]]],[11,R[286],E,E,121,[[],["f"]]],[11,"from",E,E,122,[[[T]],[T]]],[11,"into",E,E,122,[[],[U]]],[11,R[34],E,E,122,[[[U]],[R[37]]]],[11,R[43],E,E,122,[[["self"]],[T]]],[11,R[38],E,E,122,[[["self"]],[R[40]]]],[11,R[35],E,E,122,[[["self"]],[T]]],[11,R[36],E,E,122,[[],[R[37]]]],[11,"from",E,E,123,[[[T]],[T]]],[11,"into",E,E,123,[[],[U]]],[11,R[34],E,E,123,[[[U]],[R[37]]]],[11,R[43],E,E,123,[[["self"]],[T]]],[11,R[38],E,E,123,[[["self"]],[R[40]]]],[11,R[35],E,E,123,[[["self"]],[T]]],[11,R[36],E,E,123,[[],[R[37]]]],[11,"from",E,E,124,[[[T]],[T]]],[11,"into",E,E,124,[[],[U]]],[11,R[34],E,E,124,[[[U]],[R[37]]]],[11,R[43],E,E,124,[[["self"]],[T]]],[11,R[38],E,E,124,[[["self"]],[R[40]]]],[11,R[35],E,E,124,[[["self"]],[T]]],[11,R[36],E,E,124,[[],[R[37]]]],[11,"from",E,E,125,[[[T]],[T]]],[11,"into",E,E,125,[[],[U]]],[11,R[34],E,E,125,[[[U]],[R[37]]]],[11,R[43],E,E,125,[[["self"]],[T]]],[11,R[38],E,E,125,[[["self"]],[R[40]]]],[11,R[35],E,E,125,[[["self"]],[T]]],[11,R[36],E,E,125,[[],[R[37]]]],[11,"from",E,E,126,[[[T]],[T]]],[11,"into",E,E,126,[[],[U]]],[11,R[34],E,E,126,[[[U]],[R[37]]]],[11,R[43],E,E,126,[[["self"]],[T]]],[11,R[38],E,E,126,[[["self"]],[R[40]]]],[11,R[35],E,E,126,[[["self"]],[T]]],[11,R[36],E,E,126,[[],[R[37]]]],[11,"from",E,E,127,[[[T]],[T]]],[11,"into",E,E,127,[[],[U]]],[11,R[34],E,E,127,[[[U]],[R[37]]]],[11,R[43],E,E,127,[[["self"]],[T]]],[11,R[38],E,E,127,[[["self"]],[R[40]]]],[11,R[35],E,E,127,[[["self"]],[T]]],[11,R[36],E,E,127,[[],[R[37]]]],[11,"from",E,E,128,[[[T]],[T]]],[11,"into",E,E,128,[[],[U]]],[11,R[34],E,E,128,[[[U]],[R[37]]]],[11,R[43],E,E,128,[[["self"]],[T]]],[11,R[38],E,E,128,[[["self"]],[R[40]]]],[11,R[35],E,E,128,[[["self"]],[T]]],[11,R[36],E,E,128,[[],[R[37]]]],[11,"from",E,E,129,[[[T]],[T]]],[11,"into",E,E,129,[[],[U]]],[11,R[34],E,E,129,[[[U]],[R[37]]]],[11,R[43],E,E,129,[[["self"]],[T]]],[11,R[38],E,E,129,[[["self"]],[R[40]]]],[11,R[35],E,E,129,[[["self"]],[T]]],[11,R[36],E,E,129,[[],[R[37]]]],[11,"from",E,E,130,[[[T]],[T]]],[11,"into",E,E,130,[[],[U]]],[11,R[34],E,E,130,[[[U]],[R[37]]]],[11,R[43],E,E,130,[[["self"]],[T]]],[11,R[38],E,E,130,[[["self"]],[R[40]]]],[11,R[35],E,E,130,[[["self"]],[T]]],[11,R[36],E,E,130,[[],[R[37]]]],[11,"from",E,E,131,[[[T]],[T]]],[11,"into",E,E,131,[[],[U]]],[11,R[34],E,E,131,[[[U]],[R[37]]]],[11,R[43],E,E,131,[[["self"]],[T]]],[11,R[38],E,E,131,[[["self"]],[R[40]]]],[11,R[35],E,E,131,[[["self"]],[T]]],[11,R[36],E,E,131,[[],[R[37]]]],[11,"from",E,E,19,[[[T]],[T]]],[11,"into",E,E,19,[[],[U]]],[11,R[34],E,E,19,[[[U]],[R[37]]]],[11,R[43],E,E,19,[[["self"]],[T]]],[11,R[38],E,E,19,[[["self"]],[R[40]]]],[11,R[35],E,E,19,[[["self"]],[T]]],[11,R[36],E,E,19,[[],[R[37]]]],[11,"from",E,E,132,[[[T]],[T]]],[11,"into",E,E,132,[[],[U]]],[11,R[34],E,E,132,[[[U]],[R[37]]]],[11,R[43],E,E,132,[[["self"]],[T]]],[11,R[38],E,E,132,[[["self"]],[R[40]]]],[11,R[35],E,E,132,[[["self"]],[T]]],[11,R[36],E,E,132,[[],[R[37]]]],[11,R[286],E,E,132,[[],["f"]]],[11,"from",E,E,133,[[[T]],[T]]],[11,"into",E,E,133,[[],[U]]],[11,R[34],E,E,133,[[[U]],[R[37]]]],[11,R[43],E,E,133,[[["self"]],[T]]],[11,R[38],E,E,133,[[["self"]],[R[40]]]],[11,R[35],E,E,133,[[["self"]],[T]]],[11,R[36],E,E,133,[[],[R[37]]]],[11,"from",E,E,134,[[[T]],[T]]],[11,"into",E,E,134,[[],[U]]],[11,R[34],E,E,134,[[[U]],[R[37]]]],[11,R[43],E,E,134,[[["self"]],[T]]],[11,R[38],E,E,134,[[["self"]],[R[40]]]],[11,R[35],E,E,134,[[["self"]],[T]]],[11,R[36],E,E,134,[[],[R[37]]]],[11,"from",E,E,135,[[[T]],[T]]],[11,"into",E,E,135,[[],[U]]],[11,R[34],E,E,135,[[[U]],[R[37]]]],[11,R[43],E,E,135,[[["self"]],[T]]],[11,R[38],E,E,135,[[["self"]],[R[40]]]],[11,R[35],E,E,135,[[["self"]],[T]]],[11,R[36],E,E,135,[[],[R[37]]]],[11,"from",E,E,136,[[[T]],[T]]],[11,"into",E,E,136,[[],[U]]],[11,R[34],E,E,136,[[[U]],[R[37]]]],[11,R[43],E,E,136,[[["self"]],[T]]],[11,R[38],E,E,136,[[["self"]],[R[40]]]],[11,R[35],E,E,136,[[["self"]],[T]]],[11,R[36],E,E,136,[[],[R[37]]]],[11,"from",E,E,137,[[[T]],[T]]],[11,"into",E,E,137,[[],[U]]],[11,R[34],E,E,137,[[[U]],[R[37]]]],[11,R[43],E,E,137,[[["self"]],[T]]],[11,R[38],E,E,137,[[["self"]],[R[40]]]],[11,R[35],E,E,137,[[["self"]],[T]]],[11,R[36],E,E,137,[[],[R[37]]]],[11,"from",E,E,138,[[[T]],[T]]],[11,"into",E,E,138,[[],[U]]],[11,R[34],E,E,138,[[[U]],[R[37]]]],[11,R[43],E,E,138,[[["self"]],[T]]],[11,R[38],E,E,138,[[["self"]],[R[40]]]],[11,R[35],E,E,138,[[["self"]],[T]]],[11,R[36],E,E,138,[[],[R[37]]]],[11,"from",E,E,139,[[[T]],[T]]],[11,"into",E,E,139,[[],[U]]],[11,R[34],E,E,139,[[[U]],[R[37]]]],[11,R[43],E,E,139,[[["self"]],[T]]],[11,R[38],E,E,139,[[["self"]],[R[40]]]],[11,R[35],E,E,139,[[["self"]],[T]]],[11,R[36],E,E,139,[[],[R[37]]]],[11,"from",E,E,140,[[[T]],[T]]],[11,"into",E,E,140,[[],[U]]],[11,R[34],E,E,140,[[[U]],[R[37]]]],[11,R[43],E,E,140,[[["self"]],[T]]],[11,R[38],E,E,140,[[["self"]],[R[40]]]],[11,R[35],E,E,140,[[["self"]],[T]]],[11,R[36],E,E,140,[[],[R[37]]]],[11,"from",E,E,20,[[[T]],[T]]],[11,"into",E,E,20,[[],[U]]],[11,R[42],E,E,20,[[["self"]],[R[87]]]],[11,R[34],E,E,20,[[[U]],[R[37]]]],[11,R[43],E,E,20,[[["self"]],[T]]],[11,R[38],E,E,20,[[["self"]],[R[40]]]],[11,R[35],E,E,20,[[["self"]],[T]]],[11,R[36],E,E,20,[[],[R[37]]]],[11,"from",E,E,141,[[[T]],[T]]],[11,"into",E,E,141,[[],[U]]],[11,R[34],E,E,141,[[[U]],[R[37]]]],[11,R[43],E,E,141,[[["self"]],[T]]],[11,R[38],E,E,141,[[["self"]],[R[40]]]],[11,R[35],E,E,141,[[["self"]],[T]]],[11,R[36],E,E,141,[[],[R[37]]]],[11,R[286],E,E,141,[[],["f"]]],[11,"from",E,E,142,[[[T]],[T]]],[11,"into",E,E,142,[[],[U]]],[11,R[34],E,E,142,[[[U]],[R[37]]]],[11,R[43],E,E,142,[[["self"]],[T]]],[11,R[38],E,E,142,[[["self"]],[R[40]]]],[11,R[35],E,E,142,[[["self"]],[T]]],[11,R[36],E,E,142,[[],[R[37]]]],[11,"from",E,E,143,[[[T]],[T]]],[11,"into",E,E,143,[[],[U]]],[11,R[34],E,E,143,[[[U]],[R[37]]]],[11,R[43],E,E,143,[[["self"]],[T]]],[11,R[38],E,E,143,[[["self"]],[R[40]]]],[11,R[35],E,E,143,[[["self"]],[T]]],[11,R[36],E,E,143,[[],[R[37]]]],[11,R[286],E,E,143,[[],["f"]]],[11,"from",E,E,144,[[[T]],[T]]],[11,"into",E,E,144,[[],[U]]],[11,R[34],E,E,144,[[[U]],[R[37]]]],[11,R[43],E,E,144,[[["self"]],[T]]],[11,R[38],E,E,144,[[["self"]],[R[40]]]],[11,R[35],E,E,144,[[["self"]],[T]]],[11,R[36],E,E,144,[[],[R[37]]]],[11,R[286],E,E,144,[[],["f"]]],[11,"from",E,E,145,[[[T]],[T]]],[11,"into",E,E,145,[[],[U]]],[11,R[34],E,E,145,[[[U]],[R[37]]]],[11,R[43],E,E,145,[[["self"]],[T]]],[11,R[38],E,E,145,[[["self"]],[R[40]]]],[11,R[35],E,E,145,[[["self"]],[T]]],[11,R[36],E,E,145,[[],[R[37]]]],[11,"from",E,E,146,[[[T]],[T]]],[11,"into",E,E,146,[[],[U]]],[11,R[34],E,E,146,[[[U]],[R[37]]]],[11,R[43],E,E,146,[[["self"]],[T]]],[11,R[38],E,E,146,[[["self"]],[R[40]]]],[11,R[35],E,E,146,[[["self"]],[T]]],[11,R[36],E,E,146,[[],[R[37]]]],[11,"from",E,E,147,[[[T]],[T]]],[11,"into",E,E,147,[[],[U]]],[11,R[34],E,E,147,[[[U]],[R[37]]]],[11,R[43],E,E,147,[[["self"]],[T]]],[11,R[38],E,E,147,[[["self"]],[R[40]]]],[11,R[35],E,E,147,[[["self"]],[T]]],[11,R[36],E,E,147,[[],[R[37]]]],[11,"from",E,E,148,[[[T]],[T]]],[11,"into",E,E,148,[[],[U]]],[11,R[34],E,E,148,[[[U]],[R[37]]]],[11,R[43],E,E,148,[[["self"]],[T]]],[11,R[38],E,E,148,[[["self"]],[R[40]]]],[11,R[35],E,E,148,[[["self"]],[T]]],[11,R[36],E,E,148,[[],[R[37]]]],[11,R[286],E,E,148,[[],["f"]]],[11,"from",E,E,149,[[[T]],[T]]],[11,"into",E,E,149,[[],[U]]],[11,R[34],E,E,149,[[[U]],[R[37]]]],[11,R[43],E,E,149,[[["self"]],[T]]],[11,R[38],E,E,149,[[["self"]],[R[40]]]],[11,R[35],E,E,149,[[["self"]],[T]]],[11,R[36],E,E,149,[[],[R[37]]]],[11,"from",E,E,150,[[[T]],[T]]],[11,"into",E,E,150,[[],[U]]],[11,R[34],E,E,150,[[[U]],[R[37]]]],[11,R[43],E,E,150,[[["self"]],[T]]],[11,R[38],E,E,150,[[["self"]],[R[40]]]],[11,R[35],E,E,150,[[["self"]],[T]]],[11,R[36],E,E,150,[[],[R[37]]]],[11,"from",E,E,151,[[[T]],[T]]],[11,"into",E,E,151,[[],[U]]],[11,R[34],E,E,151,[[[U]],[R[37]]]],[11,R[43],E,E,151,[[["self"]],[T]]],[11,R[38],E,E,151,[[["self"]],[R[40]]]],[11,R[35],E,E,151,[[["self"]],[T]]],[11,R[36],E,E,151,[[],[R[37]]]],[11,"from",E,E,152,[[[T]],[T]]],[11,"into",E,E,152,[[],[U]]],[11,R[34],E,E,152,[[[U]],[R[37]]]],[11,R[43],E,E,152,[[["self"]],[T]]],[11,R[38],E,E,152,[[["self"]],[R[40]]]],[11,R[35],E,E,152,[[["self"]],[T]]],[11,R[36],E,E,152,[[],[R[37]]]],[11,"from",E,E,153,[[[T]],[T]]],[11,"into",E,E,153,[[],[U]]],[11,R[42],E,E,153,[[["self"]],[R[87]]]],[11,R[34],E,E,153,[[[U]],[R[37]]]],[11,R[43],E,E,153,[[["self"]],[T]]],[11,R[38],E,E,153,[[["self"]],[R[40]]]],[11,R[35],E,E,153,[[["self"]],[T]]],[11,R[36],E,E,153,[[],[R[37]]]],[11,"from",E,E,154,[[[T]],[T]]],[11,"into",E,E,154,[[],[U]]],[11,R[34],E,E,154,[[[U]],[R[37]]]],[11,R[43],E,E,154,[[["self"]],[T]]],[11,R[38],E,E,154,[[["self"]],[R[40]]]],[11,R[35],E,E,154,[[["self"]],[T]]],[11,R[36],E,E,154,[[],[R[37]]]],[11,"from",E,E,155,[[[T]],[T]]],[11,"into",E,E,155,[[],[U]]],[11,R[34],E,E,155,[[[U]],[R[37]]]],[11,R[43],E,E,155,[[["self"]],[T]]],[11,R[38],E,E,155,[[["self"]],[R[40]]]],[11,R[35],E,E,155,[[["self"]],[T]]],[11,R[36],E,E,155,[[],[R[37]]]],[11,"from",E,E,156,[[[T]],[T]]],[11,"into",E,E,156,[[],[U]]],[11,R[34],E,E,156,[[[U]],[R[37]]]],[11,R[43],E,E,156,[[["self"]],[T]]],[11,R[38],E,E,156,[[["self"]],[R[40]]]],[11,R[35],E,E,156,[[["self"]],[T]]],[11,R[36],E,E,156,[[],[R[37]]]],[11,"from",E,E,157,[[[T]],[T]]],[11,"into",E,E,157,[[],[U]]],[11,R[34],E,E,157,[[[U]],[R[37]]]],[11,R[43],E,E,157,[[["self"]],[T]]],[11,R[38],E,E,157,[[["self"]],[R[40]]]],[11,R[35],E,E,157,[[["self"]],[T]]],[11,R[36],E,E,157,[[],[R[37]]]],[11,"from",E,E,158,[[[T]],[T]]],[11,"into",E,E,158,[[],[U]]],[11,R[34],E,E,158,[[[U]],[R[37]]]],[11,R[43],E,E,158,[[["self"]],[T]]],[11,R[38],E,E,158,[[["self"]],[R[40]]]],[11,R[35],E,E,158,[[["self"]],[T]]],[11,R[36],E,E,158,[[],[R[37]]]],[11,"from",E,E,159,[[[T]],[T]]],[11,"into",E,E,159,[[],[U]]],[11,R[34],E,E,159,[[[U]],[R[37]]]],[11,R[43],E,E,159,[[["self"]],[T]]],[11,R[38],E,E,159,[[["self"]],[R[40]]]],[11,R[35],E,E,159,[[["self"]],[T]]],[11,R[36],E,E,159,[[],[R[37]]]],[11,"from",E,E,160,[[[T]],[T]]],[11,"into",E,E,160,[[],[U]]],[11,R[34],E,E,160,[[[U]],[R[37]]]],[11,R[43],E,E,160,[[["self"]],[T]]],[11,R[38],E,E,160,[[["self"]],[R[40]]]],[11,R[35],E,E,160,[[["self"]],[T]]],[11,R[36],E,E,160,[[],[R[37]]]],[11,"from",E,E,161,[[[T]],[T]]],[11,"into",E,E,161,[[],[U]]],[11,R[34],E,E,161,[[[U]],[R[37]]]],[11,R[43],E,E,161,[[["self"]],[T]]],[11,R[38],E,E,161,[[["self"]],[R[40]]]],[11,R[35],E,E,161,[[["self"]],[T]]],[11,R[36],E,E,161,[[],[R[37]]]],[11,"from",E,E,162,[[[T]],[T]]],[11,R[244],E,E,162,[[],["i"]]],[11,"into",E,E,162,[[],[U]]],[11,R[34],E,E,162,[[[U]],[R[37]]]],[11,R[43],E,E,162,[[["self"]],[T]]],[11,R[38],E,E,162,[[["self"]],[R[40]]]],[11,R[35],E,E,162,[[["self"]],[T]]],[11,R[36],E,E,162,[[],[R[37]]]],[11,"from",E,E,163,[[[T]],[T]]],[11,"into",E,E,163,[[],[U]]],[11,R[34],E,E,163,[[[U]],[R[37]]]],[11,R[43],E,E,163,[[["self"]],[T]]],[11,R[38],E,E,163,[[["self"]],[R[40]]]],[11,R[35],E,E,163,[[["self"]],[T]]],[11,R[36],E,E,163,[[],[R[37]]]],[11,"from",R[665],E,164,[[[T]],[T]]],[11,"into",E,E,164,[[],[U]]],[11,R[32],E,E,164,[[["self"]],[T]]],[11,R[33],E,E,164,[[[T],["self"]]]],[11,R[34],E,E,164,[[[U]],[R[37]]]],[11,R[43],E,E,164,[[["self"]],[T]]],[11,R[38],E,E,164,[[["self"]],[R[40]]]],[11,R[35],E,E,164,[[["self"]],[T]]],[11,R[36],E,E,164,[[],[R[37]]]],[11,"from",E,E,165,[[[T]],[T]]],[11,"into",E,E,165,[[],[U]]],[11,R[34],E,E,165,[[[U]],[R[37]]]],[11,R[43],E,E,165,[[["self"]],[T]]],[11,R[38],E,E,165,[[["self"]],[R[40]]]],[11,R[35],E,E,165,[[["self"]],[T]]],[11,R[36],E,E,165,[[],[R[37]]]],[11,"from",E,E,166,[[[T]],[T]]],[11,"into",E,E,166,[[],[U]]],[11,R[34],E,E,166,[[[U]],[R[37]]]],[11,R[43],E,E,166,[[["self"]],[T]]],[11,R[38],E,E,166,[[["self"]],[R[40]]]],[11,R[35],E,E,166,[[["self"]],[T]]],[11,R[36],E,E,166,[[],[R[37]]]],[11,"from",E,E,167,[[[T]],[T]]],[11,"into",E,E,167,[[],[U]]],[11,R[32],E,E,167,[[["self"]],[T]]],[11,R[33],E,E,167,[[[T],["self"]]]],[11,R[34],E,E,167,[[[U]],[R[37]]]],[11,R[43],E,E,167,[[["self"]],[T]]],[11,R[38],E,E,167,[[["self"]],[R[40]]]],[11,R[35],E,E,167,[[["self"]],[T]]],[11,R[36],E,E,167,[[],[R[37]]]],[11,"from",E,E,168,[[[T]],[T]]],[11,"into",E,E,168,[[],[U]]],[11,R[32],E,E,168,[[["self"]],[T]]],[11,R[33],E,E,168,[[[T],["self"]]]],[11,R[34],E,E,168,[[[U]],[R[37]]]],[11,R[43],E,E,168,[[["self"]],[T]]],[11,R[38],E,E,168,[[["self"]],[R[40]]]],[11,R[35],E,E,168,[[["self"]],[T]]],[11,R[36],E,E,168,[[],[R[37]]]],[11,"from",E,E,169,[[[T]],[T]]],[11,"into",E,E,169,[[],[U]]],[11,R[34],E,E,169,[[[U]],[R[37]]]],[11,R[43],E,E,169,[[["self"]],[T]]],[11,R[38],E,E,169,[[["self"]],[R[40]]]],[11,R[35],E,E,169,[[["self"]],[T]]],[11,R[36],E,E,169,[[],[R[37]]]],[11,"from",E,E,170,[[[T]],[T]]],[11,"into",E,E,170,[[],[U]]],[11,R[34],E,E,170,[[[U]],[R[37]]]],[11,R[43],E,E,170,[[["self"]],[T]]],[11,R[38],E,E,170,[[["self"]],[R[40]]]],[11,R[35],E,E,170,[[["self"]],[T]]],[11,R[36],E,E,170,[[],[R[37]]]],[11,"from",R[513],E,24,[[[T]],[T]]],[11,"into",E,E,24,[[],[U]]],[11,R[32],E,E,24,[[["self"]],[T]]],[11,R[33],E,E,24,[[[T],["self"]]]],[11,R[34],E,E,24,[[[U]],[R[37]]]],[11,R[43],E,E,24,[[["self"]],[T]]],[11,R[38],E,E,24,[[["self"]],[R[40]]]],[11,R[35],E,E,24,[[["self"]],[T]]],[11,R[36],E,E,24,[[],[R[37]]]],[11,"from",E,E,25,[[[T]],[T]]],[11,"into",E,E,25,[[],[U]]],[11,R[32],E,E,25,[[["self"]],[T]]],[11,R[33],E,E,25,[[[T],["self"]]]],[11,R[34],E,E,25,[[[U]],[R[37]]]],[11,R[43],E,E,25,[[["self"]],[T]]],[11,R[38],E,E,25,[[["self"]],[R[40]]]],[11,R[35],E,E,25,[[["self"]],[T]]],[11,R[36],E,E,25,[[],[R[37]]]],[11,"from",R[666],E,171,[[[T]],[T]]],[11,"into",E,E,171,[[],[U]]],[11,R[34],E,E,171,[[[U]],[R[37]]]],[11,R[43],E,E,171,[[["self"]],[T]]],[11,R[38],E,E,171,[[["self"]],[R[40]]]],[11,R[35],E,E,171,[[["self"]],[T]]],[11,R[36],E,E,171,[[],[R[37]]]],[11,"from",E,E,172,[[[T]],[T]]],[11,"into",E,E,172,[[],[U]]],[11,R[32],E,E,172,[[["self"]],[T]]],[11,R[33],E,E,172,[[[T],["self"]]]],[11,R[34],E,E,172,[[[U]],[R[37]]]],[11,R[43],E,E,172,[[["self"]],[T]]],[11,R[38],E,E,172,[[["self"]],[R[40]]]],[11,R[35],E,E,172,[[["self"]],[T]]],[11,R[36],E,E,172,[[],[R[37]]]],[11,"from",E,E,173,[[[T]],[T]]],[11,"into",E,E,173,[[],[U]]],[11,R[34],E,E,173,[[[U]],[R[37]]]],[11,R[43],E,E,173,[[["self"]],[T]]],[11,R[38],E,E,173,[[["self"]],[R[40]]]],[11,R[35],E,E,173,[[["self"]],[T]]],[11,R[36],E,E,173,[[],[R[37]]]],[11,"from",E,E,174,[[[T]],[T]]],[11,"into",E,E,174,[[],[U]]],[11,R[34],E,E,174,[[[U]],[R[37]]]],[11,R[43],E,E,174,[[["self"]],[T]]],[11,R[38],E,E,174,[[["self"]],[R[40]]]],[11,R[35],E,E,174,[[["self"]],[T]]],[11,R[36],E,E,174,[[],[R[37]]]],[11,"from",E,E,175,[[[T]],[T]]],[11,"into",E,E,175,[[],[U]]],[11,R[34],E,E,175,[[[U]],[R[37]]]],[11,R[43],E,E,175,[[["self"]],[T]]],[11,R[38],E,E,175,[[["self"]],[R[40]]]],[11,R[35],E,E,175,[[["self"]],[T]]],[11,R[36],E,E,175,[[],[R[37]]]],[11,"from",E,E,176,[[[T]],[T]]],[11,"into",E,E,176,[[],[U]]],[11,R[34],E,E,176,[[[U]],[R[37]]]],[11,R[43],E,E,176,[[["self"]],[T]]],[11,R[38],E,E,176,[[["self"]],[R[40]]]],[11,R[35],E,E,176,[[["self"]],[T]]],[11,R[36],E,E,176,[[],[R[37]]]],[11,"from",R[667],E,177,[[[T]],[T]]],[11,"into",E,E,177,[[],[U]]],[11,R[32],E,E,177,[[["self"]],[T]]],[11,R[33],E,E,177,[[[T],["self"]]]],[11,R[34],E,E,177,[[[U]],[R[37]]]],[11,R[43],E,E,177,[[["self"]],[T]]],[11,R[38],E,E,177,[[["self"]],[R[40]]]],[11,R[35],E,E,177,[[["self"]],[T]]],[11,R[36],E,E,177,[[],[R[37]]]],[11,"from",E,E,178,[[[T]],[T]]],[11,"into",E,E,178,[[],[U]]],[11,R[42],E,E,178,[[["self"]],[R[87]]]],[11,R[34],E,E,178,[[[U]],[R[37]]]],[11,R[43],E,E,178,[[["self"]],[T]]],[11,R[38],E,E,178,[[["self"]],[R[40]]]],[11,R[35],E,E,178,[[["self"]],[T]]],[11,R[36],E,E,178,[[],[R[37]]]],[11,"from",R[668],E,179,[[[T]],[T]]],[11,"into",E,E,179,[[],[U]]],[11,R[42],E,E,179,[[["self"]],[R[87]]]],[11,R[34],E,E,179,[[[U]],[R[37]]]],[11,R[43],E,E,179,[[["self"]],[T]]],[11,R[38],E,E,179,[[["self"]],[R[40]]]],[11,R[35],E,E,179,[[["self"]],[T]]],[11,R[36],E,E,179,[[],[R[37]]]],[11,"from",E,E,180,[[[T]],[T]]],[11,"into",E,E,180,[[],[U]]],[11,R[42],E,E,180,[[["self"]],[R[87]]]],[11,R[34],E,E,180,[[[U]],[R[37]]]],[11,R[43],E,E,180,[[["self"]],[T]]],[11,R[38],E,E,180,[[["self"]],[R[40]]]],[11,R[35],E,E,180,[[["self"]],[T]]],[11,R[36],E,E,180,[[],[R[37]]]],[11,"from",E,E,181,[[[T]],[T]]],[11,"into",E,E,181,[[],[U]]],[11,R[42],E,E,181,[[["self"]],[R[87]]]],[11,R[34],E,E,181,[[[U]],[R[37]]]],[11,R[43],E,E,181,[[["self"]],[T]]],[11,R[38],E,E,181,[[["self"]],[R[40]]]],[11,R[35],E,E,181,[[["self"]],[T]]],[11,R[36],E,E,181,[[],[R[37]]]],[11,"from",E,E,182,[[[T]],[T]]],[11,"into",E,E,182,[[],[U]]],[11,R[42],E,E,182,[[["self"]],[R[87]]]],[11,R[34],E,E,182,[[[U]],[R[37]]]],[11,R[43],E,E,182,[[["self"]],[T]]],[11,R[38],E,E,182,[[["self"]],[R[40]]]],[11,R[35],E,E,182,[[["self"]],[T]]],[11,R[36],E,E,182,[[],[R[37]]]],[11,"from",E,E,183,[[[T]],[T]]],[11,"into",E,E,183,[[],[U]]],[11,R[42],E,E,183,[[["self"]],[R[87]]]],[11,R[34],E,E,183,[[[U]],[R[37]]]],[11,R[43],E,E,183,[[["self"]],[T]]],[11,R[38],E,E,183,[[["self"]],[R[40]]]],[11,R[35],E,E,183,[[["self"]],[T]]],[11,R[36],E,E,183,[[],[R[37]]]],[11,"from",E,E,184,[[[T]],[T]]],[11,"into",E,E,184,[[],[U]]],[11,R[42],E,E,184,[[["self"]],[R[87]]]],[11,R[34],E,E,184,[[[U]],[R[37]]]],[11,R[43],E,E,184,[[["self"]],[T]]],[11,R[38],E,E,184,[[["self"]],[R[40]]]],[11,R[35],E,E,184,[[["self"]],[T]]],[11,R[36],E,E,184,[[],[R[37]]]],[11,"from",R[631],E,185,[[[T]],[T]]],[11,"into",E,E,185,[[],[U]]],[11,R[34],E,E,185,[[[U]],[R[37]]]],[11,R[43],E,E,185,[[["self"]],[T]]],[11,R[38],E,E,185,[[["self"]],[R[40]]]],[11,R[35],E,E,185,[[["self"]],[T]]],[11,R[36],E,E,185,[[],[R[37]]]],[11,"from",E,E,186,[[[T]],[T]]],[11,"into",E,E,186,[[],[U]]],[11,R[32],E,E,186,[[["self"]],[T]]],[11,R[33],E,E,186,[[[T],["self"]]]],[11,R[34],E,E,186,[[[U]],[R[37]]]],[11,R[43],E,E,186,[[["self"]],[T]]],[11,R[38],E,E,186,[[["self"]],[R[40]]]],[11,R[35],E,E,186,[[["self"]],[T]]],[11,R[36],E,E,186,[[],[R[37]]]],[11,"from",E,E,187,[[[T]],[T]]],[11,"into",E,E,187,[[],[U]]],[11,R[34],E,E,187,[[[U]],[R[37]]]],[11,R[43],E,E,187,[[["self"]],[T]]],[11,R[38],E,E,187,[[["self"]],[R[40]]]],[11,R[35],E,E,187,[[["self"]],[T]]],[11,R[36],E,E,187,[[],[R[37]]]],[11,"from",E,E,188,[[[T]],[T]]],[11,"into",E,E,188,[[],[U]]],[11,R[32],E,E,188,[[["self"]],[T]]],[11,R[33],E,E,188,[[[T],["self"]]]],[11,R[34],E,E,188,[[[U]],[R[37]]]],[11,R[43],E,E,188,[[["self"]],[T]]],[11,R[38],E,E,188,[[["self"]],[R[40]]]],[11,R[35],E,E,188,[[["self"]],[T]]],[11,R[36],E,E,188,[[],[R[37]]]],[11,"from",R[632],E,189,[[[T]],[T]]],[11,"into",E,E,189,[[],[U]]],[11,R[34],E,E,189,[[[U]],[R[37]]]],[11,R[43],E,E,189,[[["self"]],[T]]],[11,R[38],E,E,189,[[["self"]],[R[40]]]],[11,R[35],E,E,189,[[["self"]],[T]]],[11,R[36],E,E,189,[[],[R[37]]]],[11,"from",E,E,190,[[[T]],[T]]],[11,"into",E,E,190,[[],[U]]],[11,R[34],E,E,190,[[[U]],[R[37]]]],[11,R[43],E,E,190,[[["self"]],[T]]],[11,R[38],E,E,190,[[["self"]],[R[40]]]],[11,R[35],E,E,190,[[["self"]],[T]]],[11,R[36],E,E,190,[[],[R[37]]]],[11,R[286],E,E,190,[[],["f"]]],[11,"from",R[669],E,191,[[[T]],[T]]],[11,"into",E,E,191,[[],[U]]],[11,R[42],E,E,191,[[["self"]],[R[87]]]],[11,R[34],E,E,191,[[[U]],[R[37]]]],[11,R[43],E,E,191,[[["self"]],[T]]],[11,R[38],E,E,191,[[["self"]],[R[40]]]],[11,R[35],E,E,191,[[["self"]],[T]]],[11,R[36],E,E,191,[[],[R[37]]]],[11,"from",E,E,192,[[[T]],[T]]],[11,"into",E,E,192,[[],[U]]],[11,R[42],E,E,192,[[["self"]],[R[87]]]],[11,R[34],E,E,192,[[[U]],[R[37]]]],[11,R[43],E,E,192,[[["self"]],[T]]],[11,R[38],E,E,192,[[["self"]],[R[40]]]],[11,R[35],E,E,192,[[["self"]],[T]]],[11,R[36],E,E,192,[[],[R[37]]]],[11,"from",R[633],E,193,[[[T]],[T]]],[11,"into",E,E,193,[[],[U]]],[11,R[32],E,E,193,[[["self"]],[T]]],[11,R[33],E,E,193,[[[T],["self"]]]],[11,R[34],E,E,193,[[[U]],[R[37]]]],[11,R[43],E,E,193,[[["self"]],[T]]],[11,R[38],E,E,193,[[["self"]],[R[40]]]],[11,R[35],E,E,193,[[["self"]],[T]]],[11,R[36],E,E,193,[[],[R[37]]]],[11,"from",E,E,194,[[[T]],[T]]],[11,"into",E,E,194,[[],[U]]],[11,R[34],E,E,194,[[[U]],[R[37]]]],[11,R[43],E,E,194,[[["self"]],[T]]],[11,R[38],E,E,194,[[["self"]],[R[40]]]],[11,R[35],E,E,194,[[["self"]],[T]]],[11,R[36],E,E,194,[[],[R[37]]]],[11,"from",E,E,195,[[[T]],[T]]],[11,"into",E,E,195,[[],[U]]],[11,R[34],E,E,195,[[[U]],[R[37]]]],[11,R[43],E,E,195,[[["self"]],[T]]],[11,R[38],E,E,195,[[["self"]],[R[40]]]],[11,R[35],E,E,195,[[["self"]],[T]]],[11,R[36],E,E,195,[[],[R[37]]]],[11,"from",R[670],E,196,[[[T]],[T]]],[11,"into",E,E,196,[[],[U]]],[11,R[42],E,E,196,[[["self"]],[R[87]]]],[11,R[34],E,E,196,[[[U]],[R[37]]]],[11,R[43],E,E,196,[[["self"]],[T]]],[11,R[38],E,E,196,[[["self"]],[R[40]]]],[11,R[35],E,E,196,[[["self"]],[T]]],[11,R[36],E,E,196,[[],[R[37]]]],[11,"from",E,E,197,[[[T]],[T]]],[11,"into",E,E,197,[[],[U]]],[11,R[42],E,E,197,[[["self"]],[R[87]]]],[11,R[34],E,E,197,[[[U]],[R[37]]]],[11,R[43],E,E,197,[[["self"]],[T]]],[11,R[38],E,E,197,[[["self"]],[R[40]]]],[11,R[35],E,E,197,[[["self"]],[T]]],[11,R[36],E,E,197,[[],[R[37]]]],[11,"from",R[634],E,198,[[[T]],[T]]],[11,"into",E,E,198,[[],[U]]],[11,R[34],E,E,198,[[[U]],[R[37]]]],[11,R[43],E,E,198,[[["self"]],[T]]],[11,R[38],E,E,198,[[["self"]],[R[40]]]],[11,R[35],E,E,198,[[["self"]],[T]]],[11,R[36],E,E,198,[[],[R[37]]]],[11,"from",R[671],E,199,[[[T]],[T]]],[11,"into",E,E,199,[[],[U]]],[11,R[34],E,E,199,[[[U]],[R[37]]]],[11,R[43],E,E,199,[[["self"]],[T]]],[11,R[38],E,E,199,[[["self"]],[R[40]]]],[11,R[35],E,E,199,[[["self"]],[T]]],[11,R[36],E,E,199,[[],[R[37]]]],[11,"from",E,E,200,[[[T]],[T]]],[11,"into",E,E,200,[[],[U]]],[11,R[32],E,E,200,[[["self"]],[T]]],[11,R[33],E,E,200,[[[T],["self"]]]],[11,R[34],E,E,200,[[[U]],[R[37]]]],[11,R[43],E,E,200,[[["self"]],[T]]],[11,R[38],E,E,200,[[["self"]],[R[40]]]],[11,R[35],E,E,200,[[["self"]],[T]]],[11,R[36],E,E,200,[[],[R[37]]]],[11,"from",R[634],E,201,[[[T]],[T]]],[11,"into",E,E,201,[[],[U]]],[11,R[34],E,E,201,[[[U]],[R[37]]]],[11,R[43],E,E,201,[[["self"]],[T]]],[11,R[38],E,E,201,[[["self"]],[R[40]]]],[11,R[35],E,E,201,[[["self"]],[T]]],[11,R[36],E,E,201,[[],[R[37]]]],[11,R[286],E,E,201,[[],["f"]]],[11,"from",R[672],E,202,[[[T]],[T]]],[11,"into",E,E,202,[[],[U]]],[11,R[42],E,E,202,[[["self"]],[R[87]]]],[11,R[34],E,E,202,[[[U]],[R[37]]]],[11,R[43],E,E,202,[[["self"]],[T]]],[11,R[38],E,E,202,[[["self"]],[R[40]]]],[11,R[35],E,E,202,[[["self"]],[T]]],[11,R[36],E,E,202,[[],[R[37]]]],[11,"from",R[634],E,203,[[[T]],[T]]],[11,"into",E,E,203,[[],[U]]],[11,R[34],E,E,203,[[[U]],[R[37]]]],[11,R[43],E,E,203,[[["self"]],[T]]],[11,R[38],E,E,203,[[["self"]],[R[40]]]],[11,R[35],E,E,203,[[["self"]],[T]]],[11,R[36],E,E,203,[[],[R[37]]]],[11,R[286],E,E,203,[[],["f"]]],[11,"from",E,E,204,[[[T]],[T]]],[11,"into",E,E,204,[[],[U]]],[11,R[42],E,E,204,[[["self"]],[R[87]]]],[11,R[34],E,E,204,[[[U]],[R[37]]]],[11,R[43],E,E,204,[[["self"]],[T]]],[11,R[38],E,E,204,[[["self"]],[R[40]]]],[11,R[35],E,E,204,[[["self"]],[T]]],[11,R[36],E,E,204,[[],[R[37]]]],[11,"from",E,E,205,[[[T]],[T]]],[11,"into",E,E,205,[[],[U]]],[11,R[34],E,E,205,[[[U]],[R[37]]]],[11,R[43],E,E,205,[[["self"]],[T]]],[11,R[38],E,E,205,[[["self"]],[R[40]]]],[11,R[35],E,E,205,[[["self"]],[T]]],[11,R[36],E,E,205,[[],[R[37]]]],[11,"from",R[673],E,206,[[[T]],[T]]],[11,"into",E,E,206,[[],[U]]],[11,R[32],E,E,206,[[["self"]],[T]]],[11,R[33],E,E,206,[[[T],["self"]]]],[11,R[34],E,E,206,[[[U]],[R[37]]]],[11,R[43],E,E,206,[[["self"]],[T]]],[11,R[38],E,E,206,[[["self"]],[R[40]]]],[11,R[35],E,E,206,[[["self"]],[T]]],[11,R[36],E,E,206,[[],[R[37]]]],[11,"from",E,E,207,[[[T]],[T]]],[11,"into",E,E,207,[[],[U]]],[11,R[42],E,E,207,[[["self"]],[R[87]]]],[11,R[34],E,E,207,[[[U]],[R[37]]]],[11,R[43],E,E,207,[[["self"]],[T]]],[11,R[38],E,E,207,[[["self"]],[R[40]]]],[11,R[35],E,E,207,[[["self"]],[T]]],[11,R[36],E,E,207,[[],[R[37]]]],[11,"from",E,E,208,[[[T]],[T]]],[11,"into",E,E,208,[[],[U]]],[11,R[34],E,E,208,[[[U]],[R[37]]]],[11,R[43],E,E,208,[[["self"]],[T]]],[11,R[38],E,E,208,[[["self"]],[R[40]]]],[11,R[35],E,E,208,[[["self"]],[T]]],[11,R[36],E,E,208,[[],[R[37]]]],[11,R[286],E,E,208,[[],["f"]]],[11,"from",R[674],E,209,[[[T]],[T]]],[11,"into",E,E,209,[[],[U]]],[11,R[32],E,E,209,[[["self"]],[T]]],[11,R[33],E,E,209,[[[T],["self"]]]],[11,R[34],E,E,209,[[[U]],[R[37]]]],[11,R[43],E,E,209,[[["self"]],[T]]],[11,R[38],E,E,209,[[["self"]],[R[40]]]],[11,R[35],E,E,209,[[["self"]],[T]]],[11,R[36],E,E,209,[[],[R[37]]]],[11,"from",R[648],E,34,[[[T]],[T]]],[11,"into",E,E,34,[[],[U]]],[11,R[34],E,E,34,[[[U]],[R[37]]]],[11,R[43],E,E,34,[[["self"]],[T]]],[11,R[38],E,E,34,[[["self"]],[R[40]]]],[11,R[35],E,E,34,[[["self"]],[T]]],[11,R[36],E,E,34,[[],[R[37]]]],[11,"from",E,E,36,[[[T]],[T]]],[11,"into",E,E,36,[[],[U]]],[11,R[34],E,E,36,[[[U]],[R[37]]]],[11,R[43],E,E,36,[[["self"]],[T]]],[11,R[38],E,E,36,[[["self"]],[R[40]]]],[11,R[35],E,E,36,[[["self"]],[T]]],[11,R[36],E,E,36,[[],[R[37]]]],[11,"from",E,E,210,[[[T]],[T]]],[11,"into",E,E,210,[[],[U]]],[11,R[34],E,E,210,[[[U]],[R[37]]]],[11,R[43],E,E,210,[[["self"]],[T]]],[11,R[38],E,E,210,[[["self"]],[R[40]]]],[11,R[35],E,E,210,[[["self"]],[T]]],[11,R[36],E,E,210,[[],[R[37]]]],[11,R[286],E,E,210,[[],["f"]]],[11,"from",E,E,35,[[[T]],[T]]],[11,"into",E,E,35,[[],[U]]],[11,R[32],E,E,35,[[["self"]],[T]]],[11,R[33],E,E,35,[[[T],["self"]]]],[11,R[34],E,E,35,[[[U]],[R[37]]]],[11,R[43],E,E,35,[[["self"]],[T]]],[11,R[38],E,E,35,[[["self"]],[R[40]]]],[11,R[35],E,E,35,[[["self"]],[T]]],[11,R[36],E,E,35,[[],[R[37]]]],[11,"from",R[674],E,31,[[[T]],[T]]],[11,"into",E,E,31,[[],[U]]],[11,R[34],E,E,31,[[[U]],[R[37]]]],[11,R[43],E,E,31,[[["self"]],[T]]],[11,R[38],E,E,31,[[["self"]],[R[40]]]],[11,R[35],E,E,31,[[["self"]],[T]]],[11,R[36],E,E,31,[[],[R[37]]]],[11,"from",E,E,33,[[[T]],[T]]],[11,"into",E,E,33,[[],[U]]],[11,R[34],E,E,33,[[[U]],[R[37]]]],[11,R[43],E,E,33,[[["self"]],[T]]],[11,R[38],E,E,33,[[["self"]],[R[40]]]],[11,R[35],E,E,33,[[["self"]],[T]]],[11,R[36],E,E,33,[[],[R[37]]]],[11,"from",E,E,32,[[[T]],[T]]],[11,"into",E,E,32,[[],[U]]],[11,R[32],E,E,32,[[["self"]],[T]]],[11,R[33],E,E,32,[[[T],["self"]]]],[11,R[34],E,E,32,[[[U]],[R[37]]]],[11,R[43],E,E,32,[[["self"]],[T]]],[11,R[38],E,E,32,[[["self"]],[R[40]]]],[11,R[35],E,E,32,[[["self"]],[T]]],[11,R[36],E,E,32,[[],[R[37]]]],[11,"hash",R[659],E,7,[[["self"],["__h"]]]],[11,"fmt",E,E,7,[[[R[50]],["self"]],[["error"],[R[37],["error"]]]]],[11,"fmt",E,E,66,[[[R[50]],["self"]],[["error"],[R[37],["error"]]]]],[11,"fmt",E,E,66,[[[R[50]],["self"]],[["error"],[R[37],["error"]]]]],[11,R[146],E,E,7,[[["self"],[R[675]]],[[R[49]],[R[8],[R[49]]]]]],[11,"eq",E,E,7,[[["self"],[R[675]]],["bool"]]],[11,R[92],E,E,66,[[["self"]],["str"]]],[11,"cause",E,E,66,[[["self"]],[[R[8],["error"]],["error"]]]],[11,"source",E,E,66,[[["self"]],[[R[8],["error"]],["error"]]]],[11,"clone",E,E,7,[[["self"]],[R[675]]]],[11,"from",E,E,66,[[["intoinnererror"]],["error"]]],[11,"from",E,"Converts an [`ErrorKind`] into an [`Error`].",66,[[[R[675]]],["error"]]],[11,"from",E,"Converts a [`NulError`] into a [`io::Error`].",66,[[["nulerror"]],["error"]]],[11,"cmp",E,E,7,[[["self"],[R[675]]],[R[49]]]],[11,"fmt",R[634],E,198,[[[R[50]],["self"]],[["error"],[R[37],["error"]]]]],[11,"fmt",R[671],E,200,[[[R[50]],["self"]],[["error"],[R[37],["error"]]]]],[11,"fmt",R[634],E,201,[[[R[50]],["self"]],[["error"],[R[37],["error"]]]]],[11,"fmt",R[672],E,202,[[[R[50]],["self"]],[["error"],[R[37],["error"]]]]],[11,"fmt",R[634],E,205,[[[R[50]],["self"]],[["error"],[R[37],["error"]]]]],[11,"fmt",E,E,204,[[[R[50]],["self"]],[["error"],[R[37],["error"]]]]],[11,"fmt",R[671],E,199,[[[R[50]],["self"]],[["error"],[R[37],["error"]]]]],[11,"fmt",R[634],E,203,[[[R[50]],["self"]],[["error"],[R[37],["error"]]]]],[11,"clone",R[671],E,200,[[["self"]],["key"]]],[11,"poll",R[634],E,198,[[["self"]],[[R[37],["async","error"]],["async",[R[8]]],["error"]]]],[11,"poll",E,E,205,[[["self"]],[[R[37],["async"]],["async",[R[8]]]]]],[11,"poll",E,E,201,[[["self"]],[[R[37],["async"]],["async",[R[8]]]]]],[11,R[92],R[672],E,202,[[["self"]],["str"]]],[11,R[92],R[634],E,204,[[["self"]],["str"]]],[11,R[295],E,E,198,[[],[R[269]]]],[11,"fmt",R[672],E,202,[[[R[50]],["self"]],[["error"],[R[37],["error"]]]]],[11,"fmt",R[634],E,204,[[[R[50]],["self"]],[["error"],[R[37],["error"]]]]],[11,"poll",E,E,203,[[["self"]],[["async"],[R[37],["async"]]]]],[11,"poll",E,E,201,[[["self"]],[[R[37],["async"]],["async"]]]],[11,"fmt",R[673],E,206,[[[R[50]],["self"]],[["error"],[R[37],["error"]]]]],[11,"fmt",E,E,207,[[[R[50]],["self"]],[["error"],[R[37],["error"]]]]],[11,"spawn",E,E,206,[[["self"],[T]],[[R[112]],[R[37],[R[112]]]]]],[11,"status",E,E,206,[[["self"]],[[R[112]],[R[37],[R[112]]]]]],[11,R[681],E,E,206,[[["self"],[T]],[[R[117]],[R[37],[R[117]]]]]],[11,"clone",E,E,206,[[["self"]],[R[116]]]],[11,"spawn",E,E,206,[[["self"],["future"],["box",["future"]]],[[R[112]],[R[37],[R[112]]]]]],[11,"status",E,E,206,[[["self"]],[[R[112]],[R[37],[R[112]]]]]],[11,R[92],E,E,207,[[["self"]],["str"]]],[11,"fmt",E,E,207,[[[R[50]],["self"]],[["error"],[R[37],["error"]]]]],[11,"drop",R[663],E,93,[[["self"]]]],[11,"drop",R[664],E,114,[[["self"]]]],[11,"poll",R[663],E,112,[[["self"]],[[R[37],["async"]],["async"]]]],[11,"poll",E,E,107,[[["self"]],[["async"],[R[37],["async"]]]]],[11,"poll",E,E,102,[[["self"]],[[R[37],["async"]],["async"]]]],[11,"poll",E,E,111,[[["self"]],[[R[37],["async"]],["async"]]]],[11,"poll",E,E,103,[[["self"]],[["async"],[R[37],["async"]]]]],[11,"poll",R[515],E,148,[[["self"]],[[R[37],["async"]],["async",["vec"]]]]],[11,"poll",R[663],E,95,[[["self"]],[[R[37],["async"]],["async"]]]],[11,"poll",R[515],E,144,[[["self"]],[["async"],[R[37],["async"]]]]],[11,"poll",R[663],E,89,[[["self"]],[["async"],[R[37],["async"]]]]],[11,"poll",E,E,93,[[["self"]],[["async"],[R[37],["async"]]]]],[11,"poll",E,E,97,[[["self"]],[["async"],[R[37],["async"]]]]],[11,"poll",E,E,17,[[["self"]],[[R[37],["async"]],["async"]]]],[11,"poll",E,E,84,[[["self"]],[[R[37],["async"]],["async"]]]],[11,"poll",R[515],E,119,[[["self"]],[["async"],[R[37],["async"]]]]],[11,"poll",E,E,121,[[["self"]],[["async"],[R[37],["async"]]]]],[11,"poll",R[663],E,105,[[["self"]],[["async"],[R[37],["async"]]]]],[11,"poll",E,E,100,[[["self"]],[["async"],[R[37],["async"]]]]],[11,"poll",R[515],E,141,[[["self"]],[["async"],[R[37],["async"]]]]],[11,"poll",R[663],E,88,[[["self"]],[["async"],[R[37],["async"]]]]],[11,"poll",E,E,92,[[["self"]],[[R[37],["async"]],["async"]]]],[11,"poll",E,E,113,[[["self"]],[["async"],[R[37],["async"]]]]],[11,"poll",E,E,104,[[["self"]],[["async"],[R[37],["async"]]]]],[11,"poll",E,E,86,[[["self"]],[[R[37],["async"]],["async"]]]],[11,"poll",E,E,110,[[["self"]],[[R[37],["async"]],["async"]]]],[11,"poll",E,E,99,[[["self"]],[[R[37],["async"]],["async"]]]],[11,"poll",R[515],E,117,[[["self"]],[[R[37],["async"]],["async"]]]],[11,"poll",E,E,132,[[["self"]],[[R[37],["async"]],["async"]]]],[11,"poll",R[663],E,96,[[["self"]],[["async"],[R[37],["async"]]]]],[11,"poll",E,E,94,[[["self"]],[["async"],[R[37],["async"]]]]],[11,"poll",R[515],E,143,[[["self"]],[["async"],[R[37],["async"]]]]],[11,"poll",R[663],E,106,[[["self"]],[[R[37],["async"]],["async"]]]],[11,"poll",E,E,87,[[["self"]],[[R[37],["async"]],["async"]]]],[11,"poll",E,E,91,[[["self"]],[[R[37],["async"]],["async"]]]],[11,"poll",E,E,109,[[["self"]],[["async"],[R[37],["async"]]]]],[11,"poll",E,E,85,[[["self"]],[["async"],[R[37],["async"]]]]],[11,R[93],R[515],E,116,[[["self"]],[[R[37],[R[368]]],[R[368]]]]],[11,R[95],E,E,116,[[["self"]],[["async"],[R[37],["async"]]]]],[11,"close",E,E,116,[[["self"]],[["async"],[R[37],["async"]]]]],[11,R[93],E,E,158,[[["self"]],[[R[37],[R[368]]],[R[368]]]]],[11,R[95],E,E,158,[[["self"]],[["async"],[R[37],["async"]]]]],[11,"close",E,E,158,[[["self"]],[["async"],[R[37],["async"]]]]],[11,R[93],E,E,126,[[["self"]],[[R[37],[R[368]]],[R[368]]]]],[11,R[95],E,E,126,[[["self"]],[["async"],[R[37],["async"]]]]],[11,"close",E,E,126,[[["self"]],[["async"],[R[37],["async"]]]]],[11,R[93],E,E,157,[[["self"]],[[R[368]],[R[37],[R[368]]]]]],[11,R[95],E,E,157,[[["self"]],[["async"],[R[37],["async"]]]]],[11,"close",E,E,157,[[["self"]],[["async"],[R[37],["async"]]]]],[11,R[93],E,E,154,[[["self"]],[[R[37],[R[368]]],[R[368]]]]],[11,R[95],E,E,154,[[["self"]],[["async"],[R[37],["async"]]]]],[11,"close",E,E,154,[[["self"]],[["async"],[R[37],["async"]]]]],[11,R[93],E,E,124,[[["self"]],[[R[37],[R[368]]],[R[368]]]]],[11,R[95],E,E,124,[[["self"]],[["async"],[R[37],["async"]]]]],[11,"close",E,E,124,[[["self"]],[["async"],[R[37],["async"]]]]],[11,R[93],E,E,142,[[["self"]],[[R[37],[R[368]]],[R[368]]]]],[11,R[95],E,E,142,[[["self"]],[["async"],[R[37],["async"]]]]],[11,"close",E,E,142,[[["self"]],[["async"],[R[37],["async"]]]]],[11,R[93],E,E,125,[[["self"]],[[R[37],[R[368]]],[R[368]]]]],[11,R[95],E,E,125,[[["self"]],[["async"],[R[37],["async"]]]]],[11,"close",E,E,125,[[["self"]],[["async"],[R[37],["async"]]]]],[11,R[93],E,E,149,[[["self"]],[[R[37],[R[368]]],[R[368]]]]],[11,R[95],E,E,149,[[["self"]],[["async"],[R[37],["async"]]]]],[11,"close",E,E,149,[[["self"]],[["async"],[R[37],["async"]]]]],[11,R[93],E,E,134,[[["self"]],[[R[37],[R[368]]],[R[368]]]]],[11,R[95],E,E,134,[[["self"]],[["async"],[R[37],["async"]]]]],[11,"close",E,E,134,[[["self"]],[["async"],[R[37],["async"]]]]],[11,R[93],E,E,155,[[["self"]],[[R[37],[R[368]]],[R[368]]]]],[11,R[95],E,E,155,[[["self"]],[["async"],[R[37],["async"]]]]],[11,"close",E,E,155,[[["self"]],[["async"],[R[37],["async"]]]]],[11,R[93],E,E,130,[[["self"]],[[R[37],[R[368]]],[R[368]]]]],[11,R[95],E,E,130,[[["self"]],[["async"],[R[37],["async"]]]]],[11,"close",E,E,130,[[["self"]],[["async"],[R[37],["async"]]]]],[11,R[93],E,E,147,[[["self"]],[[R[37],[R[368]]],[R[368]]]]],[11,R[95],E,E,147,[[["self"]],[["async"],[R[37],["async"]]]]],[11,"close",E,E,147,[[["self"]],[["async"],[R[37],["async"]]]]],[11,R[93],E,E,138,[[["self"]],[[R[37],[R[368]]],[R[368]]]]],[11,R[95],E,E,138,[[["self"]],[["async"],[R[37],["async"]]]]],[11,"close",E,E,138,[[["self"]],[["async"],[R[37],["async"]]]]],[11,R[93],E,E,139,[[["self"]],[[R[37],[R[368]]],[R[368]]]]],[11,R[95],E,E,139,[[["self"]],[["async"],[R[37],["async"]]]]],[11,"close",E,E,139,[[["self"]],[["async"],[R[37],["async"]]]]],[11,R[93],E,E,161,[[["self"]],[[R[37],[R[368]]],[R[368]]]]],[11,R[95],E,E,161,[[["self"]],[["async"],[R[37],["async"]]]]],[11,"close",E,E,161,[[["self"]],[["async"],[R[37],["async"]]]]],[11,R[93],E,E,137,[[["self"]],[[R[37],[R[368]]],[R[368]]]]],[11,R[95],E,E,137,[[["self"]],[["async"],[R[37],["async"]]]]],[11,"close",E,E,137,[[["self"]],[["async"],[R[37],["async"]]]]],[11,R[93],E,E,128,[[["self"]],[[R[37],[R[368]]],[R[368]]]]],[11,R[95],E,E,128,[[["self"]],[["async"],[R[37],["async"]]]]],[11,"close",E,E,128,[[["self"]],[["async"],[R[37],["async"]]]]],[11,R[93],E,E,118,[[["self"]],[[R[37],[R[368]]],[R[368]]]]],[11,R[95],E,E,118,[[["self"]],[["async"],[R[37],["async"]]]]],[11,"close",E,E,118,[[["self"]],[["async"],[R[37],["async"]]]]],[11,R[93],E,E,152,[[["self"]],[[R[37],[R[368]]],[R[368]]]]],[11,R[95],E,E,152,[[["self"]],[["async"],[R[37],["async"]]]]],[11,"close",E,E,152,[[["self"]],[["async"],[R[37],["async"]]]]],[11,R[93],E,E,160,[[["self"]],[[R[37],[R[368]]],[R[368]]]]],[11,R[95],E,E,160,[[["self"]],[["async"],[R[37],["async"]]]]],[11,"close",E,E,160,[[["self"]],[["async"],[R[37],["async"]]]]],[11,"clone",R[513],E,25,[[["self"]],[R[368]]]],[11,"clone",R[663],E,89,[[["self"]],[R[510]]]],[11,"clone",E,E,98,[[["self"]],[R[685]]]],[11,"clone",R[513],E,24,[[["self"]],["async"]]],[11,"clone",R[665],E,164,[[["self"]],["task"]]],[11,"clone",R[663],E,93,[[["self"]],["shared"]]],[11,"clone",E,E,90,[[["self"]],[R[684]]]],[11,"clone",R[665],E,168,[[["self"]],["taskrc"]]],[11,"clone",E,E,167,[[["self"]],[R[676]]]],[11,"clone",R[663],E,15,[[["self"]],[R[680]]]],[11,"fmt",E,E,93,[[[R[50]],["self"]],[["error"],[R[37],["error"]]]]],[11,"fmt",R[515],E,156,[[[R[50]],["self"]],[["error"],[R[37],["error"]]]]],[11,"fmt",R[665],E,170,[[[R[50]],["self"]],[["error"],[R[37],["error"]]]]],[11,"fmt",R[663],E,92,[[[R[50]],["self"]],[["error"],[R[37],["error"]]]]],[11,"fmt",E,E,17,[[[R[50]],["self"]],[["error"],[R[37],["error"]]]]],[11,"fmt",R[515],E,19,[[[R[50]],["self"]],[["error"],[R[37],["error"]]]]],[11,"fmt",E,E,134,[[[R[50]],["self"]],[["error"],[R[37],["error"]]]]],[11,"fmt",E,E,124,[[[R[50]],["self"]],[["error"],[R[37],["error"]]]]],[11,"fmt",E,E,132,[[[R[50]],["self"]],[["error"],[R[37],["error"]]]]],[11,"fmt",R[663],E,16,[[[R[50]],["self"]],[["error"],[R[37],["error"]]]]],[11,"fmt",E,E,96,[[[R[50]],["self"]],[["error"],[R[37],["error"]]]]],[11,"fmt",R[515],E,122,[[[R[50]],["self"]],[["error"],[R[37],["error"]]]]],[11,"fmt",R[665],E,167,[[[R[50]],["self"]],[["error"],[R[37],["error"]]]]],[11,"fmt",R[515],E,139,[[[R[50]],["self"]],[["error"],[R[37],["error"]]]]],[11,"fmt",E,E,118,[[[R[50]],["self"]],[["error"],[R[37],["error"]]]]],[11,"fmt",R[663],E,85,[[[R[50]],["self"]],[["error"],[R[37],["error"]]]]],[11,"fmt",E,E,95,[[[R[50]],["self"]],[["error"],[R[37],["error"]]]]],[11,"fmt",R[515],E,144,[[[R[50]],["self"]],[["error"],[R[37],["error"]]]]],[11,"fmt",R[663],E,105,[[[R[50]],["self"]],[["error"],[R[37],["error"]]]]],[11,"fmt",R[664],E,115,[[[R[50]],["self"]],[["error"],[R[37],["error"]]]]],[11,"fmt",R[515],E,138,[[[R[50]],["self"]],[["error"],[R[37],["error"]]]]],[11,"fmt",R[663],E,112,[[[R[50]],["self"]],[["error"],[R[37],["error"]]]]],[11,"fmt",E,E,88,[[[R[50]],["self"]],[["error"],[R[37],["error"]]]]],[11,"fmt",E,E,98,[[[R[50]],["self"]],[["error"],[R[37],["error"]]]]],[11,"fmt",R[513],E,24,[[[R[50]],["self"]],[["error"],[R[37],["error"]]]]],[11,"fmt",R[663],E,111,[[[R[50]],["self"]],[["error"],[R[37],["error"]]]]],[11,"fmt",R[515],E,148,[[[R[50]],["self"]],[["error"],[R[37],["error"]]]]],[11,"fmt",E,E,157,[[[R[50]],["self"]],[["error"],[R[37],["error"]]]]],[11,"fmt",R[663],E,15,[[[R[50]],["self"]],[["error"],[R[37],["error"]]]]],[11,"fmt",R[515],E,137,[[[R[50]],["self"]],[["error"],[R[37],["error"]]]]],[11,"fmt",E,E,135,[[[R[50]],["self"]],[["error"],[R[37],["error"]]]]],[11,"fmt",E,E,151,[[[R[50]],["self"]],[["error"],[R[37],["error"]]]]],[11,"fmt",R[665],E,165,[[[R[50]],["self"]],[["error"],[R[37],["error"]]]]],[11,"fmt",R[663],E,109,[[[R[50]],["self"]],[["error"],[R[37],["error"]]]]],[11,"fmt",R[515],E,141,[[[R[50]],["self"]],[["error"],[R[37],["error"]]]]],[11,"fmt",E,E,149,[[[R[50]],["self"]],[["error"],[R[37],["error"]]]]],[11,"fmt",R[663],E,113,[[[R[50]],["self"]],[["error"],[R[37],["error"]]]]],[11,"fmt",R[515],E,142,[[[R[50]],["self"]],[["error"],[R[37],["error"]]]]],[11,"fmt",E,E,140,[[[R[50]],["self"]],[["error"],[R[37],["error"]]]]],[11,"fmt",E,E,158,[[[R[50]],["self"]],[["error"],[R[37],["error"]]]]],[11,"fmt",R[663],E,99,[[[R[50]],["self"]],[["error"],[R[37],["error"]]]]],[11,"fmt",E,E,104,[[[R[50]],["self"]],[["error"],[R[37],["error"]]]]],[11,"fmt",R[515],E,120,[[[R[50]],["self"]],[["error"],[R[37],["error"]]]]],[11,"fmt",E,E,131,[[[R[50]],["self"]],[["error"],[R[37],["error"]]]]],[11,"fmt",E,E,127,[[[R[50]],["self"]],[["error"],[R[37],["error"]]]]],[11,"fmt",E,E,152,[[[R[50]],["self"]],[["error"],[R[37],["error"]]]]],[11,"fmt",R[513],E,25,[[[R[50]],["self"]],[["error"],[R[37],["error"]]]]],[11,"fmt",R[515],E,163,[[[R[50]],["self"]],[["error"],[R[37],["error"]]]]],[11,"fmt",E,E,119,[[[R[50]],["self"]],[["error"],[R[37],["error"]]]]],[11,"fmt",E,E,143,[[[R[50]],["self"]],[["error"],[R[37],["error"]]]]],[11,"fmt",R[663],E,106,[[[R[50]],["self"]],[["error"],[R[37],["error"]]]]],[11,"fmt",R[515],E,155,[[[R[50]],["self"]],[["error"],[R[37],["error"]]]]],[11,"fmt",E,E,154,[[[R[50]],["self"]],[["error"],[R[37],["error"]]]]],[11,"fmt",R[663],E,89,[[[R[50]],["self"]],[["error"],[R[37],["error"]]]]],[11,"fmt",R[665],E,169,[[[R[50]],["self"]],[["error"],[R[37],["error"]]]]],[11,"fmt",R[515],E,162,[[[R[50]],["self"]],[["error"],[R[37],["error"]]]]],[11,"fmt",E,E,123,[[[R[50]],["self"]],[["error"],[R[37],["error"]]]]],[11,"fmt",E,E,145,[[[R[50]],["self"]],[["error"],[R[37],["error"]]]]],[11,"fmt",R[663],E,103,[[[R[50]],["self"]],[["error"],[R[37],["error"]]]]],[11,"fmt",R[515],E,126,[[[R[50]],["self"]],[["error"],[R[37],["error"]]]]],[11,"fmt",R[663],E,110,[[[R[50]],["self"]],[["error"],[R[37],["error"]]]]],[11,"fmt",R[515],E,125,[[[R[50]],["self"]],[["error"],[R[37],["error"]]]]],[11,"fmt",E,E,153,[[[R[50]],["self"]],[["error"],[R[37],["error"]]]]],[11,"fmt",R[664],E,114,[[[R[50]],["self"]],[["error"],[R[37],["error"]]]]],[11,"fmt",R[665],E,168,[[[R[50]],["self"]],[["error"],[R[37],["error"]]]]],[11,"fmt",R[515],E,116,[[[R[50]],["self"]],[["error"],[R[37],["error"]]]]],[11,"fmt",E,E,146,[[[R[50]],["self"]],[["error"],[R[37],["error"]]]]],[11,"fmt",E,E,128,[[[R[50]],["self"]],[["error"],[R[37],["error"]]]]],[11,"fmt",R[663],E,107,[[[R[50]],["self"]],[["error"],[R[37],["error"]]]]],[11,"fmt",R[665],E,164,[[[R[50]],["self"]],[["error"],[R[37],["error"]]]]],[11,"fmt",R[663],E,101,[[[R[50]],["self"]],[["error"],[R[37],["error"]]]]],[11,"fmt",R[515],E,150,[[[R[50]],["self"]],[["error"],[R[37],["error"]]]]],[11,"fmt",R[663],E,84,[[[R[50]],["self"]],[["error"],[R[37],["error"]]]]],[11,"fmt",E,E,90,[[[R[50]],["self"]],[["error"],[R[37],["error"]]]]],[11,"fmt",R[515],E,160,[[[R[50]],["self"]],[["error"],[R[37],["error"]]]]],[11,"fmt",R[663],E,100,[[[R[50]],["self"]],[["error"],[R[37],["error"]]]]],[11,"fmt",R[515],E,136,[[[R[50]],["self"]],[["error"],[R[37],["error"]]]]],[11,"fmt",E,E,121,[[[R[50]],["self"]],[["error"],[R[37],["error"]]]]],[11,"fmt",E,E,129,[[[R[50]],["self"]],[["error"],[R[37],["error"]]]]],[11,"fmt",R[663],E,91,[[[R[50]],["self"]],[["error"],[R[37],["error"]]]]],[11,"fmt",R[515],E,117,[[[R[50]],["self"]],[["error"],[R[37],["error"]]]]],[11,"fmt",E,E,147,[[[R[50]],["self"]],[["error"],[R[37],["error"]]]]],[11,"fmt",E,E,133,[[[R[50]],["self"]],[["error"],[R[37],["error"]]]]],[11,"fmt",R[665],E,166,[[[R[50]],["self"]],[["error"],[R[37],["error"]]]]],[11,"fmt",R[663],E,86,[[[R[50]],["self"]],[["error"],[R[37],["error"]]]]],[11,"fmt",E,E,87,[[[R[50]],["self"]],[["error"],[R[37],["error"]]]]],[11,"fmt",E,E,83,[[[R[50]],["self"]],[["error"],[R[37],["error"]]]]],[11,"fmt",E,E,97,[[[R[50]],["self"]],[["error"],[R[37],["error"]]]]],[11,"fmt",E,E,94,[[[R[50]],["self"]],[["error"],[R[37],["error"]]]]],[11,"fmt",R[515],E,130,[[[R[50]],["self"]],[["error"],[R[37],["error"]]]]],[11,"fmt",E,E,159,[[[R[50]],["self"]],[["error"],[R[37],["error"]]]]],[11,"fmt",R[663],E,102,[[[R[50]],["self"]],[["error"],[R[37],["error"]]]]],[11,"fmt",E,E,108,[[[R[50]],["self"]],[["error"],[R[37],["error"]]]]],[11,"fmt",R[515],E,20,[[[R[50]],["self"]],[["error"],[R[37],["error"]]]]],[11,"fmt",E,E,161,[[[R[50]],["self"]],[["error"],[R[37],["error"]]]]],[11,"poll",E,E,122,[[["self"]],[[R[37],["async"]],["async",[R[8]]]]]],[11,"poll",E,E,140,[[["self"]],[["async",[R[8]]],[R[37],["async"]]]]],[11,"poll",E,E,152,[[["self"]],[[R[37],["async"]],["async",[R[8]]]]]],[11,"poll",E,E,163,[[["self"]],[[R[37],["async"]],["async",[R[8]]]]]],[11,"poll",E,E,161,[[["self"]],[[R[37],["async"]],["async",[R[8]]]]]],[11,"poll",E,E,118,[[["self"]],[[R[37],["async"]],["async",[R[8]]]]]],[11,"poll",E,E,126,[[["self"]],[[R[37],["async"]],["async",[R[8]]]]]],[11,"poll",E,E,138,[[["self"]],[[R[37],["async"]],["async",[R[8]]]]]],[11,"poll",E,E,135,[[["self"]],[["async",[R[8]]],[R[37],["async"]]]]],[11,"poll",E,E,139,[[["self"]],[["async",[R[8]]],[R[37],["async"]]]]],[11,"poll",E,E,160,[[["self"]],[[R[37],["async"]],["async",[R[8]]]]]],[11,"poll",E,E,150,[[["self"]],[["async",[R[8]]],[R[37],["async"]]]]],[11,"poll",E,E,146,[[["self"]],[[R[37],["async"]],["async",[R[8]]]]]],[11,"poll",E,E,129,[[["self"]],[[R[37],["async"]],["async",[R[8]]]]]],[11,"poll",E,E,133,[[["self"]],[[R[37],["async"]],["async",[R[8]]]]]],[11,"poll",E,E,130,[[["self"]],[[R[37],["async"]],["async",[R[8]]]]]],[11,"poll",R[664],E,114,[[["self"]],[["async",[R[8]]],[R[37],["async"]]]]],[11,"poll",R[515],E,155,[[["self"]],[[R[37],["async"]],["async",[R[8]]]]]],[11,"poll",E,E,128,[[["self"]],[[R[37],["async"]],["async",[R[8]]]]]],[11,"poll",E,E,142,[[["self"]],[["async",[R[8]]],[R[37],["async"]]]]],[11,"poll",E,E,124,[[["self"]],[[R[37],["async"]],["async",[R[8]]]]]],[11,"poll",E,E,137,[[["self"]],[[R[37],["async"]],["async",[R[8]]]]]],[11,"poll",E,E,154,[[["self"]],[[R[37],["async"]],["async",[R[8]]]]]],[11,"poll",E,E,125,[[["self"]],[[R[37],["async"]],["async",[R[8]]]]]],[11,"poll",R[663],E,108,[[["self"]],[[R[37],["async"]],["async",[R[8]]]]]],[11,"poll",R[515],E,127,[[["self"]],[["async",[R[8]]],[R[37],["async"]]]]],[11,"poll",E,E,116,[[["self"]],[[R[37],["async"]],["async",[R[8]]]]]],[11,"poll",E,E,145,[[["self"]],[[R[37],["async"]],["async",[R[8]]]]]],[11,"poll",E,E,156,[[["self"]],[["async",[R[8]]],[R[37],["async"]]]]],[11,"poll",E,E,123,[[["self"]],[[R[37],["async"]],["async",[R[8]]]]]],[11,"poll",E,E,120,[[["self"]],[["async",[R[8]]],[R[37],["async"]]]]],[11,"poll",E,E,147,[[["self"]],[[R[37],["async"]],["async",[R[8]]]]]],[11,"poll",E,E,151,[[["self"]],[["async",[R[8]]],[R[37],["async"]]]]],[11,"poll",E,E,136,[[["self"]],[["async",[R[8]]],[R[37],["async"]]]]],[11,"poll",E,E,149,[[["self"]],[[R[37],["async"]],["async",[R[8]]]]]],[11,"poll",E,E,157,[[["self"]],[[R[37],["async"]],["async",[R[8]]]]]],[11,"poll",E,E,159,[[["self"]],[["async",[R[8]]],[R[37],["async"]]]]],[11,"poll",R[663],E,101,[[["self"]],[["async",[R[8]]],[R[37],["async"]]]]],[11,"poll",R[515],E,158,[[["self"]],[[R[37],["async"]],["async",[R[8]]]]]],[11,R[295],E,E,135,[[],[R[677]]]],[11,R[295],R[664],E,114,[[],[R[678]]]],[11,R[295],R[665],E,169,[[],[R[691]]]],[11,"fmt",R[515],E,153,[[[R[50]],["self"]],[["error"],[R[37],["error"]]]]],[11,"fmt",E,E,20,[[[R[50]],["self"]],[["error"],[R[37],["error"]]]]],[11,"fmt",R[663],E,98,[[[R[50]],["self"]],[["error"],[R[37],["error"]]]]],[11,"from",E,E,89,[[[R[37]]],[R[510]]]],[11,"from",R[513],E,24,[[[T]],["async"]]],[11,R[679],R[515],E,135,[[[T]],[R[677]]]],[11,R[679],R[664],E,114,[[[T]],[R[678]]]],[11,R[92],R[663],E,98,[[["self"]],["str"]]],[11,"cause",E,E,98,[[["self"]],[[R[8],["error"]],["error"]]]],[11,R[92],R[515],E,153,[[["self"]],["str"]]],[11,R[92],E,E,20,[[["self"]],["str"]]],[11,"next",R[664],E,115,[[["self"]],[["f"],[R[8]]]]],[11,R[792],E,E,115,[[["self"]]]],[11,"next",R[515],E,162,[[["self"]],[R[8]]]],[11,"eq",R[513],E,25,[[[R[368]],["self"]],["bool"]]],[11,"ne",E,E,25,[[[R[368]],["self"]],["bool"]]],[11,"eq",R[663],E,15,[[["self"],[R[680]]],["bool"]]],[11,"eq",R[513],E,24,[[["async"],["self"]],["bool"]]],[11,"ne",E,E,24,[[["async"],["self"]],["bool"]]],[11,"deref",R[663],E,98,[[["self"]],["e"]]],[11,"deref",E,E,90,[[["self"]],[T]]],[11,"fmt",R[655],E,41,[[[R[50]],["self"]],[["error"],[R[37],["error"]]]]],[11,"fmt",E,E,37,[[[R[50]],["self"]],[["error"],[R[37],["error"]]]]],[11,"hash",E,E,37,[[["self"],["__h"]]]],[11,"hash",E,E,41,[[["self"],["__h"]]]],[11,"decode",E,E,41,[[[R[367]],["self"]],[[R[8],[R[87]]],[R[37],[R[8],"error"]],["error"]]]],[11,R[371],E,E,41,[[[R[367]],["self"]],[[R[8],[R[87]]],[R[37],[R[8],"error"]],["error"]]]],[11,"decode",E,E,37,[[[R[367]],["self"]],[[R[37],[R[8],"error"]],[R[8],[R[367]]],["error"]]]],[11,"cmp",E,E,37,[[["self"],[R[369]]],[R[49]]]],[11,"cmp",E,E,41,[[[R[370]],["self"]],[R[49]]]],[11,"clone",E,E,41,[[["self"]],[R[370]]]],[11,"clone",E,E,37,[[["self"]],[R[369]]]],[11,"encode",E,E,37,[[[R[367]],["self"],["bytes"]],[[R[37],["error"]],["error"]]]],[11,"encode",E,E,41,[[[R[367]],["self"],[R[87]]],[[R[37],["error"]],["error"]]]],[11,R[146],E,E,41,[[[R[370]],["self"]],[[R[49]],[R[8],[R[49]]]]]],[11,"lt",E,E,41,[[[R[370]],["self"]],["bool"]]],[11,"le",E,E,41,[[[R[370]],["self"]],["bool"]]],[11,"gt",E,E,41,[[[R[370]],["self"]],["bool"]]],[11,"ge",E,E,41,[[[R[370]],["self"]],["bool"]]],[11,R[146],E,E,37,[[["self"],[R[369]]],[[R[49]],[R[8],[R[49]]]]]],[11,"lt",E,E,37,[[["self"],[R[369]]],["bool"]]],[11,"le",E,E,37,[[["self"],[R[369]]],["bool"]]],[11,"gt",E,E,37,[[["self"],[R[369]]],["bool"]]],[11,"ge",E,E,37,[[["self"],[R[369]]],["bool"]]],[11,"eq",E,E,37,[[["self"],[R[369]]],["bool"]]],[11,"ne",E,E,37,[[["self"],[R[369]]],["bool"]]],[11,"eq",E,E,41,[[[R[370]],["self"]],["bool"]]],[11,"ne",E,E,41,[[[R[370]],["self"]],["bool"]]],[11,"fmt",R[659],E,63,[[[R[50]],["self"]],[["error"],[R[37],["error"]]]]],[11,"fmt",R[655],E,39,[[[R[50]],["self"]],[["error"],[R[37],["error"]]]]],[11,"fmt",R[659],E,56,[[[R[50]],["self"]],[["error"],[R[37],["error"]]]]],[11,"fmt",R[655],E,2,[[[R[50]],["self"]],[["error"],[R[37],["error"]]]]],[11,"fmt",E,E,40,[[[R[50]],["self"]],[["error"],[R[37],["error"]]]]],[11,"fmt",E,E,38,[[[R[50]],["self"]],[["error"],[R[37],["error"]]]]],[11,"fmt",R[659],E,59,[[[R[50]],["self"]],[["error"],[R[37],["error"]]]]],[11,"fmt",E,E,61,[[[R[50]],["self"]],[["error"],[R[37],["error"]]]]],[11,"fmt",E,E,62,[[[R[50]],["self"]],[["error"],[R[37],["error"]]]]],[11,"fmt",E,E,64,[[[R[50]],["self"]],[["error"],[R[37],["error"]]]]],[11,"fmt",E,E,65,[[[R[50]],["self"]],[["error"],[R[37],["error"]]]]],[11,"fmt",E,E,57,[[[R[50]],["self"]],[["error"],[R[37],["error"]]]]],[11,"fmt",E,E,58,[[[R[50]],["self"]],[["error"],[R[37],["error"]]]]],[11,"fmt",E,E,60,[[[R[50]],["self"]],[["error"],[R[37],["error"]]]]],[11,"read",E,E,60,[[["self"]],[[R[37],["usize","error"]],["usize"],["error"]]]],[11,"poll",R[655],E,39,[[["self"]],[[R[37],["async"]],["async",[R[8]]]]]],[11,"poll",R[659],E,58,[[["self"]],[[R[37],["async","error"]],["async",[R[8]]],["error"]]]],[11,"poll",R[655],E,38,[[["self"]],[["async",[R[8]]],[R[37],["async"]]]]],[11,"poll",E,E,40,[[["self"]],[["async",[R[8]]],[R[37],["async"]]]]],[11,R[336],R[659],E,60,[[["b"],["self"]],[["async",["usize"]],[R[37],["async","error"]],["error"]]]],[11,"write",E,E,65,[[["self"]],[[R[37],["usize","error"]],["usize"],["error"]]]],[11,"flush",E,E,65,[[["self"]],[[R[37],["error"]],["error"]]]],[11,R[325],E,E,65,[[["self"]],[[R[37],["async","error"]],["async"],["error"]]]],[11,R[327],E,E,65,[[["b"],["self"]],[["async",["usize"]],[R[37],["async","error"]],["error"]]]],[11,"poll",E,E,64,[[["self"]],[["async"],[R[37],["async","error"]],["error"]]]],[11,"poll",E,E,57,[[["self"]],[["async"],[R[37],["async","error"]],["error"]]]],[11,"poll",E,E,63,[[["self"]],[["async"],[R[37],["async","error"]],["error"]]]],[11,"poll",E,E,62,[[["self"]],[["async"],[R[37],["async","error"]],["error"]]]],[11,"poll",E,E,61,[[["self"]],[["async"],[R[37],["async","error"]],["error"]]]],[11,"poll",E,E,56,[[["self"]],[[R[37],["async","error"]],["async"],["error"]]]],[11,"poll",E,E,59,[[["self"]],[["async"],[R[37],["async","error"]],["error"]]]],[11,R[93],R[655],E,40,[[["self"]],[[R[37],[R[368]]],[R[368]]]]],[11,R[95],E,E,40,[[["self"]],[["async"],[R[37],["async"]]]]],[11,"close",E,E,40,[[["self"]],[["async"],[R[37],["async"]]]]],[11,R[93],E,E,38,[[["self"]],[[R[37],[R[368]]],[R[368]]]]],[11,R[95],E,E,38,[[["self"]],[["async"],[R[37],["async"]]]]],[11,"close",E,E,38,[[["self"]],[["async"],[R[37],["async"]]]]],[11,R[93],E,E,39,[[["self"]],[[R[37],[R[368]]],[R[368]]]]],[11,R[95],E,E,39,[[["self"]],[[R[37],["async"]],["async"]]]],[11,"close",E,E,39,[[["self"]],[[R[37],["async"]],["async"]]]],[11,"fmt",R[659],E,55,[[[R[50]],["self"]],[["error"],[R[37],["error"]]]]],[11,"fmt",R[496],E,51,[[[R[50]],["self"]],[["error"],[R[37],["error"]]]]],[11,"fmt",R[657],E,49,[[[R[50]],["self"]],[["error"],[R[37],["error"]]]]],[11,"fmt",R[496],E,44,[[[R[50]],["self"]],[["error"],[R[37],["error"]]]]],[11,"fmt",R[657],E,45,[[[R[50]],["self"]],[["error"],[R[37],["error"]]]]],[11,"fmt",R[659],E,53,[[[R[50]],["self"]],[["error"],[R[37],["error"]]]]],[11,"fmt",E,E,54,[[[R[50]],["self"]],[["error"],[R[37],["error"]]]]],[11,"fmt",R[657],E,46,[[[R[50]],["self"]],[["error"],[R[37],["error"]]]]],[11,"fmt",R[658],E,50,[[[R[50]],["self"]],[["error"],[R[37],["error"]]]]],[11,"fmt",R[496],E,52,[[[R[50]],["self"]],[["error"],[R[37],["error"]]]]],[11,"fmt",R[657],E,47,[[[R[50]],["self"]],[["error"],[R[37],["error"]]]]],[11,"fmt",E,E,48,[[[R[50]],["self"]],[["error"],[R[37],["error"]]]]],[11,"fmt",E,E,43,[[[R[50]],["self"]],[["error"],[R[37],["error"]]]]],[11,"read",R[659],E,54,[[["self"]],[[R[37],["usize","error"]],["usize"],["error"]]]],[11,"read",R[496],E,44,[[["self"]],[[R[37],["usize","error"]],["usize"],["error"]]]],[11,R[325],R[659],E,53,[[["self"]],[[R[37],["async","error"]],["async"],["error"]]]],[11,R[325],E,E,55,[[["self"]],[[R[37],["async","error"]],["async"],["error"]]]],[11,R[325],R[496],E,44,[[["self"]],[[R[37],["async","error"]],["async"],["error"]]]],[11,"clone",R[657],E,43,[[["self"]],[R[387]]]],[11,"drop",R[496],E,44,[[["self"]]]],[11,R[332],E,E,44,[[["self"]],["bool"]]],[11,R[332],R[659],E,54,[[["self"]],["bool"]]],[11,"from",R[657],E,43,[[[R[387]]],[R[387]]]],[11,"write",R[496],E,44,[[["self"]],[[R[37],["usize","error"]],["usize"],["error"]]]],[11,"flush",E,E,44,[[["self"]],[[R[37],["error"]],["error"]]]],[11,"write",R[659],E,55,[[["self"]],[[R[37],["usize","error"]],["usize"],["error"]]]],[11,"flush",E,E,55,[[["self"]],[[R[37],["error"]],["error"]]]],[11,"write",E,E,53,[[["self"]],[[R[37],["usize","error"]],["usize"],["error"]]]],[11,"flush",E,E,53,[[["self"]],[[R[37],["error"]],["error"]]]],[11,"poll",R[657],E,47,[[["self"]],[[R[37],["async"]],["async"]]]],[11,"poll",E,E,48,[[["self"]],[[R[37],["async"]],["async"]]]],[11,"poll",E,E,46,[[["self"]],[["async"],[R[37],["async"]]]]],[11,"poll",E,E,45,[[["self"]],[[R[37],["async"]],["async"]]]],[11,"poll",R[496],E,51,[[["self"]],[[R[37],["async"]],["async"]]]],[11,"poll",E,E,52,[[["self"]],[[R[37],["async"]],["async"]]]],[11,"poll",R[658],E,50,[[["self"]],[["async"],[R[37],["async"]]]]],[11,"poll",R[657],E,49,[[["self"]],[[R[37],["async"]],["async"]]]],[11,"from",R[659],E,66,[[["error"]],["error"]]],[11,"fmt",R[660],E,75,[[[R[50]],["self"]],[["error"],[R[37],["error"]]]]],[11,"fmt",E,E,67,[[[R[50]],["self"]],[["error"],[R[37],["error"]]]]],[11,"fmt",E,E,76,[[[R[50]],["self"]],[["error"],[R[37],["error"]]]]],[11,"fmt",E,E,68,[[[R[50]],["self"]],[["error"],[R[37],["error"]]]]],[11,"read",E,E,68,[[["self"]],[[R[37],["usize","error"]],["usize"],["error"]]]],[11,"poll",E,E,76,[[["self"]],[["async",[R[8]]],[R[37],["async","error"]],["error"]]]],[11,R[325],E,E,68,[[["self"]],[[R[37],["async","error"]],["async"],["error"]]]],[11,R[327],E,E,68,[[["b"],["self"]],[["async",["usize"]],[R[37],["async","error"]],["error"]]]],[11,R[449],E,E,67,[[["self"]],["i32"]]],[11,R[449],E,E,68,[[["self"]],["i32"]]],[11,R[332],E,E,68,[[["self"]],["bool"]]],[11,R[336],E,E,68,[[["b"],["self"]],[["async",["usize"]],[R[37],["async","error"]],["error"]]]],[11,"write",E,E,68,[[["self"]],[[R[37],["usize","error"]],["usize"],["error"]]]],[11,"flush",E,E,68,[[["self"]],[[R[37],["error"]],["error"]]]],[11,"poll",E,E,75,[[["self"]],[[R[37],["async","error"]],["async",[R[481]]],["error"]]]],[11,"unpark",R[666],E,174,[[["self"]]]],[11,"park",E,E,174,[[["self"]],[[R[37],["error"]],["error"]]]],[11,R[115],E,E,174,[[[R[249]],["self"]],[[R[37],["error"]],["error"]]]],[11,"fmt",E,E,175,[[[R[50]],["self"]],[["error"],[R[37],["error"]]]]],[11,"fmt",E,E,172,[[[R[50]],["self"]],[["error"],[R[37],["error"]]]]],[11,"fmt",E,E,174,[[[R[50]],["self"]],[["error"],[R[37],["error"]]]]],[11,"fmt",E,E,173,[[[R[50]],["self"]],[["error"],[R[37],["error"]]]]],[11,"fmt",E,E,176,[[[R[50]],["self"]],[["error"],[R[37],["error"]]]]],[11,"fmt",E,E,171,[[[R[50]],["self"]],[["error"],[R[37],["error"]]]]],[11,"read",E,E,173,[[["self"]],[[R[37],["usize","error"]],["usize"],["error"]]]],[11,"clone",E,E,172,[[["self"]],["handle"]]],[11,"drop",E,E,173,[[["self"]]]],[11,"drop",E,E,171,[[["self"]]]],[11,R[449],E,E,174,[[["self"]],["i32"]]],[11,R[325],E,E,173,[[["self"]],[[R[37],["async","error"]],["async"],["error"]]]],[11,"write",E,E,173,[[["self"]],[[R[37],["usize","error"]],["usize"],["error"]]]],[11,"flush",E,E,173,[[["self"]],[[R[37],["error"]],["error"]]]],[11,"unpark",E,E,172,[[["self"]]]],[11,R[295],E,R[992],172,[[],["handle"]]],[11,"fmt",R[668],E,184,[[[R[50]],["self"]],[["error"],[R[37],["error"]]]]],[11,"fmt",R[670],E,196,[[[R[50]],["self"]],[["error"],[R[37],["error"]]]]],[11,"fmt",R[669],E,191,[[[R[50]],["self"]],[["error"],[R[37],["error"]]]]],[11,"fmt",R[667],E,178,[[[R[50]],["self"]],[["error"],[R[37],["error"]]]]],[11,"fmt",R[668],E,180,[[[R[50]],["self"]],[["error"],[R[37],["error"]]]]],[11,"fmt",E,E,179,[[[R[50]],["self"]],[["error"],[R[37],["error"]]]]],[11,"fmt",R[670],E,197,[[[R[50]],["self"]],[["error"],[R[37],["error"]]]]],[11,"fmt",R[668],E,181,[[[R[50]],["self"]],[["error"],[R[37],["error"]]]]],[11,"fmt",E,E,182,[[[R[50]],["self"]],[["error"],[R[37],["error"]]]]],[11,"fmt",E,E,183,[[[R[50]],["self"]],[["error"],[R[37],["error"]]]]],[11,"fmt",R[669],E,192,[[[R[50]],["self"]],[["error"],[R[37],["error"]]]]],[11,"fmt",R[632],E,190,[[[R[50]],["self"]],[["error"],[R[37],["error"]]]]],[11,"fmt",R[668],E,183,[[[R[50]],["self"]],[["error"],[R[37],["error"]]]]],[11,"fmt",R[669],E,192,[[[R[50]],["self"]],[["error"],[R[37],["error"]]]]],[11,"fmt",R[633],E,194,[[[R[50]],["self"]],[["error"],[R[37],["error"]]]]],[11,"fmt",R[632],E,189,[[[R[50]],["self"]],[["error"],[R[37],["error"]]]]],[11,"fmt",R[668],E,182,[[[R[50]],["self"]],[["error"],[R[37],["error"]]]]],[11,"fmt",E,E,184,[[[R[50]],["self"]],[["error"],[R[37],["error"]]]]],[11,"fmt",R[669],E,191,[[[R[50]],["self"]],[["error"],[R[37],["error"]]]]],[11,"fmt",R[667],E,177,[[[R[50]],["self"]],[["error"],[R[37],["error"]]]]],[11,"fmt",R[631],E,187,[[[R[50]],["self"]],[["error"],[R[37],["error"]]]]],[11,"fmt",E,E,185,[[[R[50]],["self"]],[["error"],[R[37],["error"]]]]],[11,"fmt",E,E,186,[[[R[50]],["self"]],[["error"],[R[37],["error"]]]]],[11,"fmt",E,E,188,[[[R[50]],["self"]],[["error"],[R[37],["error"]]]]],[11,"fmt",R[633],E,193,[[[R[50]],["self"]],[["error"],[R[37],["error"]]]]],[11,"fmt",E,E,195,[[[R[50]],["self"]],[["error"],[R[37],["error"]]]]],[11,"fmt",R[668],E,181,[[[R[50]],["self"]],[["error"],[R[37],["error"]]]]],[11,"fmt",R[670],E,196,[[[R[50]],["self"]],[["error"],[R[37],["error"]]]]],[11,"fmt",E,E,197,[[[R[50]],["self"]],[["error"],[R[37],["error"]]]]],[11,"fmt",R[667],E,178,[[[R[50]],["self"]],[["error"],[R[37],["error"]]]]],[11,"fmt",R[668],E,180,[[[R[50]],["self"]],[["error"],[R[37],["error"]]]]],[11,"fmt",E,E,179,[[[R[50]],["self"]],[["error"],[R[37],["error"]]]]],[11,"poll",R[633],E,193,[[["self"]],[["async",[R[8]]],[R[37],["async",R[82]]],[R[82]]]]],[11,"poll",R[631],E,185,[[["self"]],[["async",[R[8]]],[R[37],["async"]]]]],[11,"poll",E,E,187,[[["self"]],[["async",[R[8]]],[R[37],["async"]]]]],[11,"clone",R[633],E,193,[[["self"]],["receiver"]]],[11,"clone",R[631],E,186,[[["self"]],["sender"]]],[11,"clone",E,E,188,[[["self"]],["unboundedsender"]]],[11,"clone",R[667],E,177,[[["self"]],["lock"]]],[11,"drop",E,E,178,[[["self"]]]],[11,"drop",R[632],E,189,[[["self"]]]],[11,"drop",E,E,190,[[["self"]]]],[11,"drop",R[633],E,193,[[["self"]]]],[11,"drop",E,E,194,[[["self"]]]],[11,"from",R[668],E,181,[[],[R[66]]]],[11,"from",E,E,179,[[],[R[69]]]],[11,"from",R[667],E,177,[[[T]],["lock"]]],[11,R[92],R[668],E,183,[[["self"]],["str"]]],[11,R[92],E,E,180,[[["self"]],["str"]]],[11,R[92],E,E,181,[[["self"]],["str"]]],[11,R[92],R[670],E,197,[[["self"]],["str"]]],[11,R[92],R[668],E,184,[[["self"]],["str"]]],[11,R[92],R[669],E,191,[[["self"]],["str"]]],[11,R[92],R[668],E,179,[[["self"]],["str"]]],[11,R[92],E,E,182,[[["self"]],["str"]]],[11,R[92],R[670],E,196,[[["self"]],["str"]]],[11,R[92],R[669],E,192,[[["self"]],["str"]]],[11,"deref",R[667],E,178,[[["self"]]]],[11,"deref",R[633],E,195,[[["self"]],[T]]],[11,"deref_mut",R[667],E,178,[[["self"]]]],[11,R[295],E,E,177,[[],["lock"]]],[11,"poll",R[632],E,190,[[["self"]],[["async"],[R[82]],[R[37],["async",R[82]]]]]],[11,R[93],R[633],E,194,[[["self"],[T]],[[R[37],[R[368],R[65]]],[R[368]],[R[65]]]]],[11,R[95],E,E,194,[[["self"]],[[R[37],["async",R[65]]],["async"],[R[65]]]]],[11,R[93],R[631],E,188,[[["self"],[T]],[[R[37],[R[368]]],[R[368]]]]],[11,R[95],E,E,188,[[["self"]],[[R[37],["async"]],["async"]]]],[11,"close",E,E,188,[[["self"]],[[R[37],["async"]],["async"]]]],[11,R[93],E,E,186,[[["self"],[T]],[[R[37],[R[368]]],[R[368]]]]],[11,R[95],E,E,186,[[["self"]],[["async"],[R[37],["async"]]]]],[11,"close",E,E,186,[[["self"]],[["async"],[R[37],["async"]]]]],[11,"fmt",R[661],E,69,[[[R[50]],["self"]],[["error"],[R[37],["error"]]]]],[11,"fmt",E,E,77,[[[R[50]],["self"]],[["error"],[R[37],["error"]]]]],[11,"fmt",E,E,78,[[[R[50]],["self"]],[["error"],[R[37],["error"]]]]],[11,"fmt",E,E,70,[[[R[50]],["self"]],[["error"],[R[37],["error"]]]]],[11,"poll",E,E,69,[[["self"]],[[R[37],["async"]],["async",[R[8]]]]]],[11,R[449],E,E,70,[[["self"]],["i32"]]],[11,"poll",E,E,78,[[["self"]],[["async"],[R[37],["async","error"]],["error"]]]],[11,"poll",E,E,77,[[["self"]],[["async"],[R[37],["async","error"]],["error"]]]],[11,R[93],E,E,69,[[["self"]],[[R[368]],[R[37],[R[368]]]]]],[11,R[95],E,E,69,[[["self"]],[["async"],[R[37],["async"]]]]],[11,"close",E,E,69,[[["self"]],[["async"],[R[37],["async"]]]]],[11,"fmt",R[662],E,82,[[[R[50]],["self"]],[["error"],[R[37],["error"]]]]],[11,"fmt",E,E,10,[[[R[50]],["self"]],[["error"],[R[37],["error"]]]]],[11,"fmt",E,E,73,[[[R[50]],["self"]],[["error"],[R[37],["error"]]]]],[11,"fmt",E,E,72,[[[R[50]],["self"]],[["error"],[R[37],["error"]]]]],[11,"fmt",E,E,71,[[[R[50]],["self"]],[["error"],[R[37],["error"]]]]],[11,"fmt",E,E,79,[[[R[50]],["self"]],[["error"],[R[37],["error"]]]]],[11,"fmt",E,E,74,[[[R[50]],["self"]],[["error"],[R[37],["error"]]]]],[11,"fmt",E,E,80,[[[R[50]],["self"]],[["error"],[R[37],["error"]]]]],[11,"fmt",E,E,81,[[[R[50]],["self"]],[["error"],[R[37],["error"]]]]],[11,"hash",E,E,10,[[["self"],["__h"]]]],[11,"read",E,E,74,[[["self"]],[[R[37],["usize","error"]],["usize"],["error"]]]],[11,R[325],E,E,74,[[["self"]],[[R[37],["async","error"]],["async"],["error"]]]],[11,R[327],E,E,74,[[["b"],["self"]],[["async",["usize"]],[R[37],["async","error"]],["error"]]]],[11,R[332],E,E,74,[[["self"]],["bool"]]],[11,R[336],E,E,74,[[["b"],["self"]],[["async",["usize"]],[R[37],["async","error"]],["error"]]]],[11,"clone",E,E,10,[[["self"]],["ucred"]]],[11,"poll",E,E,80,[[["self"]],[["async",[R[8]]],[R[37],["async","error"]],["error"]]]],[11,"poll",E,E,72,[[["self"]],[["async",[R[8]]],[R[37],["async"]]]]],[11,R[449],E,E,71,[[["self"]],["i32"]]],[11,R[449],E,E,74,[[["self"]],["i32"]]],[11,R[449],E,E,73,[[["self"]],["i32"]]],[11,"write",E,E,74,[[["self"]],[[R[37],["usize","error"]],["usize"],["error"]]]],[11,"flush",E,E,74,[[["self"]],[[R[37],["error"]],["error"]]]],[11,"poll",E,E,79,[[["self"]],[[R[37],["async","error"]],["async",[R[461]]],["error"]]]],[11,"poll",E,E,82,[[["self"]],[["async"],[R[37],["async"]]]]],[11,"poll",E,E,81,[[["self"]],[["async"],[R[37],["async"]]]]],[11,R[93],E,E,72,[[["self"]],[[R[37],[R[368]]],[R[368]]]]],[11,R[95],E,E,72,[[["self"]],[[R[37],["async"]],["async"]]]],[11,"close",E,E,72,[[["self"]],[[R[37],["async"]],["async"]]]],[11,"eq",E,E,10,[[["self"],["ucred"]],["bool"]]],[11,"ne",E,E,10,[[["self"],["ucred"]],["bool"]]],[11,"spawn",R[674],E,209,[[["self"],["f"]],[[R[112]],[R[37],[R[112]]]]]],[11,"fmt",E,E,209,[[[R[50]],["self"]],[["error"],[R[37],["error"]]]]],[11,R[681],E,E,209,[[["self"],["f"]],[[R[117]],[R[37],[R[117]]]]]],[11,"clone",E,E,209,[[["self"]],[R[259]]]],[11,"spawn",E,E,209,[[["self"],["future"],["box",["future"]]],[[R[112]],[R[37],[R[112]]]]]],[11,"clone",R[656],E,4,[[["self"]],[R[819]]]],[11,"clone",R[674],E,32,[[["self"]],["handle"]]],[11,"clone",R[648],E,35,[[["self"]],[R[259]]]],[11,"drop",E,E,36,[[["self"]]]],[11,"fmt",R[656],E,4,[[[R[50]],["self"]],[R[37]]]],[11,"fmt",E,E,3,[[[R[50]],["self"]],[R[37]]]],[11,"fmt",E,E,42,[[[R[50]],["self"]],[R[37]]]],[11,"fmt",R[673],E,208,[[[R[50]],["self"]],[R[37]]]],[11,"fmt",R[674],E,31,[[[R[50]],["self"]],[R[37]]]],[11,"fmt",E,E,33,[[[R[50]],["self"]],[R[37]]]],[11,"fmt",E,E,32,[[[R[50]],["self"]],[R[37]]]],[11,"fmt",R[648],E,34,[[[R[50]],["self"]],[R[37]]]],[11,"fmt",E,E,210,[[[R[50]],["self"]],[R[37]]]],[11,"fmt",E,E,35,[[[R[50]],["self"]],[R[37]]]],[11,"fmt",E,E,36,[[[R[50]],["self"]],[R[37]]]],[11,"fmt",R[656],E,42,[[[R[50]],["self"]],[R[37]]]],[11,R[92],E,E,42,[[["self"]],["str"]]],[11,"poll",R[648],E,210,[[["self"]],["poll"]]],[11,R[286],R[673],E,208,[[]]],[11,R[681],R[674],E,32,[[["self"],[T]],[[R[37],[R[117]]],[R[117]]]]],[11,R[681],R[648],E,35,[[["self"],[T]],[[R[37],[R[117]]],[R[117]]]]],[11,"spawn",E,E,35,[[["self"],["box",["future"]],["future"]],[[R[37],[R[112]]],[R[112]]]]],[11,"spawn",R[674],E,32,[[["self"],[T]],[[R[37],[R[112]]],[R[112]]]]],[11,"spawn",R[648],E,35,[[["self"],[T]],[[R[37],[R[112]]],[R[112]]]]],[11,"decode",R[656],E,3,[[["self"],[R[367]]],[[R[37],[R[8]]],[R[8],[R[367]]]]]],[11,"encode",E,E,3,[[["bytes"],["self"],[R[367]]],[[R[37],["error"]],["error"]]]],[11,"new",R[655],R[848],37,[[],[R[369]]]],[11,"new",E,R[338],38,[[[U],[T]],["framed"]]],[11,R[854],E,R[338],38,[[[R[372]]],["framed"]]],[11,R[352],E,R[373],38,[[["self"]],[T]]],[11,R[353],E,R[374],38,[[["self"]],[T]]],[11,"codec",E,R[855],38,[[["self"]],[U]]],[11,R[856],E,R[857],38,[[["self"]],[U]]],[11,R[96],E,R[858],38,[[],[T]]],[11,R[448],E,R[859],38,[[],[R[372]]]],[11,"new",E,R[860],2,[[[U],[T]],[R[372]]]],[11,"new",E,R[861],39,[[["d"],[T]],[R[682]]]],[11,R[352],E,R[373],39,[[["self"]],[T]]],[11,R[353],E,R[374],39,[[["self"]],[T]]],[11,R[96],E,R[862],39,[[],[T]]],[11,R[863],E,R[375],39,[[["self"]],["d"]]],[11,R[864],E,R[376],39,[[["self"]],["d"]]],[11,"new",E,R[865],40,[[["e"],[T]],[R[683]]]],[11,R[352],E,R[373],40,[[["self"]],[T]]],[11,R[353],E,R[374],40,[[["self"]],[T]]],[11,R[96],E,R[866],40,[[],[T]]],[11,R[867],E,R[375],40,[[["self"]],["e"]]],[11,R[868],E,R[376],40,[[["self"]],["e"]]],[11,"new",E,R[849],41,[[],[R[370]]]],[11,R[850],E,R[851],41,[[["usize"]],[R[370]]]],[11,R[852],E,R[853],41,[[["self"]],["usize"]]],[11,"new",R[657],R[914],43,[[],[R[387]]]],[11,"read",E,R[915],43,[[["self"],["bool"]],[R[387]]]],[11,"write",E,R[916],43,[[["self"],["bool"]],[R[387]]]],[11,"append",E,R[917],43,[[["self"],["bool"]],[R[387]]]],[11,"truncate",E,R[918],43,[[["self"],["bool"]],[R[387]]]],[11,"create",E,R[919],43,[[["self"],["bool"]],[R[387]]]],[11,R[920],E,R[921],43,[[["self"],["bool"]],[R[387]]]],[11,"open",E,R[922],43,[[["self"],["p"]],[R[389]]]],[11,"open",R[496],R[923],44,[[["p"]],[R[389]]]],[11,"create",E,R[924],44,[[["p"]],[R[925]]]],[11,R[460],E,R[926],44,[[["file"]],["file"]]],[11,R[927],E,R[390],44,[[["self"],[R[928]]],[[R[37],["async","error"]],["async",["u64"]],["error"]]]],[11,"seek",E,R[390],44,[[[R[928]]],[R[929]]]],[11,R[930],E,R[931],44,[[["self"]],[[R[37],["async","error"]],["async"],["error"]]]],[11,R[932],E,R[933],44,[[["self"]],[[R[37],["async","error"]],["async"],["error"]]]],[11,R[934],E,R[935],44,[[["self"],["u64"]],[[R[37],["async","error"]],["async"],["error"]]]],[11,R[2],E,R[392],44,[[],[R[391]]]],[11,R[395],E,R[392],44,[[["self"]],[[R[37],["async","error"]],["async",[R[2]]],["error"]]]],[11,R[936],E,R[393],44,[[["self"]],[[R[37],["async","error"]],["async",["file"]],["error"]]]],[11,R[937],E,R[393],44,[[],[R[938]]]],[11,R[939],E,R[940],44,[[["self"],[R[394]]],[[R[37],["async","error"]],["async"],["error"]]]],[11,R[947],E,R[941],44,[[],["file"]]],[11,R[96],R[659],R[815],58,[[],["a"]]],[11,"unsplit",E,R[816],60,[[[R[817]]],[T]]],[11,"unsplit",E,R[818],65,[[["readhalf"]],[T]]],[11,"new",E,"Creates a new I/O error from a known kind of error as well…",66,[[[R[675]],["e"]],["error"]]],[11,"last_os_error",E,"Returns an error representing the last OS error which…",66,[[],["error"]]],[11,"from_raw_os_error",E,"Creates a new instance of an `Error` from a particular OS…",66,[[["i32"]],["error"]]],[11,"raw_os_error",E,"Returns the OS error that this error represents (if any).",66,[[["self"]],[["i32"],[R[8],["i32"]]]]],[11,R[352],E,"Returns a reference to the inner error wrapped by this…",66,[[["self"]],[[R[8],["error"]],["error"]]]],[11,R[353],E,"Returns a mutable reference to the inner error wrapped by…",66,[[["self"]],[["error"],[R[8],["error"]]]]],[11,R[96],E,"Consumes the `Error`, returning its inner error (if any).",66,[[],[["box",["error"]],[R[8],["box"]]]]],[11,"kind",E,"Returns the corresponding `ErrorKind` for this error.",66,[[["self"]],[R[675]]]],[11,"bind",R[660],R[1062],67,[[[R[440]]],[[R[37],[R[480],"error"]],[R[480]],["error"]]]],[11,R[488],E,R[459],67,[[["self"]],[[R[37],["async","error"]],["async"],["error"]]]],[11,R[489],E,R[459],67,[[["self"]],[["async"],[R[37],["async","error"]],["error"]]]],[11,R[460],E,R[1063],67,[[["handle"],[R[480]]],[[R[37],[R[480],"error"]],[R[480]],["error"]]]],[11,R[455],E,R[1064],67,[[["self"]],[[R[440]],[R[37],[R[440],"error"]],["error"]]]],[11,R[490],E,R[491],67,[[],[R[490]]]],[11,"ttl",E,R[483],67,[[["self"]],[["u32"],[R[37],["u32","error"]],["error"]]]],[11,"set_ttl",E,R[484],67,[[["u32"],["self"]],[[R[37],["error"]],["error"]]]],[11,R[492],E,R[1065],68,[[[R[440]]],[R[482]]]],[11,R[460],E,R[1066],68,[[["handle"],[R[481]]],[[R[481]],[R[37],[R[481],"error"]],["error"]]]],[11,R[1067],E,R[1068],68,[[["handle"],[R[481]],[R[440]]],[R[482]]]],[11,R[421],E,R[1069],68,[[["ready"],["self"]],[[R[37],["async","error"]],["error"],["async",["ready"]]]]],[11,R[422],E,R[1070],68,[[["self"]],[[R[37],["async","error"]],["error"],["async",["ready"]]]]],[11,R[455],E,R[1071],68,[[["self"]],[[R[440]],[R[37],[R[440],"error"]],["error"]]]],[11,R[464],E,R[1072],68,[[["self"]],[[R[440]],[R[37],[R[440],"error"]],["error"]]]],[11,"poll_peek",E,R[1073],68,[[["self"]],[["async",["usize"]],[R[37],["async","error"]],["error"]]]],[11,R[325],E,R[493],68,[[[R[325]],["self"]],[[R[37],["error"]],["error"]]]],[11,"nodelay",E,R[1074],68,[[["self"]],[[R[37],["bool","error"]],["bool"],["error"]]]],[11,R[1075],E,R[1076],68,[[["self"],["bool"]],[[R[37],["error"]],["error"]]]],[11,R[1077],E,R[1078],68,[[["self"]],[[R[37],["usize","error"]],["usize"],["error"]]]],[11,R[1079],E,R[1080],68,[[["self"],["usize"]],[[R[37],["error"]],["error"]]]],[11,R[1081],E,R[1082],68,[[["self"]],[[R[37],["usize","error"]],["usize"],["error"]]]],[11,R[1083],E,R[1084],68,[[["self"],["usize"]],[[R[37],["error"]],["error"]]]],[11,"keepalive",E,R[1085],68,[[["self"]],[[R[37],[R[8],"error"]],[R[8],[R[249]]],["error"]]]],[11,R[1086],E,R[1087],68,[[[R[249]],["self"],[R[8],[R[249]]]],[[R[37],["error"]],["error"]]]],[11,"ttl",E,R[483],68,[[["self"]],[["u32"],[R[37],["u32","error"]],["error"]]]],[11,"set_ttl",E,R[484],68,[[["u32"],["self"]],[[R[37],["error"]],["error"]]]],[11,"linger",E,R[1088],68,[[["self"]],[[R[37],[R[8],"error"]],[R[8],[R[249]]],["error"]]]],[11,"set_linger",E,R[1089],68,[[[R[249]],["self"],[R[8],[R[249]]]],[[R[37],["error"]],["error"]]]],[11,"new",R[661],R[995],69,[[["c"],[R[439]]],[R[996]]]],[11,R[352],E,R[373],69,[[["self"]],[R[439]]]],[11,R[353],E,R[374],69,[[["self"]],[R[439]]]],[11,R[96],E,R[997],69,[[],[R[439]]]],[11,"bind",E,R[999],70,[[[R[440]]],[[R[37],[R[439],"error"]],[R[439]],["error"]]]],[11,R[460],E,R[1000],70,[[["handle"],[R[439]]],[[R[37],[R[439],"error"]],[R[439]],["error"]]]],[11,R[455],E,R[470],70,[[["self"]],[[R[440]],[R[37],[R[440],"error"]],["error"]]]],[11,R[492],E,R[1001],70,[[["self"],[R[440]]],[[R[37],["error"]],["error"]]]],[11,R[471],E,R[1002],70,[[["self"]],[["async",["usize"]],[R[37],["async","error"]],["error"]]]],[11,R[472],E,R[1003],70,[[["self"]],[["async",["usize"]],[R[37],["async","error"]],["error"]]]],[11,R[473],E,R[1004],70,[[["self"],[R[440]]],[["async",["usize"]],[R[37],["async","error"]],["error"]]]],[11,R[474],E,R[446],70,[[[R[440]],[T]],[R[475]]]],[11,R[476],E,R[1005],70,[[["self"]],[["async"],[R[37],["async","error"]],["error"]]]],[11,R[477],E,R[1006],70,[[[T]],[R[478]]]],[11,R[421],E,R[1007],70,[[["ready"],["self"]],[[R[37],["async","error"]],["error"],["async",["ready"]]]]],[11,R[422],E,R[1008],70,[[["self"]],[[R[37],["async","error"]],["error"],["async",["ready"]]]]],[11,R[450],E,R[1009],70,[[["self"]],[[R[37],["bool","error"]],["bool"],["error"]]]],[11,R[1010],E,R[1011],70,[[["self"],["bool"]],[[R[37],["error"]],["error"]]]],[11,R[1012],E,R[1013],70,[[["self"]],[[R[37],["bool","error"]],["bool"],["error"]]]],[11,R[1014],E,R[1015],70,[[["self"],["bool"]],[[R[37],["error"]],["error"]]]],[11,R[1016],E,R[1017],70,[[["self"]],[["u32"],[R[37],["u32","error"]],["error"]]]],[11,R[1018],E,R[1019],70,[[["u32"],["self"]],[[R[37],["error"]],["error"]]]],[11,R[1020],E,R[1021],70,[[["self"]],[[R[37],["bool","error"]],["bool"],["error"]]]],[11,R[1022],E,R[1023],70,[[["self"],["bool"]],[[R[37],["error"]],["error"]]]],[11,"ttl",E,R[483],70,[[["self"]],[["u32"],[R[37],["u32","error"]],["error"]]]],[11,"set_ttl",E,R[484],70,[[["u32"],["self"]],[[R[37],["error"]],["error"]]]],[11,R[1024],E,R[1025],70,[[["ipv4addr"],["self"]],[[R[37],["error"]],["error"]]]],[11,R[1026],E,R[1027],70,[[["u32"],["self"],["ipv6addr"]],[[R[37],["error"]],["error"]]]],[11,R[1028],E,R[1029],70,[[["ipv4addr"],["self"]],[[R[37],["error"]],["error"]]]],[11,R[1030],E,R[1031],70,[[["u32"],["self"],["ipv6addr"]],[[R[37],["error"]],["error"]]]],[11,"bind",R[662],R[1039],71,[[["p"]],[[R[452]],[R[37],[R[452],"error"]],["error"]]]],[11,"pair",E,R[462],71,[[],[[R[37],["error"]],["error"]]]],[11,R[460],E,R[1040],71,[[["handle"],[R[452]]],[[R[452]],[R[37],[R[452],"error"]],["error"]]]],[11,"unbound",E,R[1041],71,[[],[[R[452]],[R[37],[R[452],"error"]],["error"]]]],[11,R[492],E,R[1042],71,[[["self"],["p"]],[[R[37],["error"]],["error"]]]],[11,R[421],E,R[456],71,[[["ready"],["self"]],[[R[37],["async","error"]],["error"],["async",["ready"]]]]],[11,R[422],E,R[463],71,[[["self"]],[[R[37],["async","error"]],["error"],["async",["ready"]]]]],[11,R[455],E,R[470],71,[[["self"]],[[R[37],[R[440],"error"]],[R[440]],["error"]]]],[11,R[464],E,R[1043],71,[[["self"]],[[R[37],[R[440],"error"]],[R[440]],["error"]]]],[11,R[476],E,R[453],71,[[["self"]],[[R[37],["async","error"]],["async"],["error"]]]],[11,R[472],E,R[453],71,[[["self"]],[["async",["usize"]],[R[37],["async","error"]],["error"]]]],[11,R[477],E,R[1044],71,[[[T]],[R[478]]]],[11,R[473],E,R[1045],71,[[["self"],["p"]],[["async",["usize"]],[R[37],["async","error"]],["error"]]]],[11,R[471],E,R[1046],71,[[["self"]],[["async",["usize"]],[R[37],["async","error"]],["error"]]]],[11,R[474],E,R[1047],71,[[["p"],[T]],[R[475]]]],[11,R[457],E,R[458],71,[[["self"]],[[R[8],["error"]],[R[37],[R[8],"error"]],["error"]]]],[11,R[325],E,R[1048],71,[[[R[325]],["self"]],[[R[37],["error"]],["error"]]]],[11,"new",E,R[1049],72,[[[R[452]],["c"]],[R[1050]]]],[11,R[352],E,R[373],72,[[["self"]],[R[452]]]],[11,R[353],E,R[374],72,[[["self"]],[R[452]]]],[11,"bind",E,R[1051],73,[[["p"]],[[R[454]],[R[37],[R[454],"error"]],["error"]]]],[11,R[460],E,R[1052],73,[[["handle"],[R[454]]],[[R[454]],[R[37],[R[454],"error"]],["error"]]]],[11,R[455],E,R[1053],73,[[["self"]],[[R[37],[R[440],"error"]],[R[440]],["error"]]]],[11,R[421],E,R[456],73,[[["ready"],["self"]],[[R[37],["async","error"]],["error"],["async",["ready"]]]]],[11,R[457],E,R[458],73,[[["self"]],[[R[8],["error"]],[R[37],[R[8],"error"]],["error"]]]],[11,R[488],E,R[459],73,[[["self"]],[[R[37],["async","error"]],["async"],["error"]]]],[11,R[489],E,R[459],73,[[["self"]],[[R[37],["async","error"]],["async"],["error"]]]],[11,R[490],E,R[491],73,[[],[R[490]]]],[11,R[492],E,R[1054],74,[[["p"]],[R[482]]]],[11,R[460],E,R[1055],74,[[[R[461]],["handle"]],[[R[461]],[R[37],[R[461],"error"]],["error"]]]],[11,"pair",E,R[462],74,[[],[[R[37],["error"]],["error"]]]],[11,R[421],E,R[456],74,[[["ready"],["self"]],[[R[37],["async","error"]],["error"],["async",["ready"]]]]],[11,R[422],E,R[463],74,[[["self"]],[[R[37],["async","error"]],["error"],["async",["ready"]]]]],[11,R[455],E,R[1056],74,[[["self"]],[[R[37],[R[440],"error"]],[R[440]],["error"]]]],[11,R[464],E,R[1057],74,[[["self"]],[[R[37],[R[440],"error"]],[R[440]],["error"]]]],[11,"peer_cred",E,R[1058],74,[[["self"]],[["ucred"],[R[37],["ucred","error"]],["error"]]]],[11,R[457],E,R[458],74,[[["self"]],[[R[8],["error"]],[R[37],[R[8],"error"]],["error"]]]],[11,R[325],E,R[493],74,[[[R[325]],["self"]],[[R[37],["error"]],["error"]]]],[11,R[448],R[661],R[998],77,[[],["parts"]]],[11,"new",R[663],"Create a new `ExecuteError`",83,[[[R[680]],["f"]],[R[117]]]],[11,"kind",E,"Returns the associated reason for the error",83,[[["self"]],[R[680]]]],[11,R[286],E,"Consumes self and returns the original future that was…",83,[[],["f"]]],[11,"is_done",E,"Returns whether the underlying future has finished or not.",86,[[["self"]],["bool"]]],[11,"split",E,"Splits out the homogeneous type from an either of tuples.",17,[[]]],[11,"peek",E,"If any clone of this `Shared` has completed execution,…",93,[[["self"]],[[R[37],[R[684],R[685]]],[R[8],[R[37]]]]]],[11,"new",R[664],"Constructs a new, empty `FuturesUnordered`",114,[[],[R[678]]]],[11,"len",E,"Returns the number of futures contained in the set.",114,[[["self"]],["usize"]]],[11,R[15],E,"Returns `true` if the set contains no futures",114,[[["self"]],["bool"]]],[11,"push",E,"Push a future into the set.",114,[[["self"],[T]]]],[11,"iter_mut",E,"Returns an iterator that allows modifying each future in…",114,[[["self"]],["itermut"]]],[11,R[352],R[515],R[686],116,[[["self"]],["s"]]],[11,R[353],E,R[687],116,[[["self"]],["s"]]],[11,R[96],E,R[688],116,[[],["s"]]],[11,R[352],E,R[686],117,[[["self"]],[["s"],[R[8]]]]],[11,R[353],E,R[687],117,[[["self"]],[[R[8]],["s"]]]],[11,R[96],E,R[688],117,[[],[R[8]]]],[11,R[352],E,R[686],118,[[["self"]],["s"]]],[11,R[353],E,R[687],118,[[["self"]],["s"]]],[11,R[96],E,R[688],118,[[],["s"]]],[11,"reunite",E,R[690],122,[[["splitsink"]],[[R[689]],[R[37],[R[689]]]]]],[11,R[352],E,R[686],124,[[["self"]],["s"]]],[11,R[353],E,R[687],124,[[["self"]],["s"]]],[11,R[96],E,R[688],124,[[],["s"]]],[11,R[352],E,R[686],126,[[["self"]],["s"]]],[11,R[353],E,R[687],126,[[["self"]],["s"]]],[11,R[96],E,R[688],126,[[],["s"]]],[11,R[352],E,R[686],128,[[["self"]],["s"]]],[11,R[353],E,R[687],128,[[["self"]],["s"]]],[11,R[96],E,R[688],128,[[],["s"]]],[11,R[352],E,R[686],130,[[["self"]],["s"]]],[11,R[353],E,R[687],130,[[["self"]],["s"]]],[11,R[96],E,R[688],130,[[],["s"]]],[11,"send",E,"Sends a new value along this channel to the receiver.",131,[[[R[37]]],["futuresender"]]],[11,"reunite",E,R[690],134,[[["splitstream"]],[[R[689]],[R[37],[R[689]]]]]],[11,"new",E,"Constructs a new, empty `FuturesOrdered`",135,[[],[R[677]]]],[11,"len",E,"Returns the number of futures contained in the queue.",135,[[["self"]],["usize"]]],[11,R[15],E,"Returns `true` if the queue contains no futures",135,[[["self"]],["bool"]]],[11,"push",E,"Push a future into the queue.",135,[[["self"],[T]]]],[11,R[352],E,R[686],137,[[["self"]],["s"]]],[11,R[353],E,R[687],137,[[["self"]],["s"]]],[11,R[96],E,R[688],137,[[],["s"]]],[11,"is_done",E,"Returns whether the underlying stream has finished or not.",138,[[["self"]],["bool"]]],[11,R[352],E,R[686],138,[[["self"]],["s"]]],[11,R[353],E,R[687],138,[[["self"]],["s"]]],[11,R[96],E,R[688],138,[[],["s"]]],[11,R[352],E,R[686],139,[[["self"]],["s"]]],[11,R[353],E,R[687],139,[[["self"]],["s"]]],[11,R[96],E,R[688],139,[[],["s"]]],[11,"sink_ref",E,"Get a shared reference to the inner sink. If this…",141,[[["self"]],[[U],[R[8]]]]],[11,"sink_mut",E,"Get a mutable reference to the inner sink. If this…",141,[[["self"]],[[R[8]],[U]]]],[11,"stream_ref",E,"Get a shared reference to the inner stream. If this…",141,[[["self"]],[[T],[R[8]]]]],[11,"stream_mut",E,"Get a mutable reference to the inner stream. If this…",141,[[["self"]],[[R[8]],[T]]]],[11,R[352],E,R[686],142,[[["self"]],["s"]]],[11,R[353],E,R[687],142,[[["self"]],["s"]]],[11,R[96],E,R[688],142,[[],["s"]]],[11,"peek",E,"Peek retrieves a reference to the next item in the stream.",149,[[["self"]],[[R[37],["async"]],["async",[R[8]]]]]],[11,R[352],E,R[686],152,[[["self"]],["s"]]],[11,R[353],E,R[687],152,[[["self"]],["s"]]],[11,R[96],E,R[688],152,[[],["s"]]],[11,R[352],E,R[686],154,[[["self"]],["s"]]],[11,R[353],E,R[687],154,[[["self"]],["s"]]],[11,R[96],E,R[688],154,[[],["s"]]],[11,R[352],E,R[686],155,[[["self"]],["s"]]],[11,R[353],E,R[687],155,[[["self"]],["s"]]],[11,R[96],E,R[688],155,[[],["s"]]],[11,R[352],E,R[686],157,[[["self"]],["s"]]],[11,R[353],E,R[687],157,[[["self"]],["s"]]],[11,R[96],E,R[688],157,[[],["s"]]],[11,R[352],E,R[686],158,[[["self"]],["s"]]],[11,R[353],E,R[687],158,[[["self"]],["s"]]],[11,R[96],E,R[688],158,[[],["s"]]],[11,R[352],E,R[686],160,[[["self"]],["s"]]],[11,R[353],E,R[687],160,[[["self"]],["s"]]],[11,R[96],E,R[688],160,[[],["s"]]],[11,R[352],E,R[686],161,[[["self"]],["s"]]],[11,R[353],E,R[687],161,[[["self"]],["s"]]],[11,R[96],E,R[688],161,[[],["s"]]],[11,R[352],E,R[686],162,[[["self"]],["s"]]],[11,R[353],E,R[687],162,[[["self"]],["s"]]],[11,R[96],E,R[688],162,[[],["s"]]],[11,"notify",R[665],"Indicate that the task should attempt to poll its future…",164,[[["self"]]]],[11,"is_current",E,"Returns `true` when called from within the context of the…",164,[[["self"]],["bool"]]],[11,"will_notify_current",E,"This function is intended as a performance optimization…",164,[[["self"]],["bool"]]],[11,"wait_future",E,"Waits for the internal future to complete, blocking this…",165,[[["self"]],[R[37]]]],[11,"wait_stream",E,"Like `wait_future`, except only waits for the next element…",165,[[["self"]],[[R[37]],[R[8],[R[37]]]]]],[11,"wait_send",E,"Blocks the current thread until it's able to send `value`…",165,[[["self"]],[R[37]]]],[11,"wait_flush",E,"Blocks the current thread until it's able to flush this…",165,[[["self"]],[R[37]]]],[11,"wait_close",E,"Blocks the current thread until it's able to close this…",165,[[["self"]],[R[37]]]],[11,R[352],E,"Get a shared reference to the object the Spawn is wrapping.",165,[[["self"]],[T]]],[11,R[353],E,"Get a mutable reference to the object the Spawn is wrapping.",165,[[["self"]],[T]]],[11,R[96],E,"Consume the Spawn, returning its inner object",165,[[],[T]]],[11,"poll_fn_notify",E,"Calls the provided closure, scheduling notifications to be…",165,[[["self"],["n"],["f"],["usize"]],["r"]]],[11,"poll_future_notify",E,"Polls the internal future, scheduling notifications to be…",165,[[["self"],["n"],["usize"]],[[R[37],["async"]],["async"]]]],[11,"poll_stream_notify",E,"Like `poll_future_notify`, except polls the underlying…",165,[[["self"],["n"],["usize"]],[[R[37],["async"]],["async",[R[8]]]]]],[11,"start_send_notify",E,"Invokes the underlying `start_send` method with this task…",165,[[["self"],["n"],["usize"]],[[R[368]],[R[37],[R[368]]]]]],[11,"poll_flush_notify",E,"Invokes the underlying `poll_complete` method with this…",165,[[["self"],["n"],["usize"]],[[R[37],["async"]],["async"]]]],[11,"close_notify",E,"Invokes the underlying `close` method with this task in…",165,[[["self"],["n"],["usize"]],[[R[37],["async"]],["async"]]]],[11,"run",E,"Actually run the task (invoking `poll` on its future) on…",166,[[]]],[11,"new",E,"Construct an unpark event that will insert `id` into `set`…",167,[[["arc",["eventset"]],["eventset"],["usize"]],[R[676]]]],[11,"new",E,"Inserts a new piece of task-local data into this task,…",168,[[["a"]],["taskrc"]]],[11,"with",E,"Operate with a reference to the underlying data.",168,[[["self"],["f"]],["r"]]],[11,"new",E,R[1124],169,[[],[R[691]]]],[11,R[431],E,R[1125],169,[[["self"]]]],[11,R[1126],E,R[1127],169,[[["self"],["task"]]]],[11,"notify",E,R[1128],169,[[["self"]]]],[11,"with",E,"Access this task-local key, running the provided closure…",170,[[["self"],["f"]],["r"]]],[11,"map",R[513],"Change the success value of this `Async` with the closure…",24,[[["f"]],["async"]]],[11,"is_ready",E,"Returns whether this is `Async::Ready`",24,[[["self"]],["bool"]]],[11,R[692],E,"Returns whether this is `Async::NotReady`",24,[[["self"]],["bool"]]],[11,"map",E,"Change the NotReady value of this `AsyncSink` with the…",25,[[["f"]],[R[368]]]],[11,"is_ready",E,"Returns whether this is `AsyncSink::Ready`",25,[[["self"]],["bool"]]],[11,R[692],E,"Returns whether this is `AsyncSink::NotReady`",25,[[["self"]],["bool"]]],[11,"handle",R[666],R[955],171,[[["self"]],["handle"]]],[11,R[429],E,R[956],171,[[],[R[325]]]],[11,R[430],E,R[957],171,[[],[R[325]]]],[11,"forget",E,R[958],171,[[]]],[11,"new",E,R[959],173,[[["e"]],[R[693]]]],[11,R[960],E,R[961],173,[[["handle"],["e"]],[[R[37],[R[693],"error"]],[R[693]],["error"]]]],[11,R[352],E,R[962],173,[[["self"]],["e"]]],[11,R[353],E,R[963],173,[[["self"]],["e"]]],[11,R[96],E,R[964],173,[[],[[R[37],["error"]],["error"]]]],[11,R[421],E,R[965],173,[[["ready"],["self"]],[[R[37],["async","error"]],["error"],["async",["ready"]]]]],[11,R[966],E,R[967],173,[[["ready"],["self"]],[[R[37],["error"]],["error"]]]],[11,R[422],E,R[968],173,[[["self"]],[[R[37],["async","error"]],["error"],["async",["ready"]]]]],[11,R[969],E,R[970],173,[[["self"]],[[R[37],["error"]],["error"]]]],[11,"new",E,R[984],174,[[],[[R[985]],[R[37],[R[985],"error"]],["error"]]]],[11,"handle",E,R[986],174,[[["self"]],["handle"]]],[11,R[987],E,R[988],174,[[["self"]],[[R[423]],[R[37],[R[423]]]]]],[11,"turn",E,R[989],174,[[[R[249]],["self"],[R[8],[R[249]]]],[[R[37],["turn","error"]],["turn"],["error"]]]],[11,"is_idle",E,R[990],174,[[["self"]],["bool"]]],[11,R[424],E,R[991],174,[[],[[R[424]],[R[37],[R[424],"error"]],["error"]]]],[11,"new",E,R[971],175,[[],[R[972]]]],[11,R[431],E,R[973],175,[[[T],["self"]],[[R[37],["bool","error"]],["bool"],["error"]]]],[11,R[974],E,R[975],175,[[["self"],[T]],[[R[37],["error"]],["error"]]]],[11,R[976],E,R[977],175,[[["handle"],[T],["self"]],[[R[37],["bool","error"]],["bool"],["error"]]]],[11,R[421],E,R[978],175,[[["self"]],[[R[37],["async","error"]],["error"],["async",["ready"]]]]],[11,R[979],E,R[980],175,[[["self"]],[[R[37],[R[8],"error"]],["error"],[R[8],["ready"]]]]],[11,R[422],E,R[981],175,[[["self"]],[[R[37],["async","error"]],["error"],["async",["ready"]]]]],[11,R[982],E,R[983],175,[[["self"]],[[R[37],[R[8],"error"]],["error"],[R[8],["ready"]]]]],[11,"new",R[667],R[1093],177,[[[T]],["lock"]]],[11,"poll_lock",E,R[1094],177,[[["self"]],[[R[64]],["async",[R[64]]]]]],[11,R[96],R[668],R[97],179,[[],[T]]],[11,R[96],E,R[97],181,[[],[T]]],[11,R[78],E,R[1141],181,[[["self"]],["bool"]]],[11,"is_full",E,R[1142],181,[[["self"]],["bool"]]],[11,"close",R[631],R[67],185,[[["self"]]]],[11,"poll_ready",E,R[1103],186,[[["self"]],[[R[37],["async",R[65]]],["async"],[R[65]]]]],[11,R[68],E,R[1104],186,[[["self"],[T]],[[R[66]],[R[37],[R[66]]]]]],[11,"close",E,R[67],187,[[["self"]]]],[11,R[68],E,R[1105],188,[[["self"],[T]],[[R[37],[R[69]]],[R[69]]]]],[11,"send",R[632],R[1120],189,[[[T]],[R[37]]]],[11,R[83],E,R[73],189,[[["self"]],[[R[37],["async"]],["async"]]]],[11,R[78],E,R[73],189,[[["self"]],["bool"]]],[11,"close",E,R[1121],190,[[["self"]]]],[11,"try_recv",E,R[1122],190,[[["self"]],[[R[74]],[R[37],[R[74]]]]]],[11,R[352],R[633],R[1137],193,[[["self"]],["ref"]]],[11,"poll_ref",E,R[1138],193,[[["self"]],[[R[82]],[R[37],["async",R[82]]],["async",[R[8]]]]]],[11,R[450],E,R[1139],194,[[["self"],[T]],[[R[37],[R[65]]],[R[65]]]]],[11,R[83],E,R[1140],194,[[["self"]],[[R[37],["async"]],["async"]]]],[11,"new",R[634],R[751],198,[[],[R[269]]]],[11,R[752],E,R[753],198,[[["handle"],["usize"]],[R[269]]]],[11,R[754],E,R[755],198,[[["usize"]],[R[269]]]],[11,R[756],E,R[757],198,[[["self"],[R[274]],[T]],["key"]]],[11,"insert",E,R[758],198,[[[R[249]],["self"],[T]],["key"]]],[11,"remove",E,R[759],198,[[["key"],["self"]],["expired"]]],[11,"reset_at",E,R[270],198,[[["key"],["self"],[R[274]]]]],[11,"reset",E,R[270],198,[[["key"],[R[249]],["self"]]]],[11,"clear",E,R[760],198,[[["self"]]]],[11,"capacity",E,R[761],198,[[["self"]],["usize"]]],[11,"reserve",E,R[762],198,[[["self"],["usize"]]]],[11,R[15],E,R[763],198,[[["self"]],["bool"]]],[11,R[352],R[671],R[764],199,[[["self"]],[T]]],[11,R[353],E,R[765],199,[[["self"]],[T]]],[11,R[96],E,R[766],199,[[],[T]]],[11,"new",R[634],R[769],201,[[[R[249]],[T]],[R[635]]]],[11,R[352],E,R[770],201,[[["self"]],[T]]],[11,R[353],E,R[771],201,[[["self"]],[T]]],[11,R[96],E,R[772],201,[[],[T]]],[11,"new_at",E,R[773],201,[[[R[274]],[T]],[R[635]]]],[11,"inner",R[672],R[774],202,[[[T]],["error"]]],[11,"is_inner",E,R[275],202,[[["self"]],["bool"]]],[11,R[96],E,R[775],202,[[],[R[8]]]],[11,"elapsed",E,R[776],202,[[],["error"]]],[11,R[280],E,R[275],202,[[["self"]],["bool"]]],[11,"timer",E,R[777],202,[[["error"]],["error"]]],[11,"is_timer",E,R[778],202,[[["self"]],["bool"]]],[11,R[779],E,R[780],202,[[],[["error"],[R[8],["error"]]]]],[11,"new",R[634],R[782],203,[[[R[274]]],["delay"]]],[11,"deadline",E,R[783],203,[[["self"]],[R[274]]]],[11,R[280],E,R[784],203,[[["self"]],["bool"]]],[11,"reset",E,R[785],203,[[["self"],[R[274]]]]],[11,R[325],E,R[786],204,[[],["error"]]],[11,R[292],E,R[281],204,[[["self"]],["bool"]]],[11,R[291],E,R[787],204,[[],["error"]]],[11,R[293],E,R[281],204,[[["self"]],["bool"]]],[11,"new",E,R[282],205,[[[R[249]],[R[274]]],[R[283]]]],[11,R[788],E,R[789],205,[[[R[249]]],[R[283]]]],[11,R[781],R[673],R[730],206,[[],[R[116]]]],[11,R[325],E,R[726],207,[[],[R[112]]]],[11,R[291],E,R[727],207,[[],[R[112]]]],[11,R[292],E,R[728],207,[[["self"]],["bool"]]],[11,R[293],E,R[729],207,[[["self"]],["bool"]]],[11,R[781],R[674],R[738],209,[[],[R[259]]]],[11,R[739],E,R[740],209,[[["self"],["box",["future"]],["future"]],[[R[112]],[R[37],[R[112]]]]]]],"p":[[8,"Decoder"],[8,"Encoder"],[3,R[377]],[3,R[694]],[3,R[701]],[8,R[347]],[8,R[348]],[4,R[695]],[8,"Read"],[8,"Write"],[3,"UCred"],[8,"Future"],[8,R[552]],[8,R[696]],[8,R[646]],[4,R[697]],[4,"Loop"],[4,"Either"],[8,"Stream"],[4,R[698]],[3,R[699]],[8,"EventSet"],[8,R[646]],[8,"Unpark"],[4,"Async"],[4,R[700]],[8,"Sink"],[8,R[641]],[8,R[643]],[8,R[646]],[8,R[121]],[3,R[701]],[3,"Handle"],[3,"Runtime"],[3,R[701]],[3,R[261]],[3,"Runtime"],[3,R[378]],[3,"Framed"],[3,R[380]],[3,R[381]],[3,R[379]],[3,R[702]],[3,R[384]],[3,"File"],[3,R[410]],[3,R[409]],[3,R[383]],[3,R[408]],[3,R[411]],[3,R[412]],[3,R[869]],[3,R[407]],[3,"Stderr"],[3,"Stdin"],[3,"Stdout"],[3,"Copy"],[3,"Flush"],[3,"Lines"],[3,R[349]],[3,R[802]],[3,R[350]],[3,R[351]],[3,R[365]],[3,R[800]],[3,R[346]],[3,"Error"],[3,R[485]],[3,R[486]],[3,R[441]],[3,R[443]],[3,R[465]],[3,R[466]],[3,R[467]],[3,R[468]],[3,R[469]],[3,R[487]],[3,R[442]],[3,R[444]],[3,R[469]],[3,R[487]],[3,R[442]],[3,R[444]],[3,R[703]],[3,R[527]],[3,"LoopFn"],[3,"Fuse"],[3,"MapErr"],[3,R[704]],[3,"Finished"],[3,R[705]],[3,"Join3"],[3,R[706]],[3,"Shared"],[3,"Empty"],[3,"OrElse"],[3,R[793]],[3,"Lazy"],[3,R[707]],[3,"Then"],[3,"PollFn"],[3,R[708]],[3,"Map"],[3,"Flatten"],[3,"Join"],[3,"Select2"],[3,"Select"],[3,"FromErr"],[3,R[316]],[3,"SelectOk"],[3,"AndThen"],[3,"Join5"],[3,"Inspect"],[3,"Join4"],[3,R[709]],[3,"IterMut"],[3,R[710]],[3,R[711]],[3,"Filter"],[3,"ForEach"],[3,"Repeat"],[3,"Concat2"],[3,R[712]],[3,"IterOk"],[3,R[713]],[3,"Then"],[3,R[714]],[3,"Once"],[3,"Map"],[3,"Chain"],[3,"Take"],[3,"Sender"],[3,"Concat"],[3,"Zip"],[3,R[715]],[3,R[716]],[3,R[717]],[3,"Inspect"],[3,"Fuse"],[3,"MapErr"],[3,R[718]],[3,"Forward"],[3,R[719]],[3,R[720]],[3,"Fold"],[3,"Empty"],[3,"Merge"],[3,"OrElse"],[3,R[793]],[3,"Peekable"],[3,R[70]],[3,"PollFn"],[3,"Chunks"],[3,R[80]],[3,"Flatten"],[3,R[721]],[3,"Select"],[3,"FromErr"],[3,"Buffered"],[3,"Unfold"],[3,"AndThen"],[3,"Skip"],[3,"Wait"],[3,R[527]],[3,"Task"],[3,"Spawn"],[3,"Run"],[3,R[722]],[3,"TaskRc"],[3,R[102]],[3,"LocalKey"],[3,R[425]],[3,"Handle"],[3,R[723]],[3,"Reactor"],[3,R[427]],[3,"Turn"],[3,"Lock"],[3,R[103]],[3,R[106]],[3,R[107]],[3,R[104]],[3,R[71]],[3,R[105]],[3,R[80]],[3,R[70]],[3,"Sender"],[3,R[98]],[3,R[99]],[3,"Sender"],[3,R[70]],[3,R[71]],[3,R[108]],[3,R[70]],[3,"Sender"],[3,"Ref"],[3,R[71]],[3,R[80]],[3,R[268]],[3,"Expired"],[3,"Key"],[3,R[790]],[3,"Error"],[3,"Delay"],[3,"Error"],[3,R[744]],[3,R[119]],[3,R[118]],[3,"Spawn"],[3,R[261]],[3,R[365]]]};
searchIndex["tokio_futures"]={"doc":E,"i":[],"p":[]};
searchIndex["tokio_macros"]={"doc":E,"i":[],"p":[]};
searchIndex[R[0]]={"doc":"Core primitives for `tokio-trace`.","i":[[0,R[1],R[0],"Callsites represent the source locations from which spans…",N,N],[3,R[59],R[30],"Uniquely identifies a [`Callsite`]",N,N],[5,"rebuild_interest_cache",E,"Clear and reregister interest on every [`Callsite`]",N,[[]]],[5,R[431],E,"Register a new `Callsite` with the global registry.",N,[[[R[1]]]]],[8,R[51],E,"Trait implemented by callsites.",N,N],[10,"set_interest",E,"Sets the [`Interest`] for this callsite.",0,[[[R[5]],["self"]]]],[10,R[2],E,"Returns the [metadata] associated with the callsite.",0,[[["self"]],[R[2]]]],[0,R[153],R[0],R[154],N,N],[3,R[52],R[31],R[127],N,N],[3,R[60],E,R[137],N,N],[5,R[125],E,R[155],N,[[[R[3]]],[T]]],[5,R[138],E,R[156],N,[[[R[3]]],[[R[37],[R[4]]],[R[4]]]]],[5,R[157],E,R[158],N,[[["f"]],[T]]],[11,"none",E,R[159],1,[[],["self"]]],[11,"new",E,R[160],1,[[["s"]],["self"]]],[11,R[16],E,R[17],1,[[["self"],[R[2]]],[R[5]]]],[11,R[18],E,R[161],1,[[["self"],[R[19]]],["id"]]],[11,R[6],E,R[20],1,[[["id"],["self"],[R[6]]]]],[11,R[21],E,R[22],1,[[["id"],["self"]]]],[11,"enabled",E,R[162],1,[[["self"],[R[2]]],["bool"]]],[11,"event",E,R[23],1,[[["event"],["self"]]]],[11,"enter",E,R[163],1,[[["id"],["self"]]]],[11,"exit",E,R[24],1,[[["id"],["self"]]]],[11,R[25],E,R[26],1,[[["id"],["self"]],["id"]]],[11,R[27],E,R[28],1,[[["id"],["self"]]]],[11,"is",E,R[164],1,[[["self"]],["bool"]]],[11,R[29],E,R[165],1,[[["self"]],[[R[8]],[T]]]],[0,"event",R[0],R[166],N,N],[3,"Event",R[39],R[128],N,N],[11,R[3],E,R[167],2,[[[R[12]],[R[2]]]]],[11,R[6],E,R[168],2,[[["visit"],["self"]]]],[11,"fields",E,R[169],2,[[["self"]],["iter"]]],[11,R[2],E,R[170],2,[[["self"]],[R[2]]]],[0,R[7],R[0],"Span and `Event` key-value data.",N,N],[3,"Field",R[41],R[171],N,N],[3,R[53],E,R[172],N,N],[3,R[54],E,R[173],N,N],[3,"Iter",E,R[174],N,N],[3,R[61],E,R[175],N,N],[3,R[62],E,R[176],N,N],[5,"display",E,R[177],N,[[[T]],[R[47]]]],[5,"debug",E,R[178],N,[[[T]],[R[48]]]],[8,"Visit",E,R[179],N,N],[11,R[180],E,R[181],3,[[["self"],[R[7]],["i64"]]]],[11,R[182],E,R[183],3,[[["self"],[R[7]],["u64"]]]],[11,R[184],E,R[185],3,[[["self"],[R[7]],["bool"]]]],[11,R[186],E,R[187],3,[[["str"],["self"],[R[7]]]]],[10,R[188],E,R[189],3,[[["debug"],["self"],[R[7]]]]],[8,"Value",E,R[129],N,N],[10,R[6],E,R[130],4,[[[R[7]],["visit"],["self"]]]],[11,R[1],E,R[9],5,[[["self"]],[R[10]]]],[11,"name",E,R[190],5,[[["self"]],["str"]]],[11,R[7],E,R[191],6,[[["q"],["self"]],[[R[7]],[R[8],[R[7]]]]]],[11,R[14],E,R[192],6,[[[R[7]],["self"]],["bool"]]],[11,"iter",E,R[193],6,[[["self"]],["iter"]]],[11,"len",E,R[194],6,[[["self"]],["usize"]]],[11,R[1],E,R[9],7,[[["self"]],[R[10]]]],[0,R[2],R[0],"Metadata describing trace data.",N,N],[3,R[55],R[44],R[195],N,N],[3,"Kind",E,"Indicate whether the callsite is a span or event.",N,N],[3,"Level",E,R[196],N,N],[11,"new",E,R[197],8,[[["str"],["u32"],["kind"],["level"],[R[8],["str"]],[R[1]],[R[8],["u32"]],["str"]],["self"]]],[11,"fields",E,R[198],8,[[["self"]],["fieldset"]]],[11,"level",E,R[199],8,[[["self"]],["level"]]],[11,"name",E,R[200],8,[[["self"]],["str"]]],[11,"target",E,R[201],8,[[["self"]],["str"]]],[11,R[202],E,R[203],8,[[["self"]],[["str"],[R[8],["str"]]]]],[11,"file",E,R[204],8,[[["self"]],[["str"],[R[8],["str"]]]]],[11,"line",E,R[205],8,[[["self"]],[["u32"],[R[8],["u32"]]]]],[11,R[1],E,R[206],8,[[["self"]],[R[10]]]],[11,R[11],E,R[207],8,[[["self"]],["bool"]]],[11,"is_span",E,R[208],8,[[["self"]],["bool"]]],[18,"EVENT",E,"`Event` callsite",9,N],[18,"SPAN",E,"`Span` callsite",9,N],[11,"is_span",E,"Return true if the callsite kind is `Span`",9,[[["self"]],["bool"]]],[11,R[11],E,"Return true if the callsite kind is `Event`",9,[[["self"]],["bool"]]],[18,"ERROR",E,R[147],10,N],[18,"WARN",E,R[148],10,N],[18,"INFO",E,R[149],10,N],[18,"DEBUG",E,R[150],10,N],[18,"TRACE",E,R[151],10,N],[0,"span",R[0],R[209],N,N],[3,"Id",R[45],R[210],N,N],[3,R[56],E,R[211],N,N],[3,"Record",E,R[212],N,N],[11,"from_u64",E,R[213],11,[[["u64"]],["self"]]],[11,"into_u64",E,R[214],11,[[["self"]],["u64"]]],[11,"new",E,R[13],12,[[[R[12]],[R[2]]],["self"]]],[11,R[215],E,R[216],12,[[[R[12]],[R[2]]],["self"]]],[11,R[217],E,R[13],12,[[["id"],[R[12]],[R[2]]],["self"]]],[11,R[2],E,R[218],12,[[["self"]],[R[2]]]],[11,"values",E,R[219],12,[[["self"]],[R[12]]]],[11,"is_root",E,R[220],12,[[["self"]],["bool"]]],[11,R[221],E,R[222],12,[[["self"]],["bool"]]],[11,"parent",E,R[223],12,[[["self"]],[["id"],[R[8],["id"]]]]],[11,R[6],E,R[224],12,[[["visit"],["self"]]]],[11,R[14],E,R[225],12,[[[R[7]],["self"]],["bool"]]],[11,R[15],E,R[226],12,[[["self"]],["bool"]]],[11,"new",E,R[227],13,[[[R[12]]],["self"]]],[11,R[6],E,R[228],13,[[["visit"],["self"]]]],[11,R[14],E,R[229],13,[[[R[7]],["self"]],["bool"]]],[11,R[15],E,R[230],13,[[["self"]],["bool"]]],[0,R[231],R[0],"Subscribers collect and record trace data.",N,N],[3,R[58],R[46],R[232],N,N],[8,R[57],E,R[131],N,N],[11,R[16],E,R[17],14,[[["self"],[R[2]]],[R[5]]]],[10,"enabled",E,R[132],14,[[["self"],[R[2]]],["bool"]]],[10,R[18],E,R[133],14,[[["self"],[R[19]]],["id"]]],[10,R[6],E,R[20],14,[[["id"],["self"],[R[6]]]]],[10,R[21],E,R[22],14,[[["id"],["self"]]]],[10,"event",E,R[23],14,[[["event"],["self"]]]],[10,"enter",E,R[134],14,[[["id"],["self"]]]],[10,"exit",E,R[24],14,[[["id"],["self"]]]],[11,R[25],E,R[26],14,[[["id"],["self"]],["id"]]],[11,R[27],E,R[28],14,[[["id"],["self"]]]],[11,R[135],E,R[136],14,[[[R[40]],["self"]],[R[8]]]],[11,"is",E,R[233],14,[[["self"]],["bool"]]],[11,R[29],E,R[234],14,[[["self"]],[[R[8]],[T]]]],[11,"never",E,R[235],15,[[],["self"]]],[11,R[236],E,R[237],15,[[],["self"]]],[11,"always",E,R[238],15,[[],["self"]]],[11,"is_never",E,R[239],15,[[["self"]],["bool"]]],[11,R[240],E,R[241],15,[[["self"]],["bool"]]],[11,R[242],E,R[243],15,[[["self"]],["bool"]]],[14,"identify_callsite",R[0],"Statically constructs an [`Identifier`] for the provided…",N,N],[14,R[2],E,"Statically constructs new span [metadata].",N,N],[11,"from",R[30],E,16,[[[T]],[T]]],[11,"into",E,E,16,[[],[U]]],[11,R[32],E,E,16,[[["self"]],[T]]],[11,R[33],E,E,16,[[[T],["self"]]]],[11,R[34],E,E,16,[[[U]],[R[37]]]],[11,R[43],E,E,16,[[["self"]],[T]]],[11,R[38],E,E,16,[[["self"]],[R[40]]]],[11,R[35],E,E,16,[[["self"]],[T]]],[11,R[36],E,E,16,[[],[R[37]]]],[11,"from",R[31],E,1,[[[T]],[T]]],[11,"into",E,E,1,[[],[U]]],[11,R[32],E,E,1,[[["self"]],[T]]],[11,R[33],E,E,1,[[[T],["self"]]]],[11,R[34],E,E,1,[[[U]],[R[37]]]],[11,R[43],E,E,1,[[["self"]],[T]]],[11,R[38],E,E,1,[[["self"]],[R[40]]]],[11,R[35],E,E,1,[[["self"]],[T]]],[11,R[36],E,E,1,[[],[R[37]]]],[11,"from",E,E,17,[[[T]],[T]]],[11,"into",E,E,17,[[],[U]]],[11,R[42],E,E,17,[[["self"]],[R[87]]]],[11,R[34],E,E,17,[[[U]],[R[37]]]],[11,R[43],E,E,17,[[["self"]],[T]]],[11,R[38],E,E,17,[[["self"]],[R[40]]]],[11,R[35],E,E,17,[[["self"]],[T]]],[11,R[36],E,E,17,[[],[R[37]]]],[11,"from",R[39],E,2,[[[T]],[T]]],[11,"into",E,E,2,[[],[U]]],[11,R[34],E,E,2,[[[U]],[R[37]]]],[11,R[43],E,E,2,[[["self"]],[T]]],[11,R[38],E,E,2,[[["self"]],[R[40]]]],[11,R[35],E,E,2,[[["self"]],[T]]],[11,R[36],E,E,2,[[],[R[37]]]],[11,"from",R[41],E,5,[[[T]],[T]]],[11,"into",E,E,5,[[],[U]]],[11,R[32],E,E,5,[[["self"]],[T]]],[11,R[33],E,E,5,[[[T],["self"]]]],[11,R[42],E,E,5,[[["self"]],[R[87]]]],[11,R[34],E,E,5,[[[U]],[R[37]]]],[11,R[43],E,E,5,[[["self"]],[T]]],[11,R[38],E,E,5,[[["self"]],[R[40]]]],[11,R[35],E,E,5,[[["self"]],[T]]],[11,R[36],E,E,5,[[],[R[37]]]],[11,"from",E,E,6,[[[T]],[T]]],[11,"into",E,E,6,[[],[U]]],[11,R[42],E,E,6,[[["self"]],[R[87]]]],[11,R[34],E,E,6,[[[U]],[R[37]]]],[11,R[43],E,E,6,[[["self"]],[T]]],[11,R[38],E,E,6,[[["self"]],[R[40]]]],[11,R[35],E,E,6,[[["self"]],[T]]],[11,R[36],E,E,6,[[],[R[37]]]],[11,"from",E,E,7,[[[T]],[T]]],[11,"into",E,E,7,[[],[U]]],[11,R[42],E,E,7,[[["self"]],[R[87]]]],[11,R[34],E,E,7,[[[U]],[R[37]]]],[11,R[43],E,E,7,[[["self"]],[T]]],[11,R[38],E,E,7,[[["self"]],[R[40]]]],[11,R[35],E,E,7,[[["self"]],[T]]],[11,R[36],E,E,7,[[],[R[37]]]],[11,"from",E,E,18,[[[T]],[T]]],[11,R[244],E,E,18,[[],["i"]]],[11,"into",E,E,18,[[],[U]]],[11,R[34],E,E,18,[[[U]],[R[37]]]],[11,R[43],E,E,18,[[["self"]],[T]]],[11,R[38],E,E,18,[[["self"]],[R[40]]]],[11,R[35],E,E,18,[[["self"]],[T]]],[11,R[36],E,E,18,[[],[R[37]]]],[11,"from",E,E,19,[[[T]],[T]]],[11,"into",E,E,19,[[],[U]]],[11,R[32],E,E,19,[[["self"]],[T]]],[11,R[33],E,E,19,[[[T],["self"]]]],[11,R[34],E,E,19,[[[U]],[R[37]]]],[11,R[43],E,E,19,[[["self"]],[T]]],[11,R[38],E,E,19,[[["self"]],[R[40]]]],[11,R[35],E,E,19,[[["self"]],[T]]],[11,R[36],E,E,19,[[],[R[37]]]],[11,"from",E,E,20,[[[T]],[T]]],[11,"into",E,E,20,[[],[U]]],[11,R[32],E,E,20,[[["self"]],[T]]],[11,R[33],E,E,20,[[[T],["self"]]]],[11,R[34],E,E,20,[[[U]],[R[37]]]],[11,R[43],E,E,20,[[["self"]],[T]]],[11,R[38],E,E,20,[[["self"]],[R[40]]]],[11,R[35],E,E,20,[[["self"]],[T]]],[11,R[36],E,E,20,[[],[R[37]]]],[11,"from",R[44],E,8,[[[T]],[T]]],[11,"into",E,E,8,[[],[U]]],[11,R[34],E,E,8,[[[U]],[R[37]]]],[11,R[43],E,E,8,[[["self"]],[T]]],[11,R[38],E,E,8,[[["self"]],[R[40]]]],[11,R[35],E,E,8,[[["self"]],[T]]],[11,R[36],E,E,8,[[],[R[37]]]],[11,"from",E,E,9,[[[T]],[T]]],[11,"into",E,E,9,[[],[U]]],[11,R[32],E,E,9,[[["self"]],[T]]],[11,R[33],E,E,9,[[[T],["self"]]]],[11,R[34],E,E,9,[[[U]],[R[37]]]],[11,R[43],E,E,9,[[["self"]],[T]]],[11,R[38],E,E,9,[[["self"]],[R[40]]]],[11,R[35],E,E,9,[[["self"]],[T]]],[11,R[36],E,E,9,[[],[R[37]]]],[11,"from",E,E,10,[[[T]],[T]]],[11,"into",E,E,10,[[],[U]]],[11,R[32],E,E,10,[[["self"]],[T]]],[11,R[33],E,E,10,[[[T],["self"]]]],[11,R[34],E,E,10,[[[U]],[R[37]]]],[11,R[43],E,E,10,[[["self"]],[T]]],[11,R[38],E,E,10,[[["self"]],[R[40]]]],[11,R[35],E,E,10,[[["self"]],[T]]],[11,R[36],E,E,10,[[],[R[37]]]],[11,"from",R[45],E,11,[[[T]],[T]]],[11,"into",E,E,11,[[],[U]]],[11,R[32],E,E,11,[[["self"]],[T]]],[11,R[33],E,E,11,[[[T],["self"]]]],[11,R[34],E,E,11,[[[U]],[R[37]]]],[11,R[43],E,E,11,[[["self"]],[T]]],[11,R[38],E,E,11,[[["self"]],[R[40]]]],[11,R[35],E,E,11,[[["self"]],[T]]],[11,R[36],E,E,11,[[],[R[37]]]],[11,"from",E,E,12,[[[T]],[T]]],[11,"into",E,E,12,[[],[U]]],[11,R[34],E,E,12,[[[U]],[R[37]]]],[11,R[43],E,E,12,[[["self"]],[T]]],[11,R[38],E,E,12,[[["self"]],[R[40]]]],[11,R[35],E,E,12,[[["self"]],[T]]],[11,R[36],E,E,12,[[],[R[37]]]],[11,"from",E,E,13,[[[T]],[T]]],[11,"into",E,E,13,[[],[U]]],[11,R[34],E,E,13,[[[U]],[R[37]]]],[11,R[43],E,E,13,[[["self"]],[T]]],[11,R[38],E,E,13,[[["self"]],[R[40]]]],[11,R[35],E,E,13,[[["self"]],[T]]],[11,R[36],E,E,13,[[],[R[37]]]],[11,"from",R[46],E,15,[[[T]],[T]]],[11,"into",E,E,15,[[],[U]]],[11,R[32],E,E,15,[[["self"]],[T]]],[11,R[33],E,E,15,[[[T],["self"]]]],[11,R[34],E,E,15,[[[U]],[R[37]]]],[11,R[43],E,E,15,[[["self"]],[T]]],[11,R[38],E,E,15,[[["self"]],[R[40]]]],[11,R[35],E,E,15,[[["self"]],[T]]],[11,R[36],E,E,15,[[],[R[37]]]],[11,R[6],R[41],E,19,[[[R[7]],["visit"],["self"]]]],[11,R[6],E,E,20,[[[R[7]],["visit"],["self"]]]],[11,"eq",R[30],E,16,[[[R[10]],["self"]],["bool"]]],[11,"eq",R[41],E,5,[[["self"]],["bool"]]],[11,"eq",R[44],E,9,[[["self"],["kind"]],["bool"]]],[11,"ne",E,E,9,[[["self"],["kind"]],["bool"]]],[11,"eq",E,E,10,[[["self"],["level"]],["bool"]]],[11,"ne",E,E,10,[[["self"],["level"]],["bool"]]],[11,"eq",R[45],E,11,[[["id"],["self"]],["bool"]]],[11,"ne",E,E,11,[[["id"],["self"]],["bool"]]],[11,"clone",R[30],E,16,[[["self"]],[R[10]]]],[11,"clone",R[31],E,1,[[["self"]],[R[3]]]],[11,"clone",R[41],E,19,[[["self"]],[R[47]]]],[11,"clone",E,E,20,[[["self"]],[R[48]]]],[11,"clone",E,E,5,[[["self"]],["self"]]],[11,"clone",R[44],E,9,[[["self"]],["kind"]]],[11,"clone",E,E,10,[[["self"]],["level"]]],[11,"clone",R[45],E,11,[[["self"]],["id"]]],[11,"clone",R[46],E,15,[[["self"]],[R[5]]]],[11,"cmp",R[44],E,10,[[["self"],["level"]],[R[49]]]],[11,"from",R[31],E,1,[[["s"]],["self"]]],[11,R[146],R[44],E,10,[[["self"],["level"]],[[R[49]],[R[8],[R[49]]]]]],[11,"lt",E,E,10,[[["self"],["level"]],["bool"]]],[11,"le",E,E,10,[[["self"],["level"]],["bool"]]],[11,"gt",E,E,10,[[["self"],["level"]],["bool"]]],[11,"ge",E,E,10,[[["self"],["level"]],["bool"]]],[11,"next",R[41],E,18,[[["self"]],[[R[7]],[R[8],[R[7]]]]]],[11,"as_ref",E,E,5,[[["self"]],["str"]]],[11,"fmt",R[30],E,16,[[[R[50]],["self"]],[R[37]]]],[11,"fmt",R[31],E,17,[[[R[50]],["self"]],[R[37]]]],[11,"fmt",E,E,1,[[[R[50]],["self"]],[R[37]]]],[11,"fmt",R[39],E,2,[[[R[50]],["self"]],[R[37]]]],[11,"fmt",R[41],E,5,[[[R[50]],["self"]],[R[37]]]],[11,"fmt",E,E,18,[[[R[50]],["self"]],[R[37]]]],[11,"fmt",E,E,19,[[[R[50]],["self"]],[R[37]]]],[11,"fmt",E,E,20,[[[R[50]],["self"]],[R[37]]]],[11,"fmt",E,E,6,[[[R[50]],["self"]],[R[37]]]],[11,"fmt",E,E,7,[[[R[50]],["self"]],[R[37]]]],[11,"fmt",R[44],E,9,[[[R[50]],["self"]],[R[37]]]],[11,"fmt",E,E,10,[[[R[50]],["self"]],[R[37]]]],[11,"fmt",E,E,8,[[[R[50]],["self"]],[R[37]]]],[11,"fmt",R[45],E,11,[[[R[50]],["self"]],[R[37]]]],[11,"fmt",E,E,12,[[[R[50]],["self"]],[R[37]]]],[11,"fmt",E,E,13,[[[R[50]],["self"]],[R[37]]]],[11,"fmt",R[46],E,15,[[[R[50]],["self"]],[R[37]]]],[11,"fmt",R[31],E,17,[[[R[50]],["self"]],[R[37]]]],[11,"fmt",R[41],E,5,[[[R[50]],["self"]],[R[37]]]],[11,"fmt",E,E,6,[[[R[50]],["self"]],[R[37]]]],[11,"fmt",E,E,7,[[[R[50]],["self"]],[R[37]]]],[11,"hash",R[30],E,16,[[["h"],["self"]]]],[11,"hash",R[41],E,5,[[["h"],["self"]]]],[11,"hash",R[45],E,11,[[["self"],["__h"]]]]],"p":[[8,R[51]],[3,R[52]],[3,"Event"],[8,"Visit"],[8,"Value"],[3,"Field"],[3,R[53]],[3,R[54]],[3,R[55]],[3,"Kind"],[3,"Level"],[3,"Id"],[3,R[56]],[3,"Record"],[8,R[57]],[3,R[58]],[3,R[59]],[3,R[60]],[3,"Iter"],[3,R[61]],[3,R[62]]]};
searchIndex[R[110]]={"doc":"Task execution related traits and utilities.","i":[[3,"Enter",R[110],"Represents an executor context.",N,N],[3,R[122],E,"An error returned by `enter` if an execution scope has…",N,N],[3,R[118],E,R[724],N,N],[3,R[119],E,R[725],N,N],[5,"enter",E,"Marks the current thread as being within the dynamic…",N,[[],[[R[37],["enter",R[111]]],["enter"],[R[111]]]]],[5,"spawn",E,"Submits a future for execution on the default executor --…",N,[[[T]]]],[5,R[125],E,"Set the default executor for the duration of the closure",N,[[[T],["enter"],["f"]],["r"]]],[11,R[265],E,"Blocks the thread on the specified future, returning the…",0,[[["self"],["future"]],[R[37]]]],[11,R[325],E,R[726],1,[[],["self"]]],[11,R[291],E,R[727],1,[[],["self"]]],[11,R[292],E,R[728],1,[[["self"]],["bool"]]],[11,R[293],E,R[729],1,[[["self"]],["bool"]]],[11,R[781],E,R[730],2,[[],[R[116]]]],[0,"park",E,"Abstraction over blocking and unblocking the current thread.",N,N],[3,R[120],R[114],"Blocks the current thread using a condition variable.",N,N],[3,R[123],E,R[364],N,N],[3,R[124],E,"Unblocks a thread that was blocked by `ParkThread`.",N,N],[8,"Park",E,"Block the current thread.",N,N],[16,"Unpark",E,"Unpark handle type for the `Park` implementation.",3,N],[16,"Error",E,"Error returned by `park`",3,N],[10,"unpark",E,"Get a new `Unpark` handle associated with this `Park`…",3,[[["self"]]]],[10,"park",E,"Block the current thread unless or until the token is…",3,[[["self"]],[R[37]]]],[10,R[115],E,"Park the current thread for at most `duration`.",3,[[["self"],[R[249]]],[R[37]]]],[8,"Unpark",E,"Unblock a thread blocked by the associated [`Park`]…",N,N],[10,"unpark",E,"Unblock a thread that is blocked by the associated `Park`…",4,[[["self"]]]],[11,"new",E,"Create a new `ParkThread` handle for the current thread.",5,[[],["parkthread"]]],[8,R[646],R[110],R[731],N,N],[10,"spawn",E,R[732],6,[[["future"],["self"],["box",["future"]]],[[R[37],[R[112]]],[R[112]]]]],[11,"status",E,R[113],6,[[["self"]],[[R[37],[R[112]]],[R[112]]]]],[8,R[121],E,R[733],N,N],[10,"spawn",E,R[734],7,[[["self"],[T]],[[R[37],[R[112]]],[R[112]]]]],[11,"status",E,R[113],7,[[["self"]],[[R[37],[R[112]]],[R[112]]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[34],E,E,0,[[[U]],[R[37]]]],[11,R[43],E,E,0,[[["self"]],[T]]],[11,R[38],E,E,0,[[["self"]],[R[40]]]],[11,R[35],E,E,0,[[["self"]],[T]]],[11,R[36],E,E,0,[[],[R[37]]]],[11,"from",E,E,8,[[[T]],[T]]],[11,"into",E,E,8,[[],[U]]],[11,R[42],E,E,8,[[["self"]],[R[87]]]],[11,R[34],E,E,8,[[[U]],[R[37]]]],[11,R[43],E,E,8,[[["self"]],[T]]],[11,R[38],E,E,8,[[["self"]],[R[40]]]],[11,R[35],E,E,8,[[["self"]],[T]]],[11,R[36],E,E,8,[[],[R[37]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,"into",E,E,1,[[],[U]]],[11,R[42],E,E,1,[[["self"]],[R[87]]]],[11,R[34],E,E,1,[[[U]],[R[37]]]],[11,R[43],E,E,1,[[["self"]],[T]]],[11,R[38],E,E,1,[[["self"]],[R[40]]]],[11,R[35],E,E,1,[[["self"]],[T]]],[11,R[36],E,E,1,[[],[R[37]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,"into",E,E,2,[[],[U]]],[11,R[32],E,E,2,[[["self"]],[T]]],[11,R[33],E,E,2,[[[T],["self"]]]],[11,R[34],E,E,2,[[[U]],[R[37]]]],[11,R[43],E,E,2,[[["self"]],[T]]],[11,R[38],E,E,2,[[["self"]],[R[40]]]],[11,R[35],E,E,2,[[["self"]],[T]]],[11,R[36],E,E,2,[[],[R[37]]]],[11,"from",R[114],E,5,[[[T]],[T]]],[11,"into",E,E,5,[[],[U]]],[11,R[34],E,E,5,[[[U]],[R[37]]]],[11,R[43],E,E,5,[[["self"]],[T]]],[11,R[38],E,E,5,[[["self"]],[R[40]]]],[11,R[35],E,E,5,[[["self"]],[T]]],[11,R[36],E,E,5,[[],[R[37]]]],[11,"from",E,E,9,[[[T]],[T]]],[11,"into",E,E,9,[[],[U]]],[11,R[34],E,E,9,[[[U]],[R[37]]]],[11,R[43],E,E,9,[[["self"]],[T]]],[11,R[38],E,E,9,[[["self"]],[R[40]]]],[11,R[35],E,E,9,[[["self"]],[T]]],[11,R[36],E,E,9,[[],[R[37]]]],[11,"from",E,E,10,[[[T]],[T]]],[11,"into",E,E,10,[[],[U]]],[11,R[32],E,E,10,[[["self"]],[T]]],[11,R[33],E,E,10,[[[T],["self"]]]],[11,R[34],E,E,10,[[[U]],[R[37]]]],[11,R[43],E,E,10,[[["self"]],[T]]],[11,R[38],E,E,10,[[["self"]],[R[40]]]],[11,R[35],E,E,10,[[["self"]],[T]]],[11,R[36],E,E,10,[[],[R[37]]]],[11,"spawn",R[110],E,2,[[["future"],["self"],["box",["future"]]],[[R[37],[R[112]]],[R[112]]]]],[11,"status",E,E,2,[[["self"]],[[R[37],[R[112]]],[R[112]]]]],[11,"unpark",R[114],E,5,[[["self"]]]],[11,"park",E,E,5,[[["self"]],[R[37]]]],[11,R[115],E,E,5,[[["self"],[R[249]]],[R[37]]]],[11,"unpark",E,E,10,[[["self"]]]],[11,"spawn",R[110],E,2,[[["self"],[T]],[[R[37],[R[112]]],[R[112]]]]],[11,"status",E,E,2,[[["self"]],[[R[37],[R[112]]],[R[112]]]]],[11,"clone",E,E,2,[[["self"]],[R[116]]]],[11,"clone",R[114],E,10,[[["self"]],["unparkthread"]]],[11,"drop",R[110],E,0,[[["self"]]]],[11,"fmt",E,E,8,[[[R[50]],["self"]],[R[37]]]],[11,"fmt",E,E,0,[[[R[50]],["self"]],[R[37]]]],[11,"fmt",E,E,1,[[[R[50]],["self"]],[R[37]]]],[11,"fmt",E,E,2,[[[R[50]],["self"]],[R[37]]]],[11,"fmt",R[114],E,5,[[[R[50]],["self"]],[R[37]]]],[11,"fmt",E,E,9,[[[R[50]],["self"]],[R[37]]]],[11,"fmt",E,E,10,[[[R[50]],["self"]],[R[37]]]],[11,"fmt",R[110],E,8,[[[R[50]],["self"]],[R[37]]]],[11,"fmt",E,E,1,[[[R[50]],["self"]],[R[37]]]],[11,R[92],E,E,1,[[["self"]],["str"]]],[11,R[681],E,E,2,[[["self"],[T]],[[R[117]],[R[37],[R[117]]]]]],[11,"status",E,R[113],6,[[["self"]],[[R[37],[R[112]]],[R[112]]]]],[11,"status",E,R[113],7,[[["self"]],[[R[37],[R[112]]],[R[112]]]]]],"p":[[3,"Enter"],[3,R[118]],[3,R[119]],[8,"Park"],[8,"Unpark"],[3,R[120]],[8,R[646]],[8,R[121]],[3,R[122]],[3,R[123]],[3,R[124]]]};
searchIndex[R[126]]={"doc":"A scoped, structured logging and diagnostics system.","i":[[3,R[52],R[126],R[127],N,N],[3,"Event",E,R[128],N,N],[8,"Value",E,R[129],N,N],[10,R[6],E,R[130],0,[[["visit"],["self"],[R[7]]]]],[8,R[57],E,R[131],N,N],[11,R[16],E,R[17],1,[[[R[2]],["self"]],[R[5]]]],[10,"enabled",E,R[132],1,[[[R[2]],["self"]],["bool"]]],[10,R[18],E,R[133],1,[[[R[19]],["self"]],["id"]]],[10,R[6],E,R[20],1,[[["id"],[R[6]],["self"]]]],[10,R[21],E,R[22],1,[[["id"],["self"]]]],[10,"event",E,R[23],1,[[["event"],["self"]]]],[10,"enter",E,R[134],1,[[["id"],["self"]]]],[10,"exit",E,R[24],1,[[["id"],["self"]]]],[11,R[25],E,R[26],1,[[["id"],["self"]],["id"]]],[11,R[27],E,R[28],1,[[["id"],["self"]]]],[11,R[135],E,R[136],1,[[[R[40]],["self"]],[R[8]]]],[0,R[153],E,R[154],N,N],[3,R[52],R[139],R[127],N,N],[5,R[125],E,R[155],N,[[["impl fnonce() -> t"],[R[3]]],[T]]],[5,R[138],E,R[156],N,[[[R[3]]],[[R[4]],[R[37],[R[4]]]]]],[3,R[60],E,R[137],N,N],[5,R[157],E,R[158],N,[[["f"]],[T]]],[0,"event",R[126],R[166],N,N],[3,"Event",R[140],R[128],N,N],[3,"Level",R[126],R[196],N,N],[3,R[55],E,R[195],N,N],[0,R[7],E,"Structured data associated with `Span`s and `Event`s.",N,N],[3,"Field",R[142],R[171],N,N],[3,R[53],E,R[172],N,N],[3,R[54],E,R[173],N,N],[3,"Iter",E,R[174],N,N],[8,"Visit",E,R[179],N,N],[11,R[180],E,R[181],2,[[["self"],["i64"],[R[7]]]]],[11,R[182],E,R[183],2,[[["self"],["u64"],[R[7]]]]],[11,R[184],E,R[185],2,[[["self"],["bool"],[R[7]]]]],[11,R[186],E,R[187],2,[[["str"],["self"],[R[7]]]]],[10,R[188],E,R[189],2,[[["self"],["debug"],[R[7]]]]],[8,"Value",E,R[129],N,N],[10,R[6],E,R[130],0,[[["visit"],["self"],[R[7]]]]],[3,R[61],E,R[175],N,N],[3,R[62],E,R[176],N,N],[5,"display",E,R[177],N,[[[T]],[R[47]]]],[5,"debug",E,R[178],N,[[[T]],[R[48]]]],[8,"AsField",E,"Trait implemented to allow a type to be used as a field key.",N,N],[10,"as_field",E,"Attempts to convert `&self` into a `Field` with the…",3,[[[R[2]],["self"]],[[R[8],[R[7]]],[R[7]]]]],[0,"level_filters",R[126],"Trace verbosity level filtering.",N,N],[3,R[152],R[143],"A filter comparable to trace verbosity `Level`.",N,N],[17,"STATIC_MAX_LEVEL",E,"The statically configured maximum trace level.",N,N],[18,"OFF",E,"The \"off\" level.",4,N],[18,"ERROR",E,R[147],4,N],[18,"WARN",E,R[148],4,N],[18,"INFO",E,R[149],4,N],[18,"DEBUG",E,R[150],4,N],[18,"TRACE",E,R[151],4,N],[0,"span",R[126],R[209],N,N],[3,R[56],R[144],R[211],N,N],[3,"Id",E,R[210],N,N],[3,"Record",E,R[212],N,N],[3,"Span",E,"A handle representing a span, with the capability to enter…",N,N],[3,"Entered",E,"A guard representing a span which has been entered and is…",N,N],[8,"AsId",E,"Trait implemented by types which have a span `Id`.",N,N],[10,"as_id",E,"Returns the `Id` of the span that `self` corresponds to,…",5,[[["self"]],[["id"],[R[8],["id"]]]]],[11,"new",E,"Constructs a new `Span` with the given [metadata] and set…",6,[[[R[12]],[R[2]]],["span"]]],[11,R[215],E,"Constructs a new `Span` as the root of its own trace tree,…",6,[[[R[12]],[R[2]]],["span"]]],[11,R[217],E,"Constructs a new `Span` as child of the given parent span,…",6,[[[R[12]],[R[2]]],["span"]]],[11,"new_disabled",E,"Constructs a new disabled span.",6,[[[R[2]]],["span"]]],[11,"enter",E,"Enters this span, returning a guard that will exit the…",6,[[["self"]],["entered"]]],[11,"in_scope",E,"Executes the given function in the context of this span.",6,[[["fnonce"],["self"]],[T]]],[11,R[7],E,"Returns a `Field` for the field with the given `name`, if…",6,[[["q"],["self"]],[[R[8],[R[7]]],[R[7]]]]],[11,"has_field",E,"Returns true if this `Span` has a field for the given…",6,[[["q"],["self"]],["bool"]]],[11,R[6],E,"Visits that the field described by `field` has the value…",6,[[["q"],["self"],["v"]],["self"]]],[11,"record_all",E,"Visit all the fields in the span",6,[[[R[12]],["self"]],["self"]]],[11,"is_disabled",E,"Returns `true` if this span was disabled by the subscriber…",6,[[["self"]],["bool"]]],[11,"follows_from",E,"Indicates that the span with the given ID has an indirect…",6,[[["self"]],["self"]]],[11,"id",E,"Returns this span's `Id`, if it is enabled.",6,[[["self"]],[["id"],[R[8],["id"]]]]],[11,R[2],E,"Returns this span's `Metadata`, if it is enabled.",6,[[["self"]],[[R[2]],[R[8],[R[2]]]]]],[0,R[231],R[126],"Collects and records trace data.",N,N],[8,R[57],R[141],R[131],N,N],[11,R[16],E,R[17],1,[[[R[2]],["self"]],[R[5]]]],[10,"enabled",E,R[132],1,[[[R[2]],["self"]],["bool"]]],[10,R[18],E,R[133],1,[[[R[19]],["self"]],["id"]]],[10,R[6],E,R[20],1,[[["id"],[R[6]],["self"]]]],[10,R[21],E,R[22],1,[[["id"],["self"]]]],[10,"event",E,R[23],1,[[["event"],["self"]]]],[10,"enter",E,R[134],1,[[["id"],["self"]]]],[10,"exit",E,R[24],1,[[["id"],["self"]]]],[11,R[25],E,R[26],1,[[["id"],["self"]],["id"]]],[11,R[27],E,R[28],1,[[["id"],["self"]]]],[11,R[135],E,R[136],1,[[[R[40]],["self"]],[R[8]]]],[3,R[58],E,R[232],N,N],[3,R[60],E,R[137],N,N],[5,R[125],E,"Sets this subscriber as the default for the duration of a…",N,[[["s"]],[T]]],[5,R[138],E,"Sets this subscriber as the global default for the…",N,[[["s"]],[[R[4]],[R[37],[R[4]]]]]],[14,"span",R[126],"Constructs a new span.",N,N],[14,"trace_span",E,"Constructs a span at the trace level.",N,N],[14,"debug_span",E,"Constructs a span at the debug level.",N,N],[14,"info_span",E,"Constructs a span at the info level.",N,N],[14,"warn_span",E,"Constructs a span at the warn level.",N,N],[14,"error_span",E,"Constructs a span at the error level.",N,N],[14,"event",E,"Constructs a new `Event`.",N,N],[14,"trace",E,"Constructs an event at the trace level.",N,N],[14,"debug",E,"Constructs an event at the debug level.",N,N],[14,"info",E,"Constructs an event at the info level.",N,N],[14,"warn",E,"Constructs an event at the warn level.",N,N],[14,"error",E,"Constructs an event at the error level.",N,N],[11,"from",R[139],E,7,[[[T]],[T]]],[11,"into",E,E,7,[[],[U]]],[11,R[32],E,E,7,[[["self"]],[T]]],[11,R[33],E,E,7,[[[T],["self"]]]],[11,R[34],E,E,7,[[[U]],[R[37]]]],[11,R[43],E,E,7,[[["self"]],[T]]],[11,R[38],E,E,7,[[["self"]],[R[40]]]],[11,R[35],E,E,7,[[["self"]],[T]]],[11,R[36],E,E,7,[[],[R[37]]]],[11,"from",R[140],E,8,[[[T]],[T]]],[11,"into",E,E,8,[[],[U]]],[11,R[34],E,E,8,[[[U]],[R[37]]]],[11,R[43],E,E,8,[[["self"]],[T]]],[11,R[38],E,E,8,[[["self"]],[R[40]]]],[11,R[35],E,E,8,[[["self"]],[T]]],[11,R[36],E,E,8,[[],[R[37]]]],[11,"from",R[141],E,9,[[[T]],[T]]],[11,"into",E,E,9,[[],[U]]],[11,R[42],E,E,9,[[["self"]],[R[87]]]],[11,R[34],E,E,9,[[[U]],[R[37]]]],[11,R[43],E,E,9,[[["self"]],[T]]],[11,R[38],E,E,9,[[["self"]],[R[40]]]],[11,R[35],E,E,9,[[["self"]],[T]]],[11,R[36],E,E,9,[[],[R[37]]]],[11,"from",R[126],E,10,[[[T]],[T]]],[11,"into",E,E,10,[[],[U]]],[11,R[32],E,E,10,[[["self"]],[T]]],[11,R[33],E,E,10,[[[T],["self"]]]],[11,R[34],E,E,10,[[[U]],[R[37]]]],[11,R[43],E,E,10,[[["self"]],[T]]],[11,R[38],E,E,10,[[["self"]],[R[40]]]],[11,R[35],E,E,10,[[["self"]],[T]]],[11,R[36],E,E,10,[[],[R[37]]]],[11,"from",E,E,11,[[[T]],[T]]],[11,"into",E,E,11,[[],[U]]],[11,R[34],E,E,11,[[[U]],[R[37]]]],[11,R[43],E,E,11,[[["self"]],[T]]],[11,R[38],E,E,11,[[["self"]],[R[40]]]],[11,R[35],E,E,11,[[["self"]],[T]]],[11,R[36],E,E,11,[[],[R[37]]]],[11,"from",R[142],E,12,[[[T]],[T]]],[11,"into",E,E,12,[[],[U]]],[11,R[32],E,E,12,[[["self"]],[T]]],[11,R[33],E,E,12,[[[T],["self"]]]],[11,R[42],E,E,12,[[["self"]],[R[87]]]],[11,R[34],E,E,12,[[[U]],[R[37]]]],[11,R[43],E,E,12,[[["self"]],[T]]],[11,R[38],E,E,12,[[["self"]],[R[40]]]],[11,R[35],E,E,12,[[["self"]],[T]]],[11,R[36],E,E,12,[[],[R[37]]]],[11,"from",E,E,13,[[[T]],[T]]],[11,"into",E,E,13,[[],[U]]],[11,R[42],E,E,13,[[["self"]],[R[87]]]],[11,R[34],E,E,13,[[[U]],[R[37]]]],[11,R[43],E,E,13,[[["self"]],[T]]],[11,R[38],E,E,13,[[["self"]],[R[40]]]],[11,R[35],E,E,13,[[["self"]],[T]]],[11,R[36],E,E,13,[[],[R[37]]]],[11,"from",E,E,14,[[[T]],[T]]],[11,"into",E,E,14,[[],[U]]],[11,R[42],E,E,14,[[["self"]],[R[87]]]],[11,R[34],E,E,14,[[[U]],[R[37]]]],[11,R[43],E,E,14,[[["self"]],[T]]],[11,R[38],E,E,14,[[["self"]],[R[40]]]],[11,R[35],E,E,14,[[["self"]],[T]]],[11,R[36],E,E,14,[[],[R[37]]]],[11,"from",E,E,15,[[[T]],[T]]],[11,R[244],E,E,15,[[],["i"]]],[11,"into",E,E,15,[[],[U]]],[11,R[34],E,E,15,[[[U]],[R[37]]]],[11,R[43],E,E,15,[[["self"]],[T]]],[11,R[38],E,E,15,[[["self"]],[R[40]]]],[11,R[35],E,E,15,[[["self"]],[T]]],[11,R[36],E,E,15,[[],[R[37]]]],[11,"from",E,E,16,[[[T]],[T]]],[11,"into",E,E,16,[[],[U]]],[11,R[32],E,E,16,[[["self"]],[T]]],[11,R[33],E,E,16,[[[T],["self"]]]],[11,R[34],E,E,16,[[[U]],[R[37]]]],[11,R[43],E,E,16,[[["self"]],[T]]],[11,R[38],E,E,16,[[["self"]],[R[40]]]],[11,R[35],E,E,16,[[["self"]],[T]]],[11,R[36],E,E,16,[[],[R[37]]]],[11,"from",E,E,17,[[[T]],[T]]],[11,"into",E,E,17,[[],[U]]],[11,R[32],E,E,17,[[["self"]],[T]]],[11,R[33],E,E,17,[[[T],["self"]]]],[11,R[34],E,E,17,[[[U]],[R[37]]]],[11,R[43],E,E,17,[[["self"]],[T]]],[11,R[38],E,E,17,[[["self"]],[R[40]]]],[11,R[35],E,E,17,[[["self"]],[T]]],[11,R[36],E,E,17,[[],[R[37]]]],[11,"from",R[143],E,4,[[[T]],[T]]],[11,"into",E,E,4,[[],[U]]],[11,R[32],E,E,4,[[["self"]],[T]]],[11,R[33],E,E,4,[[[T],["self"]]]],[11,R[34],E,E,4,[[[U]],[R[37]]]],[11,R[43],E,E,4,[[["self"]],[T]]],[11,R[38],E,E,4,[[["self"]],[R[40]]]],[11,R[35],E,E,4,[[["self"]],[T]]],[11,R[36],E,E,4,[[],[R[37]]]],[11,"from",R[144],E,18,[[[T]],[T]]],[11,"into",E,E,18,[[],[U]]],[11,R[34],E,E,18,[[[U]],[R[37]]]],[11,R[43],E,E,18,[[["self"]],[T]]],[11,R[38],E,E,18,[[["self"]],[R[40]]]],[11,R[35],E,E,18,[[["self"]],[T]]],[11,R[36],E,E,18,[[],[R[37]]]],[11,"from",E,E,19,[[[T]],[T]]],[11,"into",E,E,19,[[],[U]]],[11,R[32],E,E,19,[[["self"]],[T]]],[11,R[33],E,E,19,[[[T],["self"]]]],[11,R[34],E,E,19,[[[U]],[R[37]]]],[11,R[43],E,E,19,[[["self"]],[T]]],[11,R[38],E,E,19,[[["self"]],[R[40]]]],[11,R[35],E,E,19,[[["self"]],[T]]],[11,R[36],E,E,19,[[],[R[37]]]],[11,"from",E,E,20,[[[T]],[T]]],[11,"into",E,E,20,[[],[U]]],[11,R[34],E,E,20,[[[U]],[R[37]]]],[11,R[43],E,E,20,[[["self"]],[T]]],[11,R[38],E,E,20,[[["self"]],[R[40]]]],[11,R[35],E,E,20,[[["self"]],[T]]],[11,R[36],E,E,20,[[],[R[37]]]],[11,"from",E,E,6,[[[T]],[T]]],[11,"into",E,E,6,[[],[U]]],[11,R[32],E,E,6,[[["self"]],[T]]],[11,R[33],E,E,6,[[[T],["self"]]]],[11,R[34],E,E,6,[[[U]],[R[37]]]],[11,R[43],E,E,6,[[["self"]],[T]]],[11,R[38],E,E,6,[[["self"]],[R[40]]]],[11,R[35],E,E,6,[[["self"]],[T]]],[11,R[36],E,E,6,[[],[R[37]]]],[11,"from",E,E,21,[[[T]],[T]]],[11,"into",E,E,21,[[],[U]]],[11,R[34],E,E,21,[[[U]],[R[37]]]],[11,R[43],E,E,21,[[["self"]],[T]]],[11,R[38],E,E,21,[[["self"]],[R[40]]]],[11,R[35],E,E,21,[[["self"]],[T]]],[11,R[36],E,E,21,[[],[R[37]]]],[11,"from",R[141],E,22,[[[T]],[T]]],[11,"into",E,E,22,[[],[U]]],[11,R[32],E,E,22,[[["self"]],[T]]],[11,R[33],E,E,22,[[[T],["self"]]]],[11,R[34],E,E,22,[[[U]],[R[37]]]],[11,R[43],E,E,22,[[["self"]],[T]]],[11,R[38],E,E,22,[[["self"]],[R[40]]]],[11,R[35],E,E,22,[[["self"]],[T]]],[11,R[36],E,E,22,[[],[R[37]]]],[11,"fmt",R[142],E,13,[[[R[50]],["self"]],[["error"],[R[37],["error"]]]]],[11,"fmt",R[141],E,9,[[[R[50]],["self"]],[["error"],[R[37],["error"]]]]],[11,"fmt",R[142],E,15,[[[R[50]],["self"]],[["error"],[R[37],["error"]]]]],[11,"fmt",E,E,17,[[[R[50]],["self"]],[["error"],[R[37],["error"]]]]],[11,"fmt",R[139],E,7,[[[R[50]],["self"]],[["error"],[R[37],["error"]]]]],[11,"fmt",R[140],E,8,[[[R[50]],["self"]],[["error"],[R[37],["error"]]]]],[11,"fmt",R[142],E,12,[[[R[50]],["self"]],[["error"],[R[37],["error"]]]]],[11,"fmt",E,E,16,[[[R[50]],["self"]],[["error"],[R[37],["error"]]]]],[11,"fmt",R[144],E,18,[[[R[50]],["self"]],[["error"],[R[37],["error"]]]]],[11,"fmt",E,E,20,[[[R[50]],["self"]],[["error"],[R[37],["error"]]]]],[11,"fmt",R[126],E,11,[[[R[50]],["self"]],[["error"],[R[37],["error"]]]]],[11,"fmt",R[141],E,22,[[[R[50]],["self"]],[["error"],[R[37],["error"]]]]],[11,"fmt",R[144],E,19,[[[R[50]],["self"]],[["error"],[R[37],["error"]]]]],[11,"fmt",R[126],E,10,[[[R[50]],["self"]],[["error"],[R[37],["error"]]]]],[11,"fmt",R[142],E,14,[[[R[50]],["self"]],[["error"],[R[37],["error"]]]]],[11,R[6],E,E,17,[[["visit"],["self"],[R[7]]]]],[11,R[6],E,E,16,[[["visit"],["self"],[R[7]]]]],[11,"next",E,E,15,[[["self"]],[[R[8],[R[7]]],[R[7]]]]],[11,"hash",R[144],E,19,[[["self"],["__h"]]]],[11,"hash",R[142],E,12,[[["h"],["self"]]]],[11,"cmp",R[126],E,10,[[["self"],["level"]],[R[49]]]],[11,"clone",R[144],E,19,[[["self"]],["id"]]],[11,"clone",R[142],E,16,[[["self"]],[R[47]]]],[11,"clone",R[126],E,10,[[["self"]],["level"]]],[11,"clone",R[139],E,7,[[["self"]],[R[3]]]],[11,"clone",R[141],E,22,[[["self"]],[R[5]]]],[11,"clone",R[142],E,17,[[["self"]],[R[48]]]],[11,"clone",E,E,12,[[["self"]],[R[7]]]],[11,"as_ref",E,E,12,[[["self"]],["str"]]],[11,R[146],R[126],E,10,[[["self"],["level"]],[[R[49]],[R[8],[R[49]]]]]],[11,"lt",E,E,10,[[["self"],["level"]],["bool"]]],[11,"le",E,E,10,[[["self"],["level"]],["bool"]]],[11,"gt",E,E,10,[[["self"],["level"]],["bool"]]],[11,"ge",E,E,10,[[["self"],["level"]],["bool"]]],[11,"from",R[139],E,7,[[["s"]],[R[3]]]],[11,"fmt",R[142],E,13,[[[R[50]],["self"]],[["error"],[R[37],["error"]]]]],[11,"fmt",E,E,12,[[[R[50]],["self"]],[["error"],[R[37],["error"]]]]],[11,"fmt",R[141],E,9,[[[R[50]],["self"]],[["error"],[R[37],["error"]]]]],[11,"fmt",R[142],E,14,[[[R[50]],["self"]],[["error"],[R[37],["error"]]]]],[11,"eq",R[126],E,10,[[["self"],["level"]],["bool"]]],[11,"ne",E,E,10,[[["self"],["level"]],["bool"]]],[11,"eq",R[142],E,12,[[["self"],[R[7]]],["bool"]]],[11,"eq",R[144],E,19,[[["id"],["self"]],["bool"]]],[11,"ne",E,E,19,[[["id"],["self"]],["bool"]]],[11,"as_field",R[142],E,12,[[[R[2]],["self"]],[[R[8],[R[7]]],[R[7]]]]],[11,"eq",R[143],E,4,[[[R[145]],["self"]],["bool"]]],[11,"ne",E,E,4,[[[R[145]],["self"]],["bool"]]],[11,"eq",R[126],E,10,[[[R[145]],["self"]],["bool"]]],[11,"eq",R[144],E,6,[[["self"]],["bool"]]],[11,"clone",R[143],E,4,[[["self"]],[R[145]]]],[11,"clone",R[144],E,6,[[["self"]],["span"]]],[11,"cmp",R[143],E,4,[[[R[145]],["self"]],[R[49]]]],[11,"drop",R[144],E,21,[[["self"]]]],[11,"into",E,E,6,[[],[["id"],[R[8],["id"]]]]],[11,R[146],R[143],E,4,[[[R[145]],["self"]],[[R[49]],[R[8],[R[49]]]]]],[11,"lt",E,E,4,[[[R[145]],["self"]],["bool"]]],[11,"le",E,E,4,[[[R[145]],["self"]],["bool"]]],[11,"gt",E,E,4,[[[R[145]],["self"]],["bool"]]],[11,"ge",E,E,4,[[[R[145]],["self"]],["bool"]]],[11,R[146],R[126],E,10,[[[R[145]],["self"]],[[R[8],[R[49]]],[R[49]]]]],[11,"fmt",R[143],E,4,[[[R[50]],["self"]],[R[37]]]],[11,"fmt",R[144],E,21,[[[R[50]],["self"]],[R[37]]]],[11,"fmt",E,E,6,[[[R[50]],["self"]],[R[37]]]],[11,"hash",E,E,6,[[["h"],["self"]]]],[11,"none",R[139],R[159],7,[[],[R[3]]]],[11,"new",E,R[160],7,[[["s"]],[R[3]]]],[11,R[16],E,R[17],7,[[[R[2]],["self"]],[R[5]]]],[11,R[18],E,R[161],7,[[[R[19]],["self"]],["id"]]],[11,R[6],E,R[20],7,[[["id"],[R[6]],["self"]]]],[11,R[21],E,R[22],7,[[["id"],["self"]]]],[11,"enabled",E,R[162],7,[[[R[2]],["self"]],["bool"]]],[11,"event",E,R[23],7,[[["event"],["self"]]]],[11,"enter",E,R[163],7,[[["id"],["self"]]]],[11,"exit",E,R[24],7,[[["id"],["self"]]]],[11,R[25],E,R[26],7,[[["id"],["self"]],["id"]]],[11,R[27],E,R[28],7,[[["id"],["self"]]]],[11,"is",E,R[164],7,[[["self"]],["bool"]]],[11,R[29],E,R[165],7,[[["self"]],[[T],[R[8]]]]],[11,R[3],R[140],R[167],8,[[[R[12]],[R[2]]]]],[11,R[6],E,R[168],8,[[["visit"],["self"]]]],[11,"fields",E,R[169],8,[[["self"]],["iter"]]],[11,R[2],E,R[170],8,[[["self"]],[R[2]]]],[11,"is",R[141],R[233],1,[[["self"]],["bool"]]],[11,R[29],E,R[234],1,[[["self"]],[[T],[R[8]]]]],[18,"ERROR",R[126],R[147],10,N],[18,"WARN",E,R[148],10,N],[18,"INFO",E,R[149],10,N],[18,"DEBUG",E,R[150],10,N],[18,"TRACE",E,R[151],10,N],[11,"new",E,R[197],11,[[["str"],["u32"],["level"],[R[8],["str"]],[R[8],["u32"]],[R[1]],["kind"],["str"]],[R[2]]]],[11,"fields",E,R[198],11,[[["self"]],["fieldset"]]],[11,"level",E,R[199],11,[[["self"]],["level"]]],[11,"name",E,R[200],11,[[["self"]],["str"]]],[11,"target",E,R[201],11,[[["self"]],["str"]]],[11,R[202],E,R[203],11,[[["self"]],[["str"],[R[8],["str"]]]]],[11,"file",E,R[204],11,[[["self"]],[["str"],[R[8],["str"]]]]],[11,"line",E,R[205],11,[[["self"]],[["u32"],[R[8],["u32"]]]]],[11,R[1],E,R[206],11,[[["self"]],[R[10]]]],[11,R[11],E,R[207],11,[[["self"]],["bool"]]],[11,"is_span",E,R[208],11,[[["self"]],["bool"]]],[11,R[1],R[142],R[9],12,[[["self"]],[R[10]]]],[11,"name",E,R[190],12,[[["self"]],["str"]]],[11,R[7],E,R[191],13,[[["q"],["self"]],[[R[8],[R[7]]],[R[7]]]]],[11,R[14],E,R[192],13,[[["self"],[R[7]]],["bool"]]],[11,"iter",E,R[193],13,[[["self"]],["iter"]]],[11,"len",E,R[194],13,[[["self"]],["usize"]]],[11,R[1],E,R[9],14,[[["self"]],[R[10]]]],[11,"new",R[144],R[13],18,[[[R[12]],[R[2]]],[R[19]]]],[11,R[215],E,R[216],18,[[[R[12]],[R[2]]],[R[19]]]],[11,R[217],E,R[13],18,[[[R[12]],["id"],[R[2]]],[R[19]]]],[11,R[2],E,R[218],18,[[["self"]],[R[2]]]],[11,"values",E,R[219],18,[[["self"]],[R[12]]]],[11,"is_root",E,R[220],18,[[["self"]],["bool"]]],[11,R[221],E,R[222],18,[[["self"]],["bool"]]],[11,"parent",E,R[223],18,[[["self"]],[[R[8],["id"]],["id"]]]],[11,R[6],E,R[224],18,[[["visit"],["self"]]]],[11,R[14],E,R[225],18,[[["self"],[R[7]]],["bool"]]],[11,R[15],E,R[226],18,[[["self"]],["bool"]]],[11,"from_u64",E,R[213],19,[[["u64"]],["id"]]],[11,"into_u64",E,R[214],19,[[["self"]],["u64"]]],[11,"new",E,R[227],20,[[[R[12]]],[R[6]]]],[11,R[6],E,R[228],20,[[["visit"],["self"]]]],[11,R[14],E,R[229],20,[[["self"],[R[7]]],["bool"]]],[11,R[15],E,R[230],20,[[["self"]],["bool"]]],[11,"never",R[141],R[235],22,[[],[R[5]]]],[11,R[236],E,R[237],22,[[],[R[5]]]],[11,"always",E,R[238],22,[[],[R[5]]]],[11,"is_never",E,R[239],22,[[["self"]],["bool"]]],[11,R[240],E,R[241],22,[[["self"]],["bool"]]],[11,R[242],E,R[243],22,[[["self"]],["bool"]]]],"p":[[8,"Value"],[8,R[57]],[8,"Visit"],[8,"AsField"],[3,R[152]],[8,"AsId"],[3,"Span"],[3,R[52]],[3,"Event"],[3,R[60]],[3,"Level"],[3,R[55]],[3,"Field"],[3,R[53]],[3,R[54]],[3,"Iter"],[3,R[61]],[3,R[62]],[3,R[56]],[3,"Id"],[3,"Record"],[3,"Entered"],[3,R[58]]]};
searchIndex[R[245]]={"doc":"A single-threaded executor which executes tasks on the…","i":[[3,R[260],R[245],"Executes tasks on the current thread",N,N],[3,R[261],E,R[735],N,N],[3,"Turn",E,"Returned by the `turn` function.",N,N],[3,"Entered",E,"A `CurrentThread` instance bound to a supplied execution…",N,N],[3,"RunError",E,"Error returned by the `run` function.",N,N],[3,R[262],E,"Error returned by the `run_timeout` function.",N,N],[3,R[264],E,"Error returned by the `turn` function.",N,N],[3,R[263],E,"Error returned by the `block_on` function.",N,N],[3,"Handle",E,R[736],N,N],[5,R[654],E,"Run the executor bootstrapping the execution with the…",N,[[["f"]],[R[37]]]],[5,"spawn",E,R[737],N,[[["f"]]]],[11,"has_polled",E,"`true` if any futures were polled at all and `false`…",0,[[["self"]],["bool"]]],[11,"new",E,"Create a new instance of `CurrentThread`.",1,[[],["self"]]],[11,"new_with_park",E,"Create a new instance of `CurrentThread` backed by the…",1,[[["p"]],["self"]]],[11,"is_idle",E,"Returns `true` if the executor is currently idle.",1,[[["self"]],["bool"]]],[11,"spawn",E,R[251],1,[[["self"],["f"]],["self"]]],[11,R[265],E,R[252],1,[[["self"],["f"]],[[R[246]],[R[37],[R[246]]]]]],[11,"run",E,R[247],1,[[["self"]],[[R[37],[R[253]]],[R[253]]]]],[11,R[254],E,R[247],1,[[["self"],[R[249]]],[[R[37],[R[248]]],[R[248]]]]],[11,"turn",E,R[255],1,[[["self"],[R[8],[R[249]]],[R[249]]],[["turn"],[R[37],["turn",R[250]]],[R[250]]]]],[11,"enter",E,"Bind `CurrentThread` instance with an execution context.",1,[[["self"],["enter"]],["entered"]]],[11,R[294],E,R[256],1,[[["self"]],["p"]]],[11,R[257],E,R[258],1,[[["self"]],["p"]]],[11,"handle",E,"Get a new handle to spawn futures on the executor",1,[[["self"]],["handle"]]],[11,"spawn",E,R[251],2,[[["self"],["f"]],["self"]]],[11,R[265],E,R[252],2,[[["self"],["f"]],[[R[246]],[R[37],[R[246]]]]]],[11,"run",E,R[247],2,[[["self"]],[[R[37],[R[253]]],[R[253]]]]],[11,R[254],E,R[247],2,[[["self"],[R[249]]],[[R[37],[R[248]]],[R[248]]]]],[11,"turn",E,R[255],2,[[["self"],[R[8],[R[249]]],[R[249]]],[["turn"],[R[37],["turn",R[250]]],[R[250]]]]],[11,R[294],E,R[256],2,[[["self"]],["p"]]],[11,R[257],E,R[258],2,[[["self"]],["p"]]],[11,"spawn",E,"Spawn a future onto the `CurrentThread` instance…",3,[[["self"],["f"]],[[R[112]],[R[37],[R[112]]]]]],[11,"status",E,R[113],3,[[["self"]],[[R[112]],[R[37],[R[112]]]]]],[11,R[781],E,R[738],4,[[],[R[259]]]],[11,R[739],E,R[740],4,[[["self"],["future"],["box",["future"]]],[[R[112]],[R[37],[R[112]]]]]],[11,"is_timeout",E,"Returns `true` if the error was caused by the operation…",5,[[["self"]],["bool"]]],[11,R[96],E,"Returns the error yielded by the future being blocked on",6,[[],[R[8]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,"into",E,E,1,[[],[U]]],[11,R[34],E,E,1,[[[U]],[R[37]]]],[11,R[43],E,E,1,[[["self"]],[T]]],[11,R[38],E,E,1,[[["self"]],[R[40]]]],[11,R[35],E,E,1,[[["self"]],[T]]],[11,R[36],E,E,1,[[],[R[37]]]],[11,"from",E,E,4,[[[T]],[T]]],[11,"into",E,E,4,[[],[U]]],[11,R[32],E,E,4,[[["self"]],[T]]],[11,R[33],E,E,4,[[[T],["self"]]]],[11,R[34],E,E,4,[[[U]],[R[37]]]],[11,R[43],E,E,4,[[["self"]],[T]]],[11,R[38],E,E,4,[[["self"]],[R[40]]]],[11,R[35],E,E,4,[[["self"]],[T]]],[11,R[36],E,E,4,[[],[R[37]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[34],E,E,0,[[[U]],[R[37]]]],[11,R[43],E,E,0,[[["self"]],[T]]],[11,R[38],E,E,0,[[["self"]],[R[40]]]],[11,R[35],E,E,0,[[["self"]],[T]]],[11,R[36],E,E,0,[[],[R[37]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,"into",E,E,2,[[],[U]]],[11,R[34],E,E,2,[[[U]],[R[37]]]],[11,R[43],E,E,2,[[["self"]],[T]]],[11,R[38],E,E,2,[[["self"]],[R[40]]]],[11,R[35],E,E,2,[[["self"]],[T]]],[11,R[36],E,E,2,[[],[R[37]]]],[11,"from",E,E,7,[[[T]],[T]]],[11,"into",E,E,7,[[],[U]]],[11,R[42],E,E,7,[[["self"]],[R[87]]]],[11,R[34],E,E,7,[[[U]],[R[37]]]],[11,R[43],E,E,7,[[["self"]],[T]]],[11,R[38],E,E,7,[[["self"]],[R[40]]]],[11,R[35],E,E,7,[[["self"]],[T]]],[11,R[36],E,E,7,[[],[R[37]]]],[11,"from",E,E,5,[[[T]],[T]]],[11,"into",E,E,5,[[],[U]]],[11,R[42],E,E,5,[[["self"]],[R[87]]]],[11,R[34],E,E,5,[[[U]],[R[37]]]],[11,R[43],E,E,5,[[["self"]],[T]]],[11,R[38],E,E,5,[[["self"]],[R[40]]]],[11,R[35],E,E,5,[[["self"]],[T]]],[11,R[36],E,E,5,[[],[R[37]]]],[11,"from",E,E,8,[[[T]],[T]]],[11,"into",E,E,8,[[],[U]]],[11,R[42],E,E,8,[[["self"]],[R[87]]]],[11,R[34],E,E,8,[[[U]],[R[37]]]],[11,R[43],E,E,8,[[["self"]],[T]]],[11,R[38],E,E,8,[[["self"]],[R[40]]]],[11,R[35],E,E,8,[[["self"]],[T]]],[11,R[36],E,E,8,[[],[R[37]]]],[11,"from",E,E,6,[[[T]],[T]]],[11,"into",E,E,6,[[],[U]]],[11,R[42],E,E,6,[[["self"]],[R[87]]]],[11,R[34],E,E,6,[[[U]],[R[37]]]],[11,R[43],E,E,6,[[["self"]],[T]]],[11,R[38],E,E,6,[[["self"]],[R[40]]]],[11,R[35],E,E,6,[[["self"]],[T]]],[11,R[36],E,E,6,[[],[R[37]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,"into",E,E,3,[[],[U]]],[11,R[32],E,E,3,[[["self"]],[T]]],[11,R[33],E,E,3,[[[T],["self"]]]],[11,R[34],E,E,3,[[[U]],[R[37]]]],[11,R[43],E,E,3,[[["self"]],[T]]],[11,R[38],E,E,3,[[["self"]],[R[40]]]],[11,R[35],E,E,3,[[["self"]],[T]]],[11,R[36],E,E,3,[[],[R[37]]]],[11,"clone",E,E,4,[[["self"]],[R[259]]]],[11,"clone",E,E,3,[[["self"]],["handle"]]],[11,"from",E,E,5,[[[R[111]]],["self"]]],[11,"from",E,E,6,[[[R[111]]],["self"]]],[11,"drop",E,E,1,[[["self"]]]],[11,"fmt",E,E,4,[[[R[50]],["self"]],[R[37]]]],[11,"fmt",E,E,0,[[[R[50]],["self"]],[R[37]]]],[11,"fmt",E,E,7,[[[R[50]],["self"]],[R[37]]]],[11,"fmt",E,E,5,[[[R[50]],["self"]],[R[37]]]],[11,"fmt",E,E,8,[[[R[50]],["self"]],[R[37]]]],[11,"fmt",E,E,6,[[[R[50]],["self"]],[R[37]]]],[11,"fmt",E,E,1,[[[R[50]],["self"]],[R[37]]]],[11,"fmt",E,E,2,[[[R[50]],["self"]],[R[37]]]],[11,"fmt",E,E,3,[[[R[50]],["self"]],[R[37]]]],[11,"fmt",E,E,7,[[[R[50]],["self"]],[R[37]]]],[11,"fmt",E,E,5,[[[R[50]],["self"]],[R[37]]]],[11,"fmt",E,E,8,[[[R[50]],["self"]],[R[37]]]],[11,"fmt",E,E,6,[[[R[50]],["self"]],[R[37]]]],[11,R[92],E,E,7,[[["self"]],["str"]]],[11,R[92],E,E,5,[[["self"]],["str"]]],[11,R[92],E,E,8,[[["self"]],["str"]]],[11,R[92],E,E,6,[[["self"]],["str"]]],[11,R[681],E,E,4,[[["self"],["f"]],[[R[37],[R[117]]],[R[117]]]]],[11,"spawn",E,E,1,[[["future"],["self"],["box",["future"]]],[[R[112]],[R[37],[R[112]]]]]],[11,"spawn",E,E,4,[[["future"],["self"],["box",["future"]]],[[R[112]],[R[37],[R[112]]]]]],[11,"spawn",E,E,1,[[["self"],[T]],[[R[112]],[R[37],[R[112]]]]]],[11,"spawn",E,E,4,[[["self"],["f"]],[[R[112]],[R[37],[R[112]]]]]]],"p":[[3,"Turn"],[3,R[260]],[3,"Entered"],[3,"Handle"],[3,R[261]],[3,R[262]],[3,R[263]],[3,"RunError"],[3,R[264]]]};
searchIndex[R[266]]={"doc":R[741],"i":[[3,"Delay",R[266],R[742],N,N],[3,R[268],E,R[267],N,N],[3,"Error",E,R[743],N,N],[3,R[744],E,R[745],N,N],[3,R[790],E,R[273],N,N],[5,R[125],E,R[277],N,[[["handle"],["enter"],["f"]],["r"]]],[5,"sleep",E,"Create a Future that completes in `duration` from now.",N,[[[R[249]]],["delay"]]],[0,"clock",E,R[746],N,N],[3,"Clock",R[287],R[276],N,N],[5,"now",E,R[747],N,[[],[R[274]]]],[5,R[125],E,"Set the default clock for the duration of the closure.",N,[[["enter"],["f"],["clock"]],["r"]]],[11,"new",E,"Return a new `Clock` instance that uses the current…",0,[[],["clock"]]],[11,R[278],E,"Return a new `Clock` instance that uses `now` as the…",0,[[["now"]],["clock"]]],[11,"system",E,"Return a new `Clock` instance that uses [`Instant::now`]…",0,[[],["clock"]]],[11,"now",E,"Returns an instant corresponding to \"now\" by using the…",0,[[["self"]],[R[274]]]],[8,"Now",E,"Returns [`Instant`] values representing the current…",N,N],[10,"now",E,"Returns an instant corresponding to \"now\".",1,[[["self"]],[R[274]]]],[0,R[748],R[266],R[267],N,N],[3,R[268],R[284],R[267],N,N],[3,"Expired",E,R[749],N,N],[3,"Key",E,R[750],N,N],[11,"new",E,R[751],2,[[],[R[269]]]],[11,R[752],E,R[753],2,[[["handle"],["usize"]],[R[269]]]],[11,R[754],E,R[755],2,[[["usize"]],[R[269]]]],[11,R[756],E,R[757],2,[[["self"],[R[274]],[T]],["key"]]],[11,"insert",E,R[758],2,[[["self"],[R[249]],[T]],["key"]]],[11,"remove",E,R[759],2,[[["self"],["key"]],["expired"]]],[11,"reset_at",E,R[270],2,[[["self"],["key"],[R[274]]]]],[11,"reset",E,R[270],2,[[["self"],["key"],[R[249]]]]],[11,"clear",E,R[760],2,[[["self"]]]],[11,"capacity",E,R[761],2,[[["self"]],["usize"]]],[11,"reserve",E,R[762],2,[[["self"],["usize"]]]],[11,R[15],E,R[763],2,[[["self"]],["bool"]]],[11,R[352],E,R[764],3,[[["self"]],[T]]],[11,R[353],E,R[765],3,[[["self"]],[T]]],[11,R[96],E,R[766],3,[[],[T]]],[0,R[637],R[266],R[271],N,N],[3,"Throttle",R[288],R[271],N,N],[3,R[290],E,"Either the error of the underlying stream, or an error…",N,N],[11,"new",E,R[271],4,[[[R[249]],[T]],["self"]]],[11,R[352],E,R[686],4,[[["self"]],[T]]],[11,R[353],E,R[687],4,[[["self"]],[T]]],[11,R[96],E,R[688],4,[[],[T]]],[11,"from_stream_err",E,"Creates a new `ThrottleError` from the given stream error.",5,[[[T]],["self"]]],[11,"from_timer_err",E,"Creates a new `ThrottleError` from the given tokio timer…",5,[[["error"]],["self"]]],[11,"get_stream_error",E,"Attempts to get the underlying stream error, if it is…",5,[[["self"]],[[R[8]],[T]]]],[11,"get_timer_error",E,"Attempts to get the underlying timer error, if it is…",5,[[["self"]],[["error"],[R[8],["error"]]]]],[11,"into_stream_error",E,"Attempts to extract the underlying stream error, if it is…",5,[[],[R[8]]]],[11,"into_timer_error",E,"Attempts to extract the underlying timer error, if it is…",5,[[],[["error"],[R[8],["error"]]]]],[11,"is_stream_error",E,R[272],5,[[["self"]],["bool"]]],[11,"is_timer_error",E,R[272],5,[[["self"]],["bool"]]],[0,R[635],R[266],R[767],N,N],[3,R[790],R[285],R[273],N,N],[3,"Error",E,R[768],N,N],[11,"new",E,R[769],6,[[[R[249]],[T]],[R[635]]]],[11,R[352],E,R[770],6,[[["self"]],[T]]],[11,R[353],E,R[771],6,[[["self"]],[T]]],[11,R[96],E,R[772],6,[[],[T]]],[11,"new_at",E,R[773],6,[[[R[274]],[T]],[R[635]]]],[11,"inner",E,R[774],7,[[[T]],["error"]]],[11,"is_inner",E,R[275],7,[[["self"]],["bool"]]],[11,R[96],E,R[775],7,[[],[R[8]]]],[11,"elapsed",E,R[776],7,[[],["error"]]],[11,R[280],E,R[275],7,[[["self"]],["bool"]]],[11,"timer",E,R[777],7,[[["error"]],["error"]]],[11,"is_timer",E,R[778],7,[[["self"]],["bool"]]],[11,R[779],E,R[780],7,[[],[[R[8],["error"]],["error"]]]],[0,"timer",R[266],"Timer implementation.",N,N],[3,"Handle",R[289],"Handle to timer instance.",N,N],[3,"SystemNow",E,R[276],N,N],[3,"Timer",E,"Timer implementation that drives [`Delay`], [`Interval`],…",N,N],[3,"Turn",E,"Return value from the `turn` method on `Timer`.",N,N],[5,R[125],E,R[277],N,[[["handle"],["enter"],["f"]],["r"]]],[11,R[781],E,"Returns a handle to the current timer.",8,[[],["handle"]]],[11,"delay",E,"Create a `Delay` driven by this handle's associated `Timer`.",8,[[["self"],[R[274]]],["delay"]]],[11,R[635],E,"Create a `Timeout` driven by this handle's associated…",8,[[["self"],[R[274]],[T]],[R[635]]]],[11,R[283],E,R[282],8,[[["self"],[R[249]],[R[274]]],[R[283]]]],[11,"new",E,R[279],9,[[[T]],["self"]]],[11,R[294],E,R[256],9,[[["self"]],[T]]],[11,R[257],E,R[258],9,[[["self"]],[T]]],[11,R[278],E,R[279],9,[[["n"],[T]],["self"]]],[11,"handle",E,"Returns a handle to the timer.",9,[[["self"]],["handle"]]],[11,"turn",E,"Performs one iteration of the timer loop.",9,[[["self"],[R[8],[R[249]]],[R[249]]],[["turn"],[R[37],["turn"]]]]],[11,"new",R[266],R[782],10,[[[R[274]]],["delay"]]],[11,"deadline",E,R[783],10,[[["self"]],[R[274]]]],[11,R[280],E,R[784],10,[[["self"]],["bool"]]],[11,"reset",E,R[785],10,[[["self"],[R[274]]]]],[11,R[325],E,R[786],11,[[],["error"]]],[11,R[292],E,R[281],11,[[["self"]],["bool"]]],[11,R[291],E,R[787],11,[[],["error"]]],[11,R[293],E,R[281],11,[[["self"]],["bool"]]],[11,"new",E,R[282],12,[[[R[249]],[R[274]]],[R[283]]]],[11,R[788],E,R[789],12,[[[R[249]]],[R[283]]]],[11,"from",E,E,10,[[[T]],[T]]],[11,"into",E,E,10,[[],[U]]],[11,R[34],E,E,10,[[[U]],[R[37]]]],[11,R[43],E,E,10,[[["self"]],[T]]],[11,R[38],E,E,10,[[["self"]],[R[40]]]],[11,R[35],E,E,10,[[["self"]],[T]]],[11,R[36],E,E,10,[[],[R[37]]]],[11,R[286],E,E,10,[[],["f"]]],[11,"from",R[284],E,2,[[[T]],[T]]],[11,"into",E,E,2,[[],[U]]],[11,R[34],E,E,2,[[[U]],[R[37]]]],[11,R[43],E,E,2,[[["self"]],[T]]],[11,R[38],E,E,2,[[["self"]],[R[40]]]],[11,R[35],E,E,2,[[["self"]],[T]]],[11,R[36],E,E,2,[[],[R[37]]]],[11,"from",R[266],E,11,[[[T]],[T]]],[11,"into",E,E,11,[[],[U]]],[11,R[42],E,E,11,[[["self"]],[R[87]]]],[11,R[34],E,E,11,[[[U]],[R[37]]]],[11,R[43],E,E,11,[[["self"]],[T]]],[11,R[38],E,E,11,[[["self"]],[R[40]]]],[11,R[35],E,E,11,[[["self"]],[T]]],[11,R[36],E,E,11,[[],[R[37]]]],[11,"from",E,E,12,[[[T]],[T]]],[11,"into",E,E,12,[[],[U]]],[11,R[34],E,E,12,[[[U]],[R[37]]]],[11,R[43],E,E,12,[[["self"]],[T]]],[11,R[38],E,E,12,[[["self"]],[R[40]]]],[11,R[35],E,E,12,[[["self"]],[T]]],[11,R[36],E,E,12,[[],[R[37]]]],[11,"from",R[285],E,6,[[[T]],[T]]],[11,"into",E,E,6,[[],[U]]],[11,R[34],E,E,6,[[[U]],[R[37]]]],[11,R[43],E,E,6,[[["self"]],[T]]],[11,R[38],E,E,6,[[["self"]],[R[40]]]],[11,R[35],E,E,6,[[["self"]],[T]]],[11,R[36],E,E,6,[[],[R[37]]]],[11,R[286],E,E,6,[[],["f"]]],[11,"from",R[287],E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[32],E,E,0,[[["self"]],[T]]],[11,R[33],E,E,0,[[[T],["self"]]]],[11,R[34],E,E,0,[[[U]],[R[37]]]],[11,R[43],E,E,0,[[["self"]],[T]]],[11,R[38],E,E,0,[[["self"]],[R[40]]]],[11,R[35],E,E,0,[[["self"]],[T]]],[11,R[36],E,E,0,[[],[R[37]]]],[11,"from",R[284],E,3,[[[T]],[T]]],[11,"into",E,E,3,[[],[U]]],[11,R[34],E,E,3,[[[U]],[R[37]]]],[11,R[43],E,E,3,[[["self"]],[T]]],[11,R[38],E,E,3,[[["self"]],[R[40]]]],[11,R[35],E,E,3,[[["self"]],[T]]],[11,R[36],E,E,3,[[],[R[37]]]],[11,"from",E,E,13,[[[T]],[T]]],[11,"into",E,E,13,[[],[U]]],[11,R[32],E,E,13,[[["self"]],[T]]],[11,R[33],E,E,13,[[[T],["self"]]]],[11,R[34],E,E,13,[[[U]],[R[37]]]],[11,R[43],E,E,13,[[["self"]],[T]]],[11,R[38],E,E,13,[[["self"]],[R[40]]]],[11,R[35],E,E,13,[[["self"]],[T]]],[11,R[36],E,E,13,[[],[R[37]]]],[11,"from",R[288],E,4,[[[T]],[T]]],[11,"into",E,E,4,[[],[U]]],[11,R[34],E,E,4,[[[U]],[R[37]]]],[11,R[43],E,E,4,[[["self"]],[T]]],[11,R[38],E,E,4,[[["self"]],[R[40]]]],[11,R[35],E,E,4,[[["self"]],[T]]],[11,R[36],E,E,4,[[],[R[37]]]],[11,"from",E,E,5,[[[T]],[T]]],[11,"into",E,E,5,[[],[U]]],[11,R[42],E,E,5,[[["self"]],[R[87]]]],[11,R[34],E,E,5,[[[U]],[R[37]]]],[11,R[43],E,E,5,[[["self"]],[T]]],[11,R[38],E,E,5,[[["self"]],[R[40]]]],[11,R[35],E,E,5,[[["self"]],[T]]],[11,R[36],E,E,5,[[],[R[37]]]],[11,"from",R[285],E,7,[[[T]],[T]]],[11,"into",E,E,7,[[],[U]]],[11,R[42],E,E,7,[[["self"]],[R[87]]]],[11,R[34],E,E,7,[[[U]],[R[37]]]],[11,R[43],E,E,7,[[["self"]],[T]]],[11,R[38],E,E,7,[[["self"]],[R[40]]]],[11,R[35],E,E,7,[[["self"]],[T]]],[11,R[36],E,E,7,[[],[R[37]]]],[11,"from",R[289],E,8,[[[T]],[T]]],[11,"into",E,E,8,[[],[U]]],[11,R[32],E,E,8,[[["self"]],[T]]],[11,R[33],E,E,8,[[[T],["self"]]]],[11,R[34],E,E,8,[[[U]],[R[37]]]],[11,R[43],E,E,8,[[["self"]],[T]]],[11,R[38],E,E,8,[[["self"]],[R[40]]]],[11,R[35],E,E,8,[[["self"]],[T]]],[11,R[36],E,E,8,[[],[R[37]]]],[11,"from",E,E,9,[[[T]],[T]]],[11,"into",E,E,9,[[],[U]]],[11,R[34],E,E,9,[[[U]],[R[37]]]],[11,R[43],E,E,9,[[["self"]],[T]]],[11,R[38],E,E,9,[[["self"]],[R[40]]]],[11,R[35],E,E,9,[[["self"]],[T]]],[11,R[36],E,E,9,[[],[R[37]]]],[11,"from",E,E,14,[[[T]],[T]]],[11,"into",E,E,14,[[],[U]]],[11,R[34],E,E,14,[[[U]],[R[37]]]],[11,R[43],E,E,14,[[["self"]],[T]]],[11,R[38],E,E,14,[[["self"]],[R[40]]]],[11,R[35],E,E,14,[[["self"]],[T]]],[11,R[36],E,E,14,[[],[R[37]]]],[11,"clone",R[287],E,0,[[["self"]],["clock"]]],[11,"clone",R[284],E,13,[[["self"]],["key"]]],[11,"clone",R[289],E,8,[[["self"]],["handle"]]],[11,"drop",E,E,9,[[["self"]]]],[11,R[295],R[287],E,0,[[],["clock"]]],[11,R[295],R[284],E,2,[[],[R[269]]]],[11,R[295],R[289],E,8,[[],["handle"]]],[11,R[295],E,E,9,[[],["self"]]],[11,"fmt",R[287],E,0,[[[R[50]],["self"]],[R[37]]]],[11,"fmt",R[284],E,2,[[[R[50]],["self"]],[R[37]]]],[11,"fmt",E,E,3,[[[R[50]],["self"]],[R[37]]]],[11,"fmt",E,E,13,[[[R[50]],["self"]],[R[37]]]],[11,"fmt",R[288],E,4,[[[R[50]],["self"]],[R[37]]]],[11,"fmt",E,E,5,[[[R[50]],["self"]],[R[37]]]],[11,"fmt",R[285],E,6,[[[R[50]],["self"]],[R[37]]]],[11,"fmt",E,E,7,[[[R[50]],["self"]],[R[37]]]],[11,"fmt",R[289],E,8,[[[R[50]],["self"]],[R[37]]]],[11,"fmt",E,E,9,[[[R[50]],["self"]],[R[37]]]],[11,"fmt",E,E,14,[[[R[50]],["self"]],[R[37]]]],[11,"fmt",R[266],E,10,[[[R[50]],["self"]],[R[37]]]],[11,"fmt",E,E,11,[[[R[50]],["self"]],[R[37]]]],[11,"fmt",E,E,12,[[[R[50]],["self"]],[R[37]]]],[11,"fmt",R[288],E,5,[[["self"],[R[50]]],["fmtresult"]]],[11,"fmt",R[285],E,7,[[[R[50]],["self"]],[R[37]]]],[11,"fmt",R[266],E,11,[[[R[50]],["self"]],[R[37]]]],[11,R[92],R[288],E,5,[[["self"]],["str"]]],[11,"cause",E,E,5,[[["self"]],[[R[8],["stderror"]],["stderror"]]]],[11,R[92],R[285],E,7,[[["self"]],["str"]]],[11,R[92],R[266],E,11,[[["self"]],["str"]]],[11,"poll",R[285],E,6,[[["self"]],["poll"]]],[11,"poll",R[266],E,10,[[["self"]],["poll"]]],[11,"poll",R[284],E,2,[[["self"]],[["error"],["poll",[R[8],"error"]],[R[8]]]]],[11,"poll",R[288],E,4,[[["self"]],[["poll",[R[8]]],[R[8]]]]],[11,"poll",R[285],E,6,[[["self"]],[["poll",[R[8]]],[R[8]]]]],[11,"poll",R[266],E,12,[[["self"]],[["poll",[R[8]]],[R[8]]]]],[11,"unpark",R[289],E,9,[[["self"]]]],[11,"park",E,E,9,[[["self"]],[R[37]]]],[11,R[115],E,E,9,[[["self"],[R[249]]],[R[37]]]]],"p":[[3,"Clock"],[8,"Now"],[3,R[268]],[3,"Expired"],[3,"Throttle"],[3,R[290]],[3,R[790]],[3,"Error"],[3,"Handle"],[3,"Timer"],[3,"Delay"],[3,"Error"],[3,R[744]],[3,"Key"],[3,"Turn"]]};
searchIndex[R[296]]={"doc":"Tokio and Futures based testing utilites","i":[[0,"clock",R[296],"A mocked clock for use with `tokio_timer` based futures.",N,N],[3,R[300],R[298],"Mock clock for use with `tokio-timer` futures.",N,N],[3,"Handle",E,"A handle to the `MockClock`.",N,N],[5,"mock",E,R[297],N,[[["f"]],["r"]]],[5,"mock_at",E,R[297],N,[[["f"],[R[274]]],["r"]]],[11,"new",E,"Create a new `MockClock` with the current time.",0,[[],["self"]]],[11,"with_duration",E,"Create a `MockClock` with its current time at a duration…",0,[[[R[249]]],["self"]]],[11,"with_instant",E,"Create a `MockClock` that sets its current time as the…",0,[[[R[274]]],["self"]]],[11,"enter",E,"Enter the `MockClock` context.",0,[[["self"],["f"]],["r"]]],[11,"turn",E,"Turn the internal timer and mock park for the provided…",1,[[["self"],[R[8],[R[249]]],[R[249]]]]],[11,"advance",E,"Advance the `MockClock` by the provided duration.",1,[[["self"],[R[249]]]]],[11,"now",E,"Get the currently mocked time",1,[[["self"]],[R[274]]]],[0,"task",R[296],"Futures task based helpers",N,N],[3,"MockTask",R[299],"Mock task",N,N],[11,"new",E,"Create a new mock task",2,[[],["self"]]],[11,"enter",E,"Run a closure from the context of the task.",2,[[["self"],["f"]],["r"]]],[11,"is_notified",E,"Returns `true` if the inner future has received a…",2,[[["self"]],["bool"]]],[11,"notifier_ref_count",E,"Returns the number of references to the task notifier",2,[[["self"]],["usize"]]],[14,"assert_ready",R[296],"Assert if a poll is ready",N,N],[14,"assert_not_ready",E,"Asset if the poll is not ready",N,N],[14,"assert_ready_eq",E,"Assert if a poll is ready and check for equality on the…",N,N],[14,"assert_elapsed",E,"Assert if the deadline has passed",N,N],[11,"from",R[298],E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[34],E,E,0,[[[U]],[R[37]]]],[11,R[43],E,E,0,[[["self"]],[T]]],[11,R[38],E,E,0,[[["self"]],[R[40]]]],[11,R[35],E,E,0,[[["self"]],[T]]],[11,R[36],E,E,0,[[],[R[37]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,"into",E,E,1,[[],[U]]],[11,R[34],E,E,1,[[[U]],[R[37]]]],[11,R[43],E,E,1,[[["self"]],[T]]],[11,R[38],E,E,1,[[["self"]],[R[40]]]],[11,R[35],E,E,1,[[["self"]],[T]]],[11,R[36],E,E,1,[[],[R[37]]]],[11,"from",R[299],E,2,[[[T]],[T]]],[11,"into",E,E,2,[[],[U]]],[11,R[34],E,E,2,[[[U]],[R[37]]]],[11,R[43],E,E,2,[[["self"]],[T]]],[11,R[38],E,E,2,[[["self"]],[R[40]]]],[11,R[35],E,E,2,[[["self"]],[T]]],[11,R[36],E,E,2,[[],[R[37]]]],[11,"fmt",R[298],E,0,[[[R[50]],["self"]],[R[37]]]],[11,"fmt",E,E,1,[[[R[50]],["self"]],[R[37]]]],[11,"fmt",R[299],E,2,[[[R[50]],["self"]],[R[37]]]]],"p":[[3,R[300]],[3,"Handle"],[3,"MockTask"]]};
searchIndex[R[301]]={"doc":"Asynchronous stream of bytes.","i":[[3,"SizeHint",R[301],"A `BufStream` size hint",N,N],[11,"new",E,"Returns a new `SizeHint` with default values",0,[[],[R[303]]]],[11,"lower",E,"Returns the lower bound of data that the `BufStream` will…",0,[[["self"]],["u64"]]],[11,"set_lower",E,"Set the value of the `lower` hint.",0,[[["self"],["u64"]]]],[11,"upper",E,"Returns the upper bound of data the `BufStream` will yield…",0,[[["self"]],[[R[8],["u64"]],["u64"]]]],[11,"set_upper",E,"Set the value of the `upper` hint value.",0,[[["self"],["u64"]]]],[0,"util",E,"Types and utilities for working with `BufStream`.",N,N],[3,"Chain",R[302],"A buf stream that sequences two buf streams together.",N,N],[3,R[793],E,"Consumes a buf stream, collecting the data into a single…",N,N],[3,"Limit",E,"Limits the stream to a maximum amount of data.",N,N],[3,R[316],E,"Converts a `BufStream` into a `Stream`.",N,N],[5,"iter",E,"Converts an `Iterator` into a `BufStream` which is always…",N,[[["i"]],["iter"]]],[5,"stream",E,"Converts a `Stream` of `Buf` types into a `BufStream`.",N,[[[T]],["fromstream"]]],[11,"new",E,"Create a new `Stream` from the provided `BufStream`.",1,[[[T]],["self"]]],[11,R[352],E,"Get a reference to the inner `BufStream`.",1,[[["self"]],[T]]],[11,R[353],E,"Get a mutable reference to the inner `BufStream`",1,[[["self"]],[T]]],[11,R[96],E,"Get the inner `BufStream`.",1,[[],[T]]],[0,"error",E,"Error types",N,N],[3,R[319],R[312],"Errors returned from `Collect` future.",N,N],[3,R[321],E,"Error returned from collecting into a `Bytes`",N,N],[3,R[320],E,"Error returned from collecting into a `Vec<u8>`",N,N],[3,R[322],E,"Errors returned from `Limit`.",N,N],[8,R[317],R[302],"Conversion from a `BufStream`.",N,N],[16,R[701],E,"Type that is used to build `Self` while the `BufStream` is…",2,N],[16,"Error",E,"Error that might happen on conversion.",2,N],[10,R[819],E,"Create a new, empty, builder. The provided `hint` can be…",2,[[[R[303]]]]],[10,"extend",E,"Extend the builder with the `Buf`.",2,[[[T],[R[303]]],[R[37]]]],[10,"build",E,"Finalize the building of `Self`.",2,[[],[R[37]]]],[8,R[304],E,R[305],N,N],[11,"chain",E,R[306],3,[[[T]],["chain"]]],[11,R[791],E,R[307],3,[[],[R[791]]]],[11,"limit",E,R[308],3,[[["u64"]],["limit"]]],[11,R[309],E,R[310],3,[[],[R[311]]]],[8,R[304],R[301],R[305],N,N],[11,"chain",E,R[306],3,[[[T]],["chain"]]],[11,R[791],E,R[307],3,[[],[R[791]]]],[11,"limit",E,R[308],3,[[["u64"]],["limit"]]],[11,R[309],E,R[310],3,[[],[R[311]]]],[8,R[318],E,"An asynchronous stream of bytes.",N,N],[16,"Item",E,"Values yielded by the `BufStream`.",4,N],[16,"Error",E,"The error type this `BufStream` might generate.",4,N],[10,R[313],E,"Attempt to pull out the next buffer of this stream,…",4,[[["self"]],[[R[8]],["poll",[R[8]]]]]],[11,R[792],E,"Returns the bounds on the remaining length of the stream.",4,[[["self"]],[R[303]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[32],E,E,0,[[["self"]],[T]]],[11,R[33],E,E,0,[[[T],["self"]]]],[11,R[34],E,E,0,[[[U]],[R[37]]]],[11,R[43],E,E,0,[[["self"]],[T]]],[11,R[38],E,E,0,[[["self"]],[R[40]]]],[11,R[35],E,E,0,[[["self"]],[T]]],[11,R[36],E,E,0,[[],[R[37]]]],[11,"from",R[302],E,5,[[[T]],[T]]],[11,"into",E,E,5,[[],[U]]],[11,R[34],E,E,5,[[[U]],[R[37]]]],[11,R[43],E,E,5,[[["self"]],[T]]],[11,R[38],E,E,5,[[["self"]],[R[40]]]],[11,R[35],E,E,5,[[["self"]],[T]]],[11,R[36],E,E,5,[[],[R[37]]]],[11,"from",E,E,6,[[[T]],[T]]],[11,"into",E,E,6,[[],[U]]],[11,R[34],E,E,6,[[[U]],[R[37]]]],[11,R[43],E,E,6,[[["self"]],[T]]],[11,R[38],E,E,6,[[["self"]],[R[40]]]],[11,R[35],E,E,6,[[["self"]],[T]]],[11,R[36],E,E,6,[[],[R[37]]]],[11,R[286],E,E,6,[[],["f"]]],[11,"from",E,E,7,[[[T]],[T]]],[11,"into",E,E,7,[[],[U]]],[11,R[34],E,E,7,[[[U]],[R[37]]]],[11,R[43],E,E,7,[[["self"]],[T]]],[11,R[38],E,E,7,[[["self"]],[R[40]]]],[11,R[35],E,E,7,[[["self"]],[T]]],[11,R[36],E,E,7,[[],[R[37]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,"into",E,E,1,[[],[U]]],[11,R[34],E,E,1,[[[U]],[R[37]]]],[11,R[43],E,E,1,[[["self"]],[T]]],[11,R[38],E,E,1,[[["self"]],[R[40]]]],[11,R[35],E,E,1,[[["self"]],[T]]],[11,R[36],E,E,1,[[],[R[37]]]],[11,"from",R[312],E,8,[[[T]],[T]]],[11,"into",E,E,8,[[],[U]]],[11,R[34],E,E,8,[[[U]],[R[37]]]],[11,R[43],E,E,8,[[["self"]],[T]]],[11,R[38],E,E,8,[[["self"]],[R[40]]]],[11,R[35],E,E,8,[[["self"]],[T]]],[11,R[36],E,E,8,[[],[R[37]]]],[11,"from",E,E,9,[[[T]],[T]]],[11,"into",E,E,9,[[],[U]]],[11,R[42],E,E,9,[[["self"]],[R[87]]]],[11,R[34],E,E,9,[[[U]],[R[37]]]],[11,R[43],E,E,9,[[["self"]],[T]]],[11,R[38],E,E,9,[[["self"]],[R[40]]]],[11,R[35],E,E,9,[[["self"]],[T]]],[11,R[36],E,E,9,[[],[R[37]]]],[11,"from",E,E,10,[[[T]],[T]]],[11,"into",E,E,10,[[],[U]]],[11,R[42],E,E,10,[[["self"]],[R[87]]]],[11,R[34],E,E,10,[[[U]],[R[37]]]],[11,R[43],E,E,10,[[["self"]],[T]]],[11,R[38],E,E,10,[[["self"]],[R[40]]]],[11,R[35],E,E,10,[[["self"]],[T]]],[11,R[36],E,E,10,[[],[R[37]]]],[11,"from",E,E,11,[[[T]],[T]]],[11,"into",E,E,11,[[],[U]]],[11,R[34],E,E,11,[[[U]],[R[37]]]],[11,R[43],E,E,11,[[["self"]],[T]]],[11,R[38],E,E,11,[[["self"]],[R[40]]]],[11,R[35],E,E,11,[[["self"]],[T]]],[11,R[36],E,E,11,[[],[R[37]]]],[11,R[313],R[302],E,5,[[["self"]],[[R[8]],["poll",[R[8]]]]]],[11,R[313],E,E,7,[[["self"]],[[R[8]],["poll",[R[8]]]]]],[11,"clone",R[301],E,0,[[["self"]],[R[303]]]],[11,R[295],E,E,0,[[],[R[303]]]],[11,"fmt",E,E,0,[[[R[50]],["self"]],[R[37]]]],[11,"fmt",R[302],E,5,[[[R[50]],["self"]],[R[37]]]],[11,"fmt",E,E,6,[[[R[50]],["self"]],[R[37]]]],[11,"fmt",R[312],E,8,[[[R[50]],["self"]],[R[37]]]],[11,"fmt",E,E,9,[[[R[50]],["self"]],[R[37]]]],[11,"fmt",E,E,10,[[[R[50]],["self"]],[R[37]]]],[11,"fmt",R[302],E,7,[[[R[50]],["self"]],[R[37]]]],[11,"fmt",R[312],E,11,[[[R[50]],["self"]],[R[37]]]],[11,"fmt",R[302],E,1,[[[R[50]],["self"]],[R[37]]]],[11,"fmt",R[312],E,9,[[[R[50]],["self"]],[R[37]]]],[11,"fmt",E,E,10,[[[R[50]],["self"]],[R[37]]]],[11,R[92],E,E,9,[[["self"]],["str"]]],[11,R[92],E,E,10,[[["self"]],["str"]]],[11,"poll",R[302],E,6,[[["self"]],["poll"]]],[11,"poll",E,E,1,[[["self"]],[["poll",[R[8]]],[R[8]]]]],[11,R[314],R[312],R[315],8,[[["self"]],["bool"]]],[11,"is_collect_err",E,"Returns `true` if the error happened while collecting the…",8,[[["self"]],["bool"]]],[11,R[314],E,R[315],11,[[["self"]],["bool"]]],[11,"is_limit_err",E,"Returns `true` if the stream reached its limit.",11,[[["self"]],["bool"]]]],"p":[[3,"SizeHint"],[3,R[316]],[8,R[317]],[8,R[304]],[8,R[318]],[3,"Chain"],[3,R[793]],[3,"Limit"],[3,R[319]],[3,R[320]],[3,R[321]],[3,R[322]]]};
searchIndex[R[324]]={"doc":"Core I/O traits and combinators when working with Tokio.","i":[[0,"io",R[324],"I/O conveniences when working with primitives in…",N,N],[3,"Copy",R[326],R[794],N,N],[3,"Flush",E,R[795],N,N],[3,"Read",E,"A future which can be used to easily read available number…",N,N],[3,R[349],E,R[796],N,N],[3,R[350],E,R[797],N,N],[3,R[351],E,R[798],N,N],[3,R[365],E,R[799],N,N],[3,R[800],E,R[445],N,N],[3,R[345],E,"A simple wrapper type which allows types that only…",N,N],[3,"Lines",E,R[801],N,N],[3,R[802],E,R[803],N,N],[3,R[346],E,R[804],N,N],[3,"Window",E,"A owned window around an underlying buffer.",N,N],[5,"copy",E,R[805],N,[[["w"],["r"]],["copy"]]],[5,"flush",E,R[806],N,[[["a"]],["flush"]]],[5,"read",E,R[807],N,[[[T],["r"]],["read"]]],[5,R[331],E,R[808],N,[[["a"],[T]],[R[809]]]],[5,R[330],E,R[323],N,[[["a"],["u8"],["vec",["u8"]]],[R[810]]]],[5,R[811],E,R[323],N,[[["a"],["u8"],["vec",["u8"]]],[R[812]]]],[5,R[325],E,R[813],N,[[["a"]],[R[325]]]],[5,R[329],E,R[446],N,[[["a"],[T]],["writeall"]]],[5,"lines",E,R[814],N,[[["a"]],["lines"]]],[11,"new",E,"Creates a new `AllowStdIo` from an existing IO object.",0,[[[T]],["self"]]],[11,R[352],E,"Returns a reference to the contained IO object.",0,[[["self"]],[T]]],[11,R[353],E,"Returns a mutable reference to the contained IO object.",0,[[["self"]],[T]]],[11,R[96],E,"Consumes self and returns the contained IO object.",0,[[],[T]]],[11,R[96],E,R[815],1,[[],["a"]]],[11,"unsplit",E,R[816],2,[[[R[817]]],[T]]],[11,"unsplit",E,R[818],3,[[["readhalf"]],[T]]],[11,"new",E,"Creates a new window around the buffer `t` defaulting to…",4,[[[T]],["window"]]],[11,R[352],E,"Gets a shared reference to the underlying buffer inside of…",4,[[["self"]],[T]]],[11,R[353],E,"Gets a mutable reference to the underlying buffer inside…",4,[[["self"]],[T]]],[11,R[96],E,"Consumes this `Window`, returning the underlying buffer.",4,[[],[T]]],[11,"start",E,"Returns the starting index of this window into the…",4,[[["self"]],["usize"]]],[11,"end",E,"Returns the end index of this window into the underlying…",4,[[["self"]],["usize"]]],[11,"set_start",E,"Changes the starting index of this window to the index…",4,[[["self"],["usize"]],["window"]]],[11,"set_end",E,"Changes the end index of this window to the index specified.",4,[[["self"],["usize"]],["window"]]],[6,"IoFuture",R[324],"A convenience typedef around a `Future` whose error…",N,N],[6,"IoStream",E,"A convenience typedef around a `Stream` whose error…",N,N],[8,R[347],E,R[626],N,N],[11,R[332],E,R[333],5,[[["self"]],["bool"]]],[11,R[334],E,R[335],5,[[["self"]],[["poll",["usize","error"]],["error"],["usize"]]]],[11,R[336],E,R[337],5,[[["b"],["self"]],[["poll",["usize","error"]],["error"],["usize"]]]],[11,"framed",E,R[338],5,[[[R[867]],[R[863]]],[["framed"],[R[867]],[R[863]]]]],[11,"split",E,R[339],5,[[]]],[8,R[348],E,R[627],N,N],[11,R[340],E,R[341],6,[[["self"]],[["poll",["usize","error"]],["error"],["usize"]]]],[11,R[342],E,R[343],6,[[["self"]],[["poll",["error"]],["error"]]]],[10,R[325],E,R[628],6,[[["self"]],[["poll",["error"]],["error"]]]],[11,R[327],E,R[344],6,[[["b"],["self"]],[["poll",["usize","error"]],["error"],["usize"]]]],[14,"try_nb",E,"A convenience macro for working with `io::Result<T>` from…",N,N],[11,"from",R[326],E,7,[[[T]],[T]]],[11,"into",E,E,7,[[],[U]]],[11,R[34],E,E,7,[[[U]],[R[37]]]],[11,R[43],E,E,7,[[["self"]],[T]]],[11,R[38],E,E,7,[[["self"]],[R[40]]]],[11,R[35],E,E,7,[[["self"]],[T]]],[11,R[36],E,E,7,[[],[R[37]]]],[11,R[286],E,E,7,[[],["f"]]],[11,"from",E,E,8,[[[T]],[T]]],[11,"into",E,E,8,[[],[U]]],[11,R[34],E,E,8,[[[U]],[R[37]]]],[11,R[43],E,E,8,[[["self"]],[T]]],[11,R[38],E,E,8,[[["self"]],[R[40]]]],[11,R[35],E,E,8,[[["self"]],[T]]],[11,R[36],E,E,8,[[],[R[37]]]],[11,R[286],E,E,8,[[],["f"]]],[11,"from",E,E,9,[[[T]],[T]]],[11,"into",E,E,9,[[],[U]]],[11,R[34],E,E,9,[[[U]],[R[37]]]],[11,R[43],E,E,9,[[["self"]],[T]]],[11,R[38],E,E,9,[[["self"]],[R[40]]]],[11,R[35],E,E,9,[[["self"]],[T]]],[11,R[36],E,E,9,[[],[R[37]]]],[11,R[286],E,E,9,[[],["f"]]],[11,"from",E,E,10,[[[T]],[T]]],[11,"into",E,E,10,[[],[U]]],[11,R[34],E,E,10,[[[U]],[R[37]]]],[11,R[43],E,E,10,[[["self"]],[T]]],[11,R[38],E,E,10,[[["self"]],[R[40]]]],[11,R[35],E,E,10,[[["self"]],[T]]],[11,R[36],E,E,10,[[],[R[37]]]],[11,R[286],E,E,10,[[],["f"]]],[11,"from",E,E,11,[[[T]],[T]]],[11,"into",E,E,11,[[],[U]]],[11,R[34],E,E,11,[[[U]],[R[37]]]],[11,R[43],E,E,11,[[["self"]],[T]]],[11,R[38],E,E,11,[[["self"]],[R[40]]]],[11,R[35],E,E,11,[[["self"]],[T]]],[11,R[36],E,E,11,[[],[R[37]]]],[11,R[286],E,E,11,[[],["f"]]],[11,"from",E,E,12,[[[T]],[T]]],[11,"into",E,E,12,[[],[U]]],[11,R[34],E,E,12,[[[U]],[R[37]]]],[11,R[43],E,E,12,[[["self"]],[T]]],[11,R[38],E,E,12,[[["self"]],[R[40]]]],[11,R[35],E,E,12,[[["self"]],[T]]],[11,R[36],E,E,12,[[],[R[37]]]],[11,R[286],E,E,12,[[],["f"]]],[11,"from",E,E,13,[[[T]],[T]]],[11,"into",E,E,13,[[],[U]]],[11,R[34],E,E,13,[[[U]],[R[37]]]],[11,R[43],E,E,13,[[["self"]],[T]]],[11,R[38],E,E,13,[[["self"]],[R[40]]]],[11,R[35],E,E,13,[[["self"]],[T]]],[11,R[36],E,E,13,[[],[R[37]]]],[11,R[286],E,E,13,[[],["f"]]],[11,"from",E,E,14,[[[T]],[T]]],[11,"into",E,E,14,[[],[U]]],[11,R[34],E,E,14,[[[U]],[R[37]]]],[11,R[43],E,E,14,[[["self"]],[T]]],[11,R[38],E,E,14,[[["self"]],[R[40]]]],[11,R[35],E,E,14,[[["self"]],[T]]],[11,R[36],E,E,14,[[],[R[37]]]],[11,R[286],E,E,14,[[],["f"]]],[11,"from",E,E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[32],E,E,0,[[["self"]],[T]]],[11,R[33],E,E,0,[[[T],["self"]]]],[11,R[34],E,E,0,[[[U]],[R[37]]]],[11,R[43],E,E,0,[[["self"]],[T]]],[11,R[38],E,E,0,[[["self"]],[R[40]]]],[11,R[35],E,E,0,[[["self"]],[T]]],[11,R[36],E,E,0,[[],[R[37]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,"into",E,E,1,[[],[U]]],[11,R[34],E,E,1,[[[U]],[R[37]]]],[11,R[43],E,E,1,[[["self"]],[T]]],[11,R[38],E,E,1,[[["self"]],[R[40]]]],[11,R[35],E,E,1,[[["self"]],[T]]],[11,R[36],E,E,1,[[],[R[37]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,"into",E,E,2,[[],[U]]],[11,R[34],E,E,2,[[[U]],[R[37]]]],[11,R[43],E,E,2,[[["self"]],[T]]],[11,R[38],E,E,2,[[["self"]],[R[40]]]],[11,R[35],E,E,2,[[["self"]],[T]]],[11,R[36],E,E,2,[[],[R[37]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,"into",E,E,3,[[],[U]]],[11,R[34],E,E,3,[[[U]],[R[37]]]],[11,R[43],E,E,3,[[["self"]],[T]]],[11,R[38],E,E,3,[[["self"]],[R[40]]]],[11,R[35],E,E,3,[[["self"]],[T]]],[11,R[36],E,E,3,[[],[R[37]]]],[11,"from",E,E,4,[[[T]],[T]]],[11,"into",E,E,4,[[],[U]]],[11,R[34],E,E,4,[[[U]],[R[37]]]],[11,R[43],E,E,4,[[["self"]],[T]]],[11,R[38],E,E,4,[[["self"]],[R[40]]]],[11,R[35],E,E,4,[[["self"]],[T]]],[11,R[36],E,E,4,[[],[R[37]]]],[11,R[336],E,E,2,[[["b"],["self"]],[["error"],["poll",["usize","error"]],["usize"]]]],[11,R[325],E,E,0,[[["self"]],[["poll",["error"]],["error"]]]],[11,R[325],E,E,3,[[["self"]],[["poll",["error"]],["error"]]]],[11,R[327],E,E,3,[[["b"],["self"]],[["error"],["poll",["usize","error"]],["usize"]]]],[11,"eq",E,E,0,[[[R[328]],["self"]],["bool"]]],[11,"ne",E,E,0,[[[R[328]],["self"]],["bool"]]],[11,"clone",E,E,0,[[["self"]],[R[328]]]],[11,"cmp",E,E,0,[[[R[328]],["self"]],[R[49]]]],[11,R[146],E,E,0,[[[R[328]],["self"]],[[R[49]],[R[8],[R[49]]]]]],[11,"lt",E,E,0,[[[R[328]],["self"]],["bool"]]],[11,"le",E,E,0,[[[R[328]],["self"]],["bool"]]],[11,"gt",E,E,0,[[[R[328]],["self"]],["bool"]]],[11,"ge",E,E,0,[[[R[328]],["self"]],["bool"]]],[11,"as_mut",E,E,4,[[["self"]]]],[11,"as_ref",E,E,4,[[["self"]]]],[11,"fmt",E,E,7,[[[R[50]],["self"]],[R[37]]]],[11,"fmt",E,E,8,[[[R[50]],["self"]],[R[37]]]],[11,"fmt",E,E,9,[[[R[50]],["self"]],[R[37]]]],[11,"fmt",E,E,10,[[[R[50]],["self"]],[R[37]]]],[11,"fmt",E,E,11,[[[R[50]],["self"]],[R[37]]]],[11,"fmt",E,E,12,[[[R[50]],["self"]],[R[37]]]],[11,"fmt",E,E,13,[[[R[50]],["self"]],[R[37]]]],[11,"fmt",E,E,14,[[[R[50]],["self"]],[R[37]]]],[11,"fmt",E,E,0,[[[R[50]],["self"]],[R[37]]]],[11,"fmt",E,E,1,[[[R[50]],["self"]],[R[37]]]],[11,"fmt",E,E,2,[[[R[50]],["self"]],[R[37]]]],[11,"fmt",E,E,3,[[[R[50]],["self"]],[R[37]]]],[11,"fmt",E,E,4,[[[R[50]],["self"]],[R[37]]]],[11,"hash",E,E,0,[[["self"],["__ht"]]]],[11,"write",E,E,0,[[["self"]],[[R[37],["usize"]],["usize"]]]],[11,"flush",E,E,0,[[["self"]],[R[37]]]],[11,R[329],E,E,0,[[["self"]],[R[37]]]],[11,R[623],E,E,0,[[["self"],[R[625]]],[R[37]]]],[11,"write",E,E,3,[[["self"]],[[R[37],["usize"]],["usize"]]]],[11,"flush",E,E,3,[[["self"]],[R[37]]]],[11,"read",E,E,0,[[["self"]],[[R[37],["usize"]],["usize"]]]],[11,R[330],E,E,0,[[["self"],["vec"]],[[R[37],["usize"]],["usize"]]]],[11,R[611],E,E,0,[[[R[87]],["self"]],[[R[37],["usize"]],["usize"]]]],[11,R[331],E,E,0,[[["self"]],[R[37]]]],[11,"read",E,E,2,[[["self"]],[[R[37],["usize"]],["usize"]]]],[11,"poll",E,E,7,[[["self"]],[["error"],["poll",["error"]]]]],[11,"poll",E,E,8,[[["self"]],[["poll",["error"]],["error"]]]],[11,"poll",E,E,9,[[["self"]],[["poll",["error"]],["error"]]]],[11,"poll",E,E,10,[[["self"]],[["poll",["error"]],["error"]]]],[11,"poll",E,E,11,[[["self"]],[["error"],["poll",["error"]]]]],[11,"poll",E,E,12,[[["self"]],[["error"],["poll",["error"]]]]],[11,"poll",E,E,13,[[["self"]],[["poll",["error"]],["error"]]]],[11,"poll",E,E,14,[[["self"]],[["poll",["error"]],["error"]]]],[11,"poll",E,E,1,[[["self"]],[["poll",[R[8],"error"]],["error"],[R[8],[R[87]]]]]],[11,R[332],R[324],R[333],5,[[["self"]],["bool"]]],[11,R[334],E,R[335],5,[[["self"]],[["poll",["usize","error"]],["error"],["usize"]]]],[11,R[336],E,R[337],5,[[["b"],["self"]],[["poll",["usize","error"]],["error"],["usize"]]]],[11,"framed",E,R[338],5,[[[R[867]],[R[863]]],[["framed"],[R[867]],[R[863]]]]],[11,"split",E,R[339],5,[[]]],[11,R[340],E,R[341],6,[[["self"]],[["poll",["usize","error"]],["error"],["usize"]]]],[11,R[342],E,R[343],6,[[["self"]],[["poll",["error"]],["error"]]]],[11,R[327],E,R[344],6,[[["b"],["self"]],[["poll",["usize","error"]],["error"],["usize"]]]]],"p":[[3,R[345]],[3,"Lines"],[3,R[802]],[3,R[346]],[3,"Window"],[8,R[347]],[8,R[348]],[3,"Copy"],[3,"Flush"],[3,"Read"],[3,R[349]],[3,R[350]],[3,R[351]],[3,R[365]],[3,R[800]]]};
searchIndex[R[354]]={"doc":"A work-stealing based thread pool for executing futures.","i":[[3,R[361],R[354],"Error raised by `blocking`.",N,N],[3,R[701],E,"Builds a thread pool with custom configuration values.",N,N],[3,"Sender",E,"Submit futures to the associated thread pool for execution.",N,N],[3,R[365],E,"Future that resolves when the thread pool is shutdown.",N,N],[3,R[362],E,"Handle returned from ThreadPool::spawn_handle.",N,N],[3,R[360],E,"Work-stealing based thread pool for executing futures.",N,N],[3,"Worker",E,"Thread worker",N,N],[3,"WorkerId",E,"Identifies a thread pool worker.",N,N],[5,"blocking",E,"Enter a blocking section of code.",N,[[["f"]],[[R[355]],["poll",[R[355]]]]]],[0,"park",E,"Thread parking utilities.",N,N],[3,R[359],R[357],"Parks the thread.",N,N],[3,R[363],E,"Unparks threads that were parked by `DefaultPark`.",N,N],[3,R[123],E,R[364],N,N],[11,"new",E,"Creates a new `DefaultPark` instance.",0,[[],["defaultpark"]]],[11,"new",R[354],"Returns a new thread pool builder initialized with default…",1,[[],[R[819]]]],[11,"pool_size",E,"Set the maximum number of worker threads for the thread…",1,[[["self"],["usize"]],["self"]]],[11,"max_blocking",E,"Set the maximum number of concurrent blocking sections.",1,[[["self"],["usize"]],["self"]]],[11,R[820],E,"Set the thread keep alive duration",1,[[["self"],[R[8],[R[249]]],[R[249]]],["self"]]],[11,R[821],E,"Sets a callback to be triggered when a panic during a…",1,[[["self"],["f"]],["self"]]],[11,R[822],E,"Set name prefix of threads spawned by the scheduler",1,[[[R[87]],["self"],["into",[R[87]]]],["self"]]],[11,R[823],E,R[824],1,[[["self"],["usize"]],["self"]]],[11,"around_worker",E,"Execute function `f` on each worker thread.",1,[[["self"],["f"]],["self"]]],[11,R[825],E,R[826],1,[[["self"],["f"]],["self"]]],[11,R[827],E,R[828],1,[[["self"],["f"]],["self"]]],[11,"custom_park",E,"Customize the `park` instance used by each worker thread.",1,[[["self"],["f"]],["self"]]],[11,"build",E,"Create the configured `ThreadPool`.",1,[[["self"]],[R[356]]]],[11,"spawn",E,"Spawn a future onto the thread pool",2,[[["self"],["f"]],[[R[112]],[R[37],[R[112]]]]]],[11,"new",E,"Create a new `ThreadPool` with default values.",3,[[],[R[356]]]],[11,"spawn",E,"Spawn a future onto the thread pool.",3,[[["self"],["f"]]]],[11,"spawn_handle",E,"Spawn a future on to the thread pool, return a future…",3,[[["self"],["f"]],["spawnhandle"]]],[11,"sender",E,"Return a reference to the sender handle",3,[[["self"]],["sender"]]],[11,"sender_mut",E,"Return a mutable reference to the sender handle",3,[[["self"]],["sender"]]],[11,R[429],E,"Shutdown the pool once it becomes idle.",3,[[],[R[325]]]],[11,R[325],E,"Shutdown the pool",3,[[],[R[325]]]],[11,R[430],E,"Shutdown the pool immediately",3,[[],[R[325]]]],[11,"id",E,"Returns a reference to the worker's identifier.",4,[[["self"]],[R[358]]]],[11,"run",E,"Run the worker",4,[[["self"]]]],[11,"to_usize",E,"Returns this identifier represented as an integer.",5,[[["self"]],["usize"]]],[11,"from",E,E,6,[[[T]],[T]]],[11,"into",E,E,6,[[],[U]]],[11,R[42],E,E,6,[[["self"]],[R[87]]]],[11,R[34],E,E,6,[[[U]],[R[37]]]],[11,R[43],E,E,6,[[["self"]],[T]]],[11,R[38],E,E,6,[[["self"]],[R[40]]]],[11,R[35],E,E,6,[[["self"]],[T]]],[11,R[36],E,E,6,[[],[R[37]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,"into",E,E,1,[[],[U]]],[11,R[34],E,E,1,[[[U]],[R[37]]]],[11,R[43],E,E,1,[[["self"]],[T]]],[11,R[38],E,E,1,[[["self"]],[R[40]]]],[11,R[35],E,E,1,[[["self"]],[T]]],[11,R[36],E,E,1,[[],[R[37]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,"into",E,E,2,[[],[U]]],[11,R[32],E,E,2,[[["self"]],[T]]],[11,R[33],E,E,2,[[[T],["self"]]]],[11,R[34],E,E,2,[[[U]],[R[37]]]],[11,R[43],E,E,2,[[["self"]],[T]]],[11,R[38],E,E,2,[[["self"]],[R[40]]]],[11,R[35],E,E,2,[[["self"]],[T]]],[11,R[36],E,E,2,[[],[R[37]]]],[11,"from",E,E,7,[[[T]],[T]]],[11,"into",E,E,7,[[],[U]]],[11,R[34],E,E,7,[[[U]],[R[37]]]],[11,R[43],E,E,7,[[["self"]],[T]]],[11,R[38],E,E,7,[[["self"]],[R[40]]]],[11,R[35],E,E,7,[[["self"]],[T]]],[11,R[36],E,E,7,[[],[R[37]]]],[11,R[286],E,E,7,[[],["f"]]],[11,"from",E,E,8,[[[T]],[T]]],[11,"into",E,E,8,[[],[U]]],[11,R[34],E,E,8,[[[U]],[R[37]]]],[11,R[43],E,E,8,[[["self"]],[T]]],[11,R[38],E,E,8,[[["self"]],[R[40]]]],[11,R[35],E,E,8,[[["self"]],[T]]],[11,R[36],E,E,8,[[],[R[37]]]],[11,R[286],E,E,8,[[],["f"]]],[11,"from",E,E,3,[[[T]],[T]]],[11,"into",E,E,3,[[],[U]]],[11,R[34],E,E,3,[[[U]],[R[37]]]],[11,R[43],E,E,3,[[["self"]],[T]]],[11,R[38],E,E,3,[[["self"]],[R[40]]]],[11,R[35],E,E,3,[[["self"]],[T]]],[11,R[36],E,E,3,[[],[R[37]]]],[11,"from",E,E,4,[[[T]],[T]]],[11,"into",E,E,4,[[],[U]]],[11,R[34],E,E,4,[[[U]],[R[37]]]],[11,R[43],E,E,4,[[["self"]],[T]]],[11,R[38],E,E,4,[[["self"]],[R[40]]]],[11,R[35],E,E,4,[[["self"]],[T]]],[11,R[36],E,E,4,[[],[R[37]]]],[11,"from",E,E,5,[[[T]],[T]]],[11,"into",E,E,5,[[],[U]]],[11,R[32],E,E,5,[[["self"]],[T]]],[11,R[33],E,E,5,[[[T],["self"]]]],[11,R[34],E,E,5,[[[U]],[R[37]]]],[11,R[43],E,E,5,[[["self"]],[T]]],[11,R[38],E,E,5,[[["self"]],[R[40]]]],[11,R[35],E,E,5,[[["self"]],[T]]],[11,R[36],E,E,5,[[],[R[37]]]],[11,"from",R[357],E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[34],E,E,0,[[[U]],[R[37]]]],[11,R[43],E,E,0,[[["self"]],[T]]],[11,R[38],E,E,0,[[["self"]],[R[40]]]],[11,R[35],E,E,0,[[["self"]],[T]]],[11,R[36],E,E,0,[[],[R[37]]]],[11,"from",E,E,9,[[[T]],[T]]],[11,"into",E,E,9,[[],[U]]],[11,R[34],E,E,9,[[[U]],[R[37]]]],[11,R[43],E,E,9,[[["self"]],[T]]],[11,R[38],E,E,9,[[["self"]],[R[40]]]],[11,R[35],E,E,9,[[["self"]],[T]]],[11,R[36],E,E,9,[[],[R[37]]]],[11,"from",E,E,10,[[[T]],[T]]],[11,"into",E,E,10,[[],[U]]],[11,R[42],E,E,10,[[["self"]],[R[87]]]],[11,R[34],E,E,10,[[[U]],[R[37]]]],[11,R[43],E,E,10,[[["self"]],[T]]],[11,R[38],E,E,10,[[["self"]],[R[40]]]],[11,R[35],E,E,10,[[["self"]],[T]]],[11,R[36],E,E,10,[[],[R[37]]]],[11,"eq",R[354],E,5,[[[R[358]],["self"]],["bool"]]],[11,"ne",E,E,5,[[[R[358]],["self"]],["bool"]]],[11,"clone",E,E,2,[[["self"]],["sender"]]],[11,"clone",E,E,5,[[["self"]],[R[358]]]],[11,"drop",E,E,3,[[["self"]]]],[11,"drop",E,E,4,[[["self"]]]],[11,"fmt",R[357],E,0,[[[R[50]],["self"]],[R[37]]]],[11,"fmt",E,E,9,[[[R[50]],["self"]],[R[37]]]],[11,"fmt",E,E,10,[[[R[50]],["self"]],[R[37]]]],[11,"fmt",R[354],E,6,[[[R[50]],["self"]],[R[37]]]],[11,"fmt",E,E,1,[[[R[50]],["self"]],[R[37]]]],[11,"fmt",E,E,2,[[[R[50]],["self"]],[R[37]]]],[11,"fmt",E,E,7,[[[R[50]],["self"]],[R[37]]]],[11,"fmt",E,E,3,[[[R[50]],["self"]],[R[37]]]],[11,"fmt",E,E,8,[[[R[50]],["self"]],[R[37]]]],[11,"fmt",E,E,4,[[[R[50]],["self"]],[R[37]]]],[11,"fmt",E,E,5,[[[R[50]],["self"]],[R[37]]]],[11,"fmt",R[357],E,10,[[[R[50]],["self"]],[R[37]]]],[11,"fmt",R[354],E,6,[[[R[50]],["self"]],[R[37]]]],[11,"hash",E,E,5,[[["self"],["__h"]]]],[11,R[92],R[357],E,10,[[["self"]],["str"]]],[11,R[92],R[354],E,6,[[["self"]],["str"]]],[11,"poll",E,E,7,[[["self"]],["poll"]]],[11,"poll",E,E,8,[[["self"]],["poll"]]],[11,R[681],E,E,2,[[["self"],[T]],[[R[37],[R[117]]],[R[117]]]]],[11,"status",E,E,2,[[["self"]],[[R[112]],[R[37],[R[112]]]]]],[11,"spawn",E,E,2,[[["self"],["box",["future"]],["future"]],[[R[112]],[R[37],[R[112]]]]]],[11,"unpark",R[357],E,0,[[["self"]]]],[11,"park",E,E,0,[[["self"]],[R[37]]]],[11,R[115],E,E,0,[[["self"],[R[249]]],[R[37]]]],[11,"unpark",E,E,9,[[["self"]]]],[11,"status",R[354],E,2,[[["self"]],[[R[112]],[R[37],[R[112]]]]]],[11,"spawn",E,E,2,[[["self"],[T]],[[R[112]],[R[37],[R[112]]]]]]],"p":[[3,R[359]],[3,R[701]],[3,"Sender"],[3,R[360]],[3,"Worker"],[3,"WorkerId"],[3,R[361]],[3,R[365]],[3,R[362]],[3,R[363]],[3,R[123]]]};
searchIndex[R[366]]={"doc":R[829],"i":[[8,"Decoder",R[366],R[830],N,N],[16,"Item",E,R[831],0,N],[16,"Error",E,R[832],0,N],[10,"decode",E,R[833],0,[[["self"],[R[367]]],[[R[37],[R[8]]],[R[8]]]]],[11,R[371],E,R[834],0,[[["self"],[R[367]]],[[R[37],[R[8]]],[R[8]]]]],[11,"framed",E,R[338],0,[[[T]],["framed"]]],[8,"Encoder",E,R[835],N,N],[16,"Item",E,R[836],1,N],[16,"Error",E,R[837],1,N],[10,"encode",E,R[838],1,[[["self"],[R[367]]],[R[37]]]],[3,"Framed",E,R[447],N,N],[3,R[377],E,R[839],N,N],[12,"io",E,R[840],2,N],[12,"codec",E,R[841],2,N],[12,R[336],E,R[842],2,N],[12,R[327],E,R[843],2,N],[3,R[380],E,R[844],N,N],[3,R[381],E,R[845],N,N],[3,R[378],E,R[846],N,N],[3,R[379],E,R[847],N,N],[11,"new",E,R[848],3,[[],[R[369]]]],[11,"new",E,R[849],4,[[],[R[370]]]],[11,R[850],E,R[851],4,[[["usize"]],["self"]]],[11,R[852],E,R[853],4,[[["self"]],["usize"]]],[11,"from",E,E,5,[[[T]],[T]]],[11,"into",E,E,5,[[],[U]]],[11,R[34],E,E,5,[[[U]],[R[37]]]],[11,R[43],E,E,5,[[["self"]],[T]]],[11,R[38],E,E,5,[[["self"]],[R[40]]]],[11,R[35],E,E,5,[[["self"]],[T]]],[11,R[36],E,E,5,[[],[R[37]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,"into",E,E,2,[[],[U]]],[11,R[34],E,E,2,[[[U]],[R[37]]]],[11,R[43],E,E,2,[[["self"]],[T]]],[11,R[38],E,E,2,[[["self"]],[R[40]]]],[11,R[35],E,E,2,[[["self"]],[T]]],[11,R[36],E,E,2,[[],[R[37]]]],[11,"from",E,E,6,[[[T]],[T]]],[11,"into",E,E,6,[[],[U]]],[11,R[34],E,E,6,[[[U]],[R[37]]]],[11,R[43],E,E,6,[[["self"]],[T]]],[11,R[38],E,E,6,[[["self"]],[R[40]]]],[11,R[35],E,E,6,[[["self"]],[T]]],[11,R[36],E,E,6,[[],[R[37]]]],[11,"from",E,E,7,[[[T]],[T]]],[11,"into",E,E,7,[[],[U]]],[11,R[34],E,E,7,[[[U]],[R[37]]]],[11,R[43],E,E,7,[[["self"]],[T]]],[11,R[38],E,E,7,[[["self"]],[R[40]]]],[11,R[35],E,E,7,[[["self"]],[T]]],[11,R[36],E,E,7,[[],[R[37]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,"into",E,E,3,[[],[U]]],[11,R[32],E,E,3,[[["self"]],[T]]],[11,R[33],E,E,3,[[[T],["self"]]]],[11,R[34],E,E,3,[[[U]],[R[37]]]],[11,R[43],E,E,3,[[["self"]],[T]]],[11,R[38],E,E,3,[[["self"]],[R[40]]]],[11,R[35],E,E,3,[[["self"]],[T]]],[11,R[36],E,E,3,[[],[R[37]]]],[11,"from",E,E,4,[[[T]],[T]]],[11,"into",E,E,4,[[],[U]]],[11,R[32],E,E,4,[[["self"]],[T]]],[11,R[33],E,E,4,[[[T],["self"]]]],[11,R[34],E,E,4,[[[U]],[R[37]]]],[11,R[43],E,E,4,[[["self"]],[T]]],[11,R[38],E,E,4,[[["self"]],[R[40]]]],[11,R[35],E,E,4,[[["self"]],[T]]],[11,R[36],E,E,4,[[],[R[37]]]],[11,"fmt",E,E,6,[[[R[50]],["self"]],[["error"],[R[37],["error"]]]]],[11,"fmt",E,E,2,[[[R[50]],["self"]],[["error"],[R[37],["error"]]]]],[11,"fmt",E,E,7,[[[R[50]],["self"]],[["error"],[R[37],["error"]]]]],[11,"fmt",E,E,5,[[[R[50]],["self"]],[["error"],[R[37],["error"]]]]],[11,"poll",E,E,6,[[["self"]],[[R[37],["async"]],["async",[R[8]]]]]],[11,"poll",E,E,5,[[["self"]],[[R[37],["async"]],["async",[R[8]]]]]],[11,"poll",E,E,7,[[["self"]],[[R[37],["async"]],["async",[R[8]]]]]],[11,R[93],E,E,7,[[["self"]],[[R[37],[R[368]]],[R[368]]]]],[11,R[95],E,E,7,[[["self"]],[["async"],[R[37],["async"]]]]],[11,"close",E,E,7,[[["self"]],[["async"],[R[37],["async"]]]]],[11,R[93],E,E,5,[[["self"]],[[R[37],[R[368]]],[R[368]]]]],[11,R[95],E,E,5,[[["self"]],[["async"],[R[37],["async"]]]]],[11,"close",E,E,5,[[["self"]],[["async"],[R[37],["async"]]]]],[11,R[93],E,E,6,[[["self"]],[[R[37],[R[368]]],[R[368]]]]],[11,R[95],E,E,6,[[["self"]],[[R[37],["async"]],["async"]]]],[11,"close",E,E,6,[[["self"]],[[R[37],["async"]],["async"]]]],[11,"eq",E,E,3,[[[R[369]],["self"]],["bool"]]],[11,"ne",E,E,3,[[[R[369]],["self"]],["bool"]]],[11,"eq",E,E,4,[[[R[370]],["self"]],["bool"]]],[11,"ne",E,E,4,[[[R[370]],["self"]],["bool"]]],[11,"clone",E,E,3,[[["self"]],[R[369]]]],[11,"clone",E,E,4,[[["self"]],[R[370]]]],[11,"cmp",E,E,3,[[[R[369]],["self"]],[R[49]]]],[11,"cmp",E,E,4,[[[R[370]],["self"]],[R[49]]]],[11,R[146],E,E,3,[[[R[369]],["self"]],[[R[49]],[R[8],[R[49]]]]]],[11,"lt",E,E,3,[[[R[369]],["self"]],["bool"]]],[11,"le",E,E,3,[[[R[369]],["self"]],["bool"]]],[11,"gt",E,E,3,[[[R[369]],["self"]],["bool"]]],[11,"ge",E,E,3,[[[R[369]],["self"]],["bool"]]],[11,R[146],E,E,4,[[[R[370]],["self"]],[[R[49]],[R[8],[R[49]]]]]],[11,"lt",E,E,4,[[[R[370]],["self"]],["bool"]]],[11,"le",E,E,4,[[[R[370]],["self"]],["bool"]]],[11,"gt",E,E,4,[[[R[370]],["self"]],["bool"]]],[11,"ge",E,E,4,[[[R[370]],["self"]],["bool"]]],[11,"fmt",E,E,3,[[[R[50]],["self"]],[R[37]]]],[11,"fmt",E,E,4,[[[R[50]],["self"]],[R[37]]]],[11,"hash",E,E,3,[[["self"],["__h"]]]],[11,"hash",E,E,4,[[["self"],["__h"]]]],[11,"encode",E,E,3,[[["bytes"],["self"],[R[367]]],[[R[37],["error"]],["error"]]]],[11,"encode",E,E,4,[[[R[87]],["self"],[R[367]]],[[R[37],["error"]],["error"]]]],[11,"decode",E,E,3,[[["self"],[R[367]]],[[R[8],[R[367]]],["error"],[R[37],[R[8],"error"]]]]],[11,"decode",E,E,4,[[["self"],[R[367]]],[[R[37],[R[8],"error"]],["error"],[R[8],[R[87]]]]]],[11,R[371],E,E,4,[[["self"],[R[367]]],[[R[37],[R[8],"error"]],["error"],[R[8],[R[87]]]]]],[11,"new",E,R[338],5,[[[U],[T]],["framed"]]],[11,R[854],E,R[338],5,[[[R[372]]],["framed"]]],[11,R[352],E,R[373],5,[[["self"]],[T]]],[11,R[353],E,R[374],5,[[["self"]],[T]]],[11,"codec",E,R[855],5,[[["self"]],[U]]],[11,R[856],E,R[857],5,[[["self"]],[U]]],[11,R[96],E,R[858],5,[[],[T]]],[11,R[448],E,R[859],5,[[],[R[372]]]],[11,"new",E,R[860],2,[[[U],[T]],[R[372]]]],[11,"new",E,R[861],6,[[["d"],[T]],[R[682]]]],[11,R[352],E,R[373],6,[[["self"]],[T]]],[11,R[353],E,R[374],6,[[["self"]],[T]]],[11,R[96],E,R[862],6,[[],[T]]],[11,R[863],E,R[375],6,[[["self"]],["d"]]],[11,R[864],E,R[376],6,[[["self"]],["d"]]],[11,"new",E,R[865],7,[[["e"],[T]],[R[683]]]],[11,R[352],E,R[373],7,[[["self"]],[T]]],[11,R[353],E,R[374],7,[[["self"]],[T]]],[11,R[96],E,R[866],7,[[],[T]]],[11,R[867],E,R[375],7,[[["self"]],["e"]]],[11,R[868],E,R[376],7,[[["self"]],["e"]]]],"p":[[8,"Decoder"],[8,"Encoder"],[3,R[377]],[3,R[378]],[3,R[379]],[3,"Framed"],[3,R[380]],[3,R[381]]]};
searchIndex[R[386]]={"doc":"Asynchronous file and standard stream adaptation.","i":[[3,R[397],R[386],"Future returned by `create_dir`.",N,N],[3,R[398],E,"Future returned by `create_dir_all`.",N,N],[3,R[384],E,R[385],N,N],[3,R[399],E,"Future returned by `hard_link`.",N,N],[3,R[383],E,"Future returned by `metadata`.",N,N],[3,R[869],E,R[870],N,N],[3,"DirEntry",E,"Entries returned by the [`ReadDir`] stream.",N,N],[3,"ReadDir",E,"Stream of the entries in a directory.",N,N],[3,R[400],E,"Future returned by `read_dir`.",N,N],[3,R[401],E,"Future returned by `read_link`.",N,N],[3,R[402],E,"Future returned by `remove_dir`.",N,N],[3,R[403],E,"Future returned by `remove_file`.",N,N],[3,R[404],E,"Future returned by `rename`.",N,N],[3,R[405],E,"Future returned by `set_permissions`.",N,N],[3,"Stderr",E,R[871],N,N],[3,"Stdin",E,R[872],N,N],[3,"Stdout",E,R[873],N,N],[3,R[406],E,"Future returned by `symlink_metadata`.",N,N],[3,R[407],E,R[874],N,N],[5,R[875],E,R[876],N,[[["path"],["asref",["path"]]],[["path"],["asref",["path"]],[R[877]]]]],[5,R[878],E,R[879],N,[[["path"],["asref",["path"]]],[["path"],["asref",["path"]],[R[880]]]]],[5,R[881],E,R[882],N,[[["path"],["asref",["path"]]],[["path"],["asref",["path"]],[R[883]]]]],[5,R[2],E,R[382],N,[[["p"]],[R[391]]]],[5,"read",E,R[884],N,[[["p"]],["readfile"]]],[5,"read_dir",E,R[885],N,[[["p"]],[R[886]]]],[5,R[887],E,R[888],N,[[["path"],["asref",["path"]]],[["path"],[R[889]],["asref",["path"]]]]],[5,R[890],E,R[891],N,[[["path"],["asref",["path"]]],[["path"],[R[892]],["asref",["path"]]]]],[5,R[893],E,R[894],N,[[["path"],["asref",["path"]]],[["path"],[R[895]],["asref",["path"]]]]],[5,"rename",E,R[896],N,[[["path"],["asref",["path"]]],[["path"],["asref",["path"]],[R[897]]]]],[5,R[898],E,R[899],N,[[["path"],[R[394]],["asref",["path"]]],[["path"],["asref",["path"]],[R[900]]]]],[5,"stderr",E,R[901],N,[[],["stderr"]]],[5,"stdin",E,R[902],N,[[],["stdin"]]],[5,"stdout",E,R[903],N,[[],["stdout"]]],[5,R[904],E,R[382],N,[[["p"]],[R[905]]]],[5,"write",E,R[906],N,[[["asref"],["p"]],[["asref"],[R[907]]]]],[0,"file",E,R[908],N,N],[3,R[408],R[388],R[909],N,N],[3,R[409],E,R[910],N,N],[3,R[383],E,R[911],N,N],[3,R[410],E,R[912],N,N],[3,R[384],E,R[385],N,N],[3,R[411],E,R[913],N,N],[3,"File",E,R[497],N,N],[11,"new",R[386],R[914],0,[[],[R[387]]]],[11,"read",E,R[915],0,[[["self"],["bool"]],[R[387]]]],[11,"write",E,R[916],0,[[["self"],["bool"]],[R[387]]]],[11,"append",E,R[917],0,[[["self"],["bool"]],[R[387]]]],[11,"truncate",E,R[918],0,[[["self"],["bool"]],[R[387]]]],[11,"create",E,R[919],0,[[["self"],["bool"]],[R[387]]]],[11,R[920],E,R[921],0,[[["self"],["bool"]],[R[387]]]],[11,"open",E,R[922],0,[[["self"],["p"]],[R[389]]]],[11,"open",R[388],R[923],1,[[["p"]],[R[389]]]],[11,"create",E,R[924],1,[[["p"]],[R[925]]]],[11,R[460],E,R[926],1,[[["stdfile"]],["file"]]],[11,R[927],E,R[390],1,[[["self"],[R[928]]],[["error"],["poll",["u64","error"]],["u64"]]]],[11,"seek",E,R[390],1,[[[R[928]]],[R[929]]]],[11,R[930],E,R[931],1,[[["self"]],[["poll",["error"]],["error"]]]],[11,R[932],E,R[933],1,[[["self"]],[["poll",["error"]],["error"]]]],[11,R[934],E,R[935],1,[[["self"],["u64"]],[["poll",["error"]],["error"]]]],[11,R[2],E,R[392],1,[[],[R[391]]]],[11,R[395],E,R[392],1,[[["self"]],[["poll",[R[2],"error"]],[R[2]],["error"]]]],[11,R[936],E,R[393],1,[[["self"]],[["file"],["poll",["file","error"]],["error"]]]],[11,R[937],E,R[393],1,[[],[R[938]]]],[11,R[939],E,R[940],1,[[["self"],[R[394]]],[["poll",["error"]],["error"]]]],[11,R[947],E,R[941],1,[[],["stdfile"]]],[0,"os",R[386],R[942],N,N],[0,"unix","tokio_fs::os",R[943],N,N],[3,R[412],R[396],R[944],N,N],[5,"symlink",E,R[945],N,[[["path"],["asref",["path"]]],[["path"],[R[946]],["asref",["path"]]]]],[11,R[947],R[386],"Destructures the `tokio_fs::DirEntry` into a…",2,[[],["stddirentry"]]],[11,"path",E,"Returns the full path to the file that this entry…",2,[[["self"]],["pathbuf"]]],[11,"file_name",E,"Returns the bare file name of this directory entry without…",2,[[["self"]],["osstring"]]],[11,R[395],E,"Return the metadata for the file that this entry points at.",2,[[["self"]],[["poll",[R[2],"error"]],[R[2]],["error"]]]],[11,"poll_file_type",E,"Return the file type for the file that this entry points at.",2,[[["self"]],[["error"],["filetype"],["poll",["filetype","error"]]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,"into",E,E,3,[[],[U]]],[11,R[34],E,E,3,[[[U]],[R[37]]]],[11,R[43],E,E,3,[[["self"]],[T]]],[11,R[38],E,E,3,[[["self"]],[R[40]]]],[11,R[35],E,E,3,[[["self"]],[T]]],[11,R[36],E,E,3,[[],[R[37]]]],[11,R[286],E,E,3,[[],["f"]]],[11,"from",E,E,4,[[[T]],[T]]],[11,"into",E,E,4,[[],[U]]],[11,R[34],E,E,4,[[[U]],[R[37]]]],[11,R[43],E,E,4,[[["self"]],[T]]],[11,R[38],E,E,4,[[["self"]],[R[40]]]],[11,R[35],E,E,4,[[["self"]],[T]]],[11,R[36],E,E,4,[[],[R[37]]]],[11,R[286],E,E,4,[[],["f"]]],[11,"from",E,E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[32],E,E,0,[[["self"]],[T]]],[11,R[33],E,E,0,[[[T],["self"]]]],[11,R[34],E,E,0,[[[U]],[R[37]]]],[11,R[43],E,E,0,[[["self"]],[T]]],[11,R[38],E,E,0,[[["self"]],[R[40]]]],[11,R[35],E,E,0,[[["self"]],[T]]],[11,R[36],E,E,0,[[],[R[37]]]],[11,"from",E,E,5,[[[T]],[T]]],[11,"into",E,E,5,[[],[U]]],[11,R[34],E,E,5,[[[U]],[R[37]]]],[11,R[43],E,E,5,[[["self"]],[T]]],[11,R[38],E,E,5,[[["self"]],[R[40]]]],[11,R[35],E,E,5,[[["self"]],[T]]],[11,R[36],E,E,5,[[],[R[37]]]],[11,R[286],E,E,5,[[],["f"]]],[11,"from",E,E,6,[[[T]],[T]]],[11,"into",E,E,6,[[],[U]]],[11,R[34],E,E,6,[[[U]],[R[37]]]],[11,R[43],E,E,6,[[["self"]],[T]]],[11,R[38],E,E,6,[[["self"]],[R[40]]]],[11,R[35],E,E,6,[[["self"]],[T]]],[11,R[36],E,E,6,[[],[R[37]]]],[11,R[286],E,E,6,[[],["f"]]],[11,"from",E,E,7,[[[T]],[T]]],[11,"into",E,E,7,[[],[U]]],[11,R[34],E,E,7,[[[U]],[R[37]]]],[11,R[43],E,E,7,[[["self"]],[T]]],[11,R[38],E,E,7,[[["self"]],[R[40]]]],[11,R[35],E,E,7,[[["self"]],[T]]],[11,R[36],E,E,7,[[],[R[37]]]],[11,R[286],E,E,7,[[],["f"]]],[11,"from",E,E,2,[[[T]],[T]]],[11,"into",E,E,2,[[],[U]]],[11,R[34],E,E,2,[[[U]],[R[37]]]],[11,R[43],E,E,2,[[["self"]],[T]]],[11,R[38],E,E,2,[[["self"]],[R[40]]]],[11,R[35],E,E,2,[[["self"]],[T]]],[11,R[36],E,E,2,[[],[R[37]]]],[11,"from",E,E,8,[[[T]],[T]]],[11,"into",E,E,8,[[],[U]]],[11,R[34],E,E,8,[[[U]],[R[37]]]],[11,R[43],E,E,8,[[["self"]],[T]]],[11,R[38],E,E,8,[[["self"]],[R[40]]]],[11,R[35],E,E,8,[[["self"]],[T]]],[11,R[36],E,E,8,[[],[R[37]]]],[11,"from",E,E,9,[[[T]],[T]]],[11,"into",E,E,9,[[],[U]]],[11,R[34],E,E,9,[[[U]],[R[37]]]],[11,R[43],E,E,9,[[["self"]],[T]]],[11,R[38],E,E,9,[[["self"]],[R[40]]]],[11,R[35],E,E,9,[[["self"]],[T]]],[11,R[36],E,E,9,[[],[R[37]]]],[11,R[286],E,E,9,[[],["f"]]],[11,"from",E,E,10,[[[T]],[T]]],[11,"into",E,E,10,[[],[U]]],[11,R[34],E,E,10,[[[U]],[R[37]]]],[11,R[43],E,E,10,[[["self"]],[T]]],[11,R[38],E,E,10,[[["self"]],[R[40]]]],[11,R[35],E,E,10,[[["self"]],[T]]],[11,R[36],E,E,10,[[],[R[37]]]],[11,R[286],E,E,10,[[],["f"]]],[11,"from",E,E,11,[[[T]],[T]]],[11,"into",E,E,11,[[],[U]]],[11,R[34],E,E,11,[[[U]],[R[37]]]],[11,R[43],E,E,11,[[["self"]],[T]]],[11,R[38],E,E,11,[[["self"]],[R[40]]]],[11,R[35],E,E,11,[[["self"]],[T]]],[11,R[36],E,E,11,[[],[R[37]]]],[11,R[286],E,E,11,[[],["f"]]],[11,"from",E,E,12,[[[T]],[T]]],[11,"into",E,E,12,[[],[U]]],[11,R[34],E,E,12,[[[U]],[R[37]]]],[11,R[43],E,E,12,[[["self"]],[T]]],[11,R[38],E,E,12,[[["self"]],[R[40]]]],[11,R[35],E,E,12,[[["self"]],[T]]],[11,R[36],E,E,12,[[],[R[37]]]],[11,R[286],E,E,12,[[],["f"]]],[11,"from",E,E,13,[[[T]],[T]]],[11,"into",E,E,13,[[],[U]]],[11,R[34],E,E,13,[[[U]],[R[37]]]],[11,R[43],E,E,13,[[["self"]],[T]]],[11,R[38],E,E,13,[[["self"]],[R[40]]]],[11,R[35],E,E,13,[[["self"]],[T]]],[11,R[36],E,E,13,[[],[R[37]]]],[11,R[286],E,E,13,[[],["f"]]],[11,"from",E,E,14,[[[T]],[T]]],[11,"into",E,E,14,[[],[U]]],[11,R[34],E,E,14,[[[U]],[R[37]]]],[11,R[43],E,E,14,[[["self"]],[T]]],[11,R[38],E,E,14,[[["self"]],[R[40]]]],[11,R[35],E,E,14,[[["self"]],[T]]],[11,R[36],E,E,14,[[],[R[37]]]],[11,R[286],E,E,14,[[],["f"]]],[11,"from",E,E,15,[[[T]],[T]]],[11,"into",E,E,15,[[],[U]]],[11,R[34],E,E,15,[[[U]],[R[37]]]],[11,R[43],E,E,15,[[["self"]],[T]]],[11,R[38],E,E,15,[[["self"]],[R[40]]]],[11,R[35],E,E,15,[[["self"]],[T]]],[11,R[36],E,E,15,[[],[R[37]]]],[11,"from",E,E,16,[[[T]],[T]]],[11,"into",E,E,16,[[],[U]]],[11,R[34],E,E,16,[[[U]],[R[37]]]],[11,R[43],E,E,16,[[["self"]],[T]]],[11,R[38],E,E,16,[[["self"]],[R[40]]]],[11,R[35],E,E,16,[[["self"]],[T]]],[11,R[36],E,E,16,[[],[R[37]]]],[11,"from",E,E,17,[[[T]],[T]]],[11,"into",E,E,17,[[],[U]]],[11,R[34],E,E,17,[[[U]],[R[37]]]],[11,R[43],E,E,17,[[["self"]],[T]]],[11,R[38],E,E,17,[[["self"]],[R[40]]]],[11,R[35],E,E,17,[[["self"]],[T]]],[11,R[36],E,E,17,[[],[R[37]]]],[11,"from",E,E,18,[[[T]],[T]]],[11,"into",E,E,18,[[],[U]]],[11,R[34],E,E,18,[[[U]],[R[37]]]],[11,R[43],E,E,18,[[["self"]],[T]]],[11,R[38],E,E,18,[[["self"]],[R[40]]]],[11,R[35],E,E,18,[[["self"]],[T]]],[11,R[36],E,E,18,[[],[R[37]]]],[11,R[286],E,E,18,[[],["f"]]],[11,"from",E,E,19,[[[T]],[T]]],[11,"into",E,E,19,[[],[U]]],[11,R[34],E,E,19,[[[U]],[R[37]]]],[11,R[43],E,E,19,[[["self"]],[T]]],[11,R[38],E,E,19,[[["self"]],[R[40]]]],[11,R[35],E,E,19,[[["self"]],[T]]],[11,R[36],E,E,19,[[],[R[37]]]],[11,R[286],E,E,19,[[],["f"]]],[11,"from",R[388],E,20,[[[T]],[T]]],[11,"into",E,E,20,[[],[U]]],[11,R[34],E,E,20,[[[U]],[R[37]]]],[11,R[43],E,E,20,[[["self"]],[T]]],[11,R[38],E,E,20,[[["self"]],[R[40]]]],[11,R[35],E,E,20,[[["self"]],[T]]],[11,R[36],E,E,20,[[],[R[37]]]],[11,R[286],E,E,20,[[],["f"]]],[11,"from",E,E,21,[[[T]],[T]]],[11,"into",E,E,21,[[],[U]]],[11,R[34],E,E,21,[[[U]],[R[37]]]],[11,R[43],E,E,21,[[["self"]],[T]]],[11,R[38],E,E,21,[[["self"]],[R[40]]]],[11,R[35],E,E,21,[[["self"]],[T]]],[11,R[36],E,E,21,[[],[R[37]]]],[11,R[286],E,E,21,[[],["f"]]],[11,"from",E,E,22,[[[T]],[T]]],[11,"into",E,E,22,[[],[U]]],[11,R[34],E,E,22,[[[U]],[R[37]]]],[11,R[43],E,E,22,[[["self"]],[T]]],[11,R[38],E,E,22,[[["self"]],[R[40]]]],[11,R[35],E,E,22,[[["self"]],[T]]],[11,R[36],E,E,22,[[],[R[37]]]],[11,R[286],E,E,22,[[],["f"]]],[11,"from",E,E,23,[[[T]],[T]]],[11,"into",E,E,23,[[],[U]]],[11,R[34],E,E,23,[[[U]],[R[37]]]],[11,R[43],E,E,23,[[["self"]],[T]]],[11,R[38],E,E,23,[[["self"]],[R[40]]]],[11,R[35],E,E,23,[[["self"]],[T]]],[11,R[36],E,E,23,[[],[R[37]]]],[11,R[286],E,E,23,[[],["f"]]],[11,"from",E,E,24,[[[T]],[T]]],[11,"into",E,E,24,[[],[U]]],[11,R[34],E,E,24,[[[U]],[R[37]]]],[11,R[43],E,E,24,[[["self"]],[T]]],[11,R[38],E,E,24,[[["self"]],[R[40]]]],[11,R[35],E,E,24,[[["self"]],[T]]],[11,R[36],E,E,24,[[],[R[37]]]],[11,R[286],E,E,24,[[],["f"]]],[11,"from",E,E,1,[[[T]],[T]]],[11,"into",E,E,1,[[],[U]]],[11,R[34],E,E,1,[[[U]],[R[37]]]],[11,R[43],E,E,1,[[["self"]],[T]]],[11,R[38],E,E,1,[[["self"]],[R[40]]]],[11,R[35],E,E,1,[[["self"]],[T]]],[11,R[36],E,E,1,[[],[R[37]]]],[11,"from",R[396],E,25,[[[T]],[T]]],[11,"into",E,E,25,[[],[U]]],[11,R[34],E,E,25,[[[U]],[R[37]]]],[11,R[43],E,E,25,[[["self"]],[T]]],[11,R[38],E,E,25,[[["self"]],[R[40]]]],[11,R[35],E,E,25,[[["self"]],[T]]],[11,R[36],E,E,25,[[],[R[37]]]],[11,R[286],E,E,25,[[],["f"]]],[11,"clone",R[386],E,0,[[["self"]],[R[387]]]],[11,"from",E,E,0,[[["stdopenoptions"]],[R[387]]]],[11,"drop",R[388],E,1,[[["self"]]]],[11,"fmt",R[386],E,3,[[[R[50]],["self"]],[R[37]]]],[11,"fmt",E,E,4,[[[R[50]],["self"]],[R[37]]]],[11,"fmt",R[388],E,20,[[[R[50]],["self"]],[R[37]]]],[11,"fmt",E,E,21,[[[R[50]],["self"]],[R[37]]]],[11,"fmt",E,E,22,[[[R[50]],["self"]],[R[37]]]],[11,"fmt",E,E,23,[[[R[50]],["self"]],[R[37]]]],[11,"fmt",R[386],E,0,[[[R[50]],["self"]],[R[37]]]],[11,"fmt",R[388],E,24,[[[R[50]],["self"]],[R[37]]]],[11,"fmt",E,E,1,[[[R[50]],["self"]],[R[37]]]],[11,"fmt",R[386],E,5,[[[R[50]],["self"]],[R[37]]]],[11,"fmt",E,E,6,[[[R[50]],["self"]],[R[37]]]],[11,"fmt",R[396],E,25,[[[R[50]],["self"]],[R[37]]]],[11,"fmt",R[386],E,7,[[[R[50]],["self"]],[R[37]]]],[11,"fmt",E,E,9,[[[R[50]],["self"]],[R[37]]]],[11,"fmt",E,E,8,[[[R[50]],["self"]],[R[37]]]],[11,"fmt",E,E,2,[[[R[50]],["self"]],[R[37]]]],[11,"fmt",E,E,10,[[[R[50]],["self"]],[R[37]]]],[11,"fmt",E,E,11,[[[R[50]],["self"]],[R[37]]]],[11,"fmt",E,E,12,[[[R[50]],["self"]],[R[37]]]],[11,"fmt",E,E,13,[[[R[50]],["self"]],[R[37]]]],[11,"fmt",E,E,14,[[[R[50]],["self"]],[R[37]]]],[11,"fmt",E,E,15,[[[R[50]],["self"]],[R[37]]]],[11,"fmt",E,E,16,[[[R[50]],["self"]],[R[37]]]],[11,"fmt",E,E,17,[[[R[50]],["self"]],[R[37]]]],[11,"fmt",E,E,18,[[[R[50]],["self"]],[R[37]]]],[11,"fmt",E,E,19,[[[R[50]],["self"]],[R[37]]]],[11,"write",R[388],E,1,[[["self"]],[[R[37],["usize"]],["usize"]]]],[11,"flush",E,E,1,[[["self"]],[R[37]]]],[11,"write",R[386],E,15,[[["self"]],[[R[37],["usize"]],["usize"]]]],[11,"flush",E,E,15,[[["self"]],[R[37]]]],[11,"write",E,E,17,[[["self"]],[[R[37],["usize"]],["usize"]]]],[11,"flush",E,E,17,[[["self"]],[R[37]]]],[11,"read",R[388],E,1,[[["self"]],[[R[37],["usize"]],["usize"]]]],[11,"read",R[386],E,16,[[["self"]],[[R[37],["usize"]],["usize"]]]],[11,"ino",E,E,2,[[["self"]],["u64"]]],[11,"poll",E,E,3,[[["self"]],["poll"]]],[11,"poll",E,E,4,[[["self"]],["poll"]]],[11,"poll",R[388],E,20,[[["self"]],["poll"]]],[11,"poll",E,E,21,[[["self"]],["poll"]]],[11,"poll",E,E,22,[[["self"]],["poll"]]],[11,"poll",E,E,23,[[["self"]],["poll"]]],[11,"poll",E,E,24,[[["self"]],["poll"]]],[11,"poll",R[386],E,5,[[["self"]],["poll"]]],[11,"poll",E,E,6,[[["self"]],["poll"]]],[11,"poll",R[396],E,25,[[["self"]],["poll"]]],[11,"poll",R[386],E,7,[[["self"]],["poll"]]],[11,"poll",E,E,9,[[["self"]],[["poll",["error"]],["error"]]]],[11,"poll",E,E,10,[[["self"]],["poll"]]],[11,"poll",E,E,11,[[["self"]],["poll"]]],[11,"poll",E,E,12,[[["self"]],["poll"]]],[11,"poll",E,E,13,[[["self"]],["poll"]]],[11,"poll",E,E,14,[[["self"]],["poll"]]],[11,"poll",E,E,18,[[["self"]],["poll"]]],[11,"poll",E,E,19,[[["self"]],["poll"]]],[11,"poll",E,E,8,[[["self"]],[["poll",[R[8]]],[R[8]]]]],[11,R[325],R[388],E,1,[[["self"]],[["poll",["error"]],["error"]]]],[11,R[325],R[386],E,15,[[["self"]],[["poll",["error"]],["error"]]]],[11,R[325],E,E,17,[[["self"]],[["poll",["error"]],["error"]]]],[11,R[332],R[388],E,1,[[["self"]],["bool"]]],[11,R[332],R[386],E,16,[[["self"]],["bool"]]]],"p":[[3,R[384]],[3,"File"],[3,"DirEntry"],[3,R[397]],[3,R[398]],[3,R[399]],[3,R[383]],[3,R[869]],[3,"ReadDir"],[3,R[400]],[3,R[401]],[3,R[402]],[3,R[403]],[3,R[404]],[3,R[405]],[3,"Stderr"],[3,"Stdin"],[3,"Stdout"],[3,R[406]],[3,R[407]],[3,R[408]],[3,R[409]],[3,R[383]],[3,R[410]],[3,R[411]],[3,R[412]]]};
searchIndex[R[413]]={"doc":"Async TLS streams","i":[[3,R[417],R[413],"A wrapper around an underlying raw stream which implements…",N,N],[3,R[418],E,"A wrapper around a `native_tls::TlsConnector`, providing…",N,N],[3,R[419],E,"A wrapper around a `native_tls::TlsAcceptor`, providing an…",N,N],[3,"Connect",E,"Future returned from `TlsConnector::connect` which will…",N,N],[3,"Accept",E,"Future returned from `TlsAcceptor::accept` which will…",N,N],[11,R[352],E,"Get access to the internal `native_tls::TlsStream` stream…",0,[[["self"]],[R[414]]]],[11,R[353],E,"Get mutable access to the internal `native_tls::TlsStream`…",0,[[["self"]],[R[414]]]],[11,R[492],E,"Connects the provided stream with this connector, assuming…",1,[[["str"],["s"],["self"]],[R[492]]]],[11,"accept",E,"Accepts a new client connection with the provided stream.",2,[[["s"],["self"]],["accept"]]],[11,"from",E,E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[34],E,E,0,[[[U]],[R[37]]]],[11,R[43],E,E,0,[[["self"]],[T]]],[11,R[38],E,E,0,[[["self"]],[R[40]]]],[11,R[35],E,E,0,[[["self"]],[T]]],[11,R[36],E,E,0,[[],[R[37]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,"into",E,E,1,[[],[U]]],[11,R[32],E,E,1,[[["self"]],[T]]],[11,R[33],E,E,1,[[[T],["self"]]]],[11,R[34],E,E,1,[[[U]],[R[37]]]],[11,R[43],E,E,1,[[["self"]],[T]]],[11,R[38],E,E,1,[[["self"]],[R[40]]]],[11,R[35],E,E,1,[[["self"]],[T]]],[11,R[36],E,E,1,[[],[R[37]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,"into",E,E,2,[[],[U]]],[11,R[32],E,E,2,[[["self"]],[T]]],[11,R[33],E,E,2,[[[T],["self"]]]],[11,R[34],E,E,2,[[[U]],[R[37]]]],[11,R[43],E,E,2,[[["self"]],[T]]],[11,R[38],E,E,2,[[["self"]],[R[40]]]],[11,R[35],E,E,2,[[["self"]],[T]]],[11,R[36],E,E,2,[[],[R[37]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,"into",E,E,3,[[],[U]]],[11,R[34],E,E,3,[[[U]],[R[37]]]],[11,R[43],E,E,3,[[["self"]],[T]]],[11,R[38],E,E,3,[[["self"]],[R[40]]]],[11,R[35],E,E,3,[[["self"]],[T]]],[11,R[36],E,E,3,[[],[R[37]]]],[11,R[286],E,E,3,[[],["f"]]],[11,"from",E,E,4,[[[T]],[T]]],[11,"into",E,E,4,[[],[U]]],[11,R[34],E,E,4,[[[U]],[R[37]]]],[11,R[43],E,E,4,[[["self"]],[T]]],[11,R[38],E,E,4,[[["self"]],[R[40]]]],[11,R[35],E,E,4,[[["self"]],[T]]],[11,R[36],E,E,4,[[],[R[37]]]],[11,R[286],E,E,4,[[],["f"]]],[11,"clone",E,E,1,[[["self"]],[R[415]]]],[11,"clone",E,E,2,[[["self"]],[R[416]]]],[11,"from",E,E,1,[[[R[415]]],[R[415]]]],[11,"from",E,E,2,[[[R[416]]],[R[416]]]],[11,"fmt",E,E,0,[[[R[50]],["self"]],[R[37]]]],[11,"write",E,E,0,[[["self"]],[[R[37],["usize"]],["usize"]]]],[11,"flush",E,E,0,[[["self"]],[R[37]]]],[11,"read",E,E,0,[[["self"]],[[R[37],["usize"]],["usize"]]]],[11,"poll",E,E,3,[[["self"]],[[R[414]],["error"],["poll",[R[414],"error"]]]]],[11,"poll",E,E,4,[[["self"]],[[R[414]],["error"],["poll",[R[414],"error"]]]]],[11,R[325],E,E,0,[[["self"]],[["poll",["error"]],["error"]]]]],"p":[[3,R[417]],[3,R[418]],[3,R[419]],[3,"Connect"],[3,"Accept"]]};
searchIndex[R[420]]={"doc":R[948],"i":[[3,R[425],R[420],R[949],N,N],[3,R[365],E,"Future that resolves when the reactor thread has shutdown.",N,N],[3,R[426],E,R[950],N,N],[3,R[427],E,R[951],N,N],[3,"Reactor",E,R[952],N,N],[3,"Handle",E,R[953],N,N],[3,"Turn",E,R[954],N,N],[3,R[428],E,"Error returned from `Handle::set_fallback`.",N,N],[5,R[125],E,"Set the default reactor for the duration of the closure",N,[[["enter"],["handle"],["f"]],["r"]]],[11,"handle",E,R[955],0,[[["self"]],["handle"]]],[11,R[429],E,R[956],0,[[],[R[325]]]],[11,R[430],E,R[957],0,[[],[R[325]]]],[11,"forget",E,R[958],0,[[]]],[11,"new",E,R[959],1,[[["e"]],[R[693]]]],[11,R[960],E,R[961],1,[[["e"],["handle"]],[R[37]]]],[11,R[352],E,R[962],1,[[["self"]],["e"]]],[11,R[353],E,R[963],1,[[["self"]],["e"]]],[11,R[96],E,R[964],1,[[],[R[37]]]],[11,R[421],E,R[965],1,[[["ready"],["self"]],[["ready"],["poll",["ready","error"]],["error"]]]],[11,R[966],E,R[967],1,[[["ready"],["self"]],[R[37]]]],[11,R[422],E,R[968],1,[[["self"]],[["ready"],["poll",["ready","error"]],["error"]]]],[11,R[969],E,R[970],1,[[["self"]],[R[37]]]],[11,"new",E,R[971],2,[[],[R[972]]]],[11,R[431],E,R[973],2,[[[T],["self"]],[["bool"],[R[37],["bool"]]]]],[11,R[974],E,R[975],2,[[["self"],[T]],[R[37]]]],[11,R[976],E,R[977],2,[[[T],["handle"],["self"]],[["bool"],[R[37],["bool"]]]]],[11,R[421],E,R[978],2,[[["self"]],[["ready"],["poll",["ready","error"]],["error"]]]],[11,R[979],E,R[980],2,[[["self"]],[[R[37],[R[8]]],[R[8],["ready"]]]]],[11,R[422],E,R[981],2,[[["self"]],[["ready"],["poll",["ready","error"]],["error"]]]],[11,R[982],E,R[983],2,[[["self"]],[[R[37],[R[8]]],[R[8],["ready"]]]]],[11,"new",E,R[984],3,[[],[[R[985]],[R[37],[R[985]]]]]],[11,"handle",E,R[986],3,[[["self"]],["handle"]]],[11,R[987],E,R[988],3,[[["self"]],[[R[37],[R[423]]],[R[423]]]]],[11,"turn",E,R[989],3,[[["self"],[R[8],[R[249]]],[R[249]]],[["turn"],[R[37],["turn"]]]]],[11,"is_idle",E,R[990],3,[[["self"]],["bool"]]],[11,R[424],E,R[991],3,[[],[[R[37],[R[424]]],[R[424]]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[34],E,E,0,[[[U]],[R[37]]]],[11,R[43],E,E,0,[[["self"]],[T]]],[11,R[38],E,E,0,[[["self"]],[R[40]]]],[11,R[35],E,E,0,[[["self"]],[T]]],[11,R[36],E,E,0,[[],[R[37]]]],[11,"from",E,E,4,[[[T]],[T]]],[11,"into",E,E,4,[[],[U]]],[11,R[34],E,E,4,[[[U]],[R[37]]]],[11,R[43],E,E,4,[[["self"]],[T]]],[11,R[38],E,E,4,[[["self"]],[R[40]]]],[11,R[35],E,E,4,[[["self"]],[T]]],[11,R[36],E,E,4,[[],[R[37]]]],[11,R[286],E,E,4,[[],["f"]]],[11,"from",E,E,1,[[[T]],[T]]],[11,"into",E,E,1,[[],[U]]],[11,R[34],E,E,1,[[[U]],[R[37]]]],[11,R[43],E,E,1,[[["self"]],[T]]],[11,R[38],E,E,1,[[["self"]],[R[40]]]],[11,R[35],E,E,1,[[["self"]],[T]]],[11,R[36],E,E,1,[[],[R[37]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,"into",E,E,2,[[],[U]]],[11,R[34],E,E,2,[[[U]],[R[37]]]],[11,R[43],E,E,2,[[["self"]],[T]]],[11,R[38],E,E,2,[[["self"]],[R[40]]]],[11,R[35],E,E,2,[[["self"]],[T]]],[11,R[36],E,E,2,[[],[R[37]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,"into",E,E,3,[[],[U]]],[11,R[34],E,E,3,[[[U]],[R[37]]]],[11,R[43],E,E,3,[[["self"]],[T]]],[11,R[38],E,E,3,[[["self"]],[R[40]]]],[11,R[35],E,E,3,[[["self"]],[T]]],[11,R[36],E,E,3,[[],[R[37]]]],[11,"from",E,E,5,[[[T]],[T]]],[11,"into",E,E,5,[[],[U]]],[11,R[32],E,E,5,[[["self"]],[T]]],[11,R[33],E,E,5,[[[T],["self"]]]],[11,R[34],E,E,5,[[[U]],[R[37]]]],[11,R[43],E,E,5,[[["self"]],[T]]],[11,R[38],E,E,5,[[["self"]],[R[40]]]],[11,R[35],E,E,5,[[["self"]],[T]]],[11,R[36],E,E,5,[[],[R[37]]]],[11,"from",E,E,6,[[[T]],[T]]],[11,"into",E,E,6,[[],[U]]],[11,R[34],E,E,6,[[[U]],[R[37]]]],[11,R[43],E,E,6,[[["self"]],[T]]],[11,R[38],E,E,6,[[["self"]],[R[40]]]],[11,R[35],E,E,6,[[["self"]],[T]]],[11,R[36],E,E,6,[[],[R[37]]]],[11,"from",E,E,7,[[[T]],[T]]],[11,"into",E,E,7,[[],[U]]],[11,R[32],E,E,7,[[["self"]],[T]]],[11,R[33],E,E,7,[[[T],["self"]]]],[11,R[42],E,E,7,[[["self"]],[R[87]]]],[11,R[34],E,E,7,[[[U]],[R[37]]]],[11,R[43],E,E,7,[[["self"]],[T]]],[11,R[38],E,E,7,[[["self"]],[R[40]]]],[11,R[35],E,E,7,[[["self"]],[T]]],[11,R[36],E,E,7,[[],[R[37]]]],[11,"clone",E,E,5,[[["self"]],["handle"]]],[11,"clone",E,E,7,[[["self"]],[R[423]]]],[11,"drop",E,E,0,[[["self"]]]],[11,"drop",E,E,1,[[["self"]]]],[11,R[295],E,R[992],5,[[],["handle"]]],[11,"fmt",E,E,0,[[[R[50]],["self"]],[R[37]]]],[11,"fmt",E,E,4,[[[R[50]],["self"]],[R[37]]]],[11,"fmt",E,E,1,[[[R[50]],["self"]],[R[37]]]],[11,"fmt",E,E,2,[[[R[50]],["self"]],[R[37]]]],[11,"fmt",E,E,6,[[[R[50]],["self"]],[R[37]]]],[11,"fmt",E,E,7,[[[R[50]],["self"]],[R[37]]]],[11,"fmt",E,E,3,[[[R[50]],["self"]],[R[37]]]],[11,"fmt",E,E,5,[[[R[50]],["self"]],[R[37]]]],[11,"fmt",E,E,7,[[[R[50]],["self"]],[R[37]]]],[11,"write",E,E,1,[[["self"]],[[R[37],["usize"]],["usize"]]]],[11,"flush",E,E,1,[[["self"]],[R[37]]]],[11,"read",E,E,1,[[["self"]],[[R[37],["usize"]],["usize"]]]],[11,R[92],E,E,7,[[["self"]],["str"]]],[11,R[449],E,E,3,[[["self"]],["rawfd"]]],[11,"poll",E,E,4,[[["self"]],["poll"]]],[11,R[325],E,E,1,[[["self"]],[["poll",["error"]],["error"]]]],[11,"unpark",E,E,3,[[["self"]]]],[11,"park",E,E,3,[[["self"]],[R[37]]]],[11,R[115],E,E,3,[[["self"],[R[249]]],[R[37]]]],[11,"unpark",E,E,5,[[["self"]]]]],"p":[[3,R[425]],[3,R[426]],[3,R[427]],[3,"Reactor"],[3,R[365]],[3,"Handle"],[3,"Turn"],[3,R[428]]]};
searchIndex[R[432]]={"doc":"Asynchronous signal handling for Tokio","i":[[5,"ctrl_c",R[432],R[433],N,[[],[[R[434]],[R[435],[R[434]]]]]],[5,"ctrl_c_handle",E,R[433],N,[[["handle"]],[[R[434]],[R[435],[R[434]]]]]],[0,"unix",E,"Unix-specific types for signal handling.",N,N],[17,"SIGALRM",R[437],E,N,N],[17,"SIGHUP",E,E,N,N],[17,"SIGPIPE",E,E,N,N],[17,"SIGQUIT",E,E,N,N],[17,"SIGTRAP",E,E,N,N],[17,"SIGINT",E,E,N,N],[17,"SIGTERM",E,E,N,N],[17,"SIGUSR1",E,E,N,N],[17,"SIGUSR2",E,E,N,N],[3,"Signal",E,"An implementation of `Stream` for receiving a particular…",N,N],[11,"new",E,R[436],0,[[["c_int"]],[["signal"],[R[435],["signal"]]]]],[11,"with_handle",E,R[436],0,[[["handle"],["c_int"]],[["signal"],[R[435],["signal"]]]]],[6,"IoFuture",R[432],"A future whose error is `io::Error`",N,N],[6,"IoStream",E,"A stream whose error is `io::Error`",N,N],[11,"from",R[437],E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[34],E,E,0,[[[U]],[R[37]]]],[11,R[43],E,E,0,[[["self"]],[T]]],[11,R[38],E,E,0,[[["self"]],[R[40]]]],[11,R[35],E,E,0,[[["self"]],[T]]],[11,R[36],E,E,0,[[],[R[37]]]],[11,"drop",E,E,0,[[["self"]]]],[11,"poll",E,E,0,[[["self"]],[["poll",[R[8],"error"]],["error"],[R[8],["c_int"]]]]]],"p":[[3,"Signal"]]};
searchIndex[R[438]]={"doc":R[993],"i":[[3,R[441],R[438],R[447],N,N],[3,R[442],E,R[994],N,N],[3,R[444],E,R[445],N,N],[3,R[443],E,R[504],N,N],[11,"new",E,R[995],0,[[[R[439]],["c"]],[R[996]]]],[11,R[352],E,R[373],0,[[["self"]],[R[439]]]],[11,R[353],E,R[374],0,[[["self"]],[R[439]]]],[11,R[96],E,R[997],0,[[],[R[439]]]],[11,R[448],E,R[998],1,[[],["parts"]]],[11,"bind",E,R[999],2,[[[R[440]]],[[R[439]],[R[37],[R[439]]]]]],[11,R[460],E,R[1000],2,[[[R[439]],["handle"]],[[R[439]],[R[37],[R[439]]]]]],[11,R[455],E,R[470],2,[[["self"]],[[R[440]],[R[37],[R[440]]]]]],[11,R[492],E,R[1001],2,[[["self"],[R[440]]],[R[37]]]],[11,R[471],E,R[1002],2,[[["self"]],[["error"],["usize"],["poll",["usize","error"]]]]],[11,R[472],E,R[1003],2,[[["self"]],[["error"],["usize"],["poll",["usize","error"]]]]],[11,R[473],E,R[1004],2,[[["self"],[R[440]]],[["error"],["usize"],["poll",["usize","error"]]]]],[11,R[474],E,R[446],2,[[[R[440]],[T]],[R[475]]]],[11,R[476],E,R[1005],2,[[["self"]],[["poll",["error"]],["error"]]]],[11,R[477],E,R[1006],2,[[[T]],[R[478]]]],[11,R[421],E,R[1007],2,[[["ready"],["self"]],[["ready"],["poll",["ready","error"]],["error"]]]],[11,R[422],E,R[1008],2,[[["self"]],[["ready"],["poll",["ready","error"]],["error"]]]],[11,R[450],E,R[1009],2,[[["self"]],[["bool"],[R[37],["bool"]]]]],[11,R[1010],E,R[1011],2,[[["self"],["bool"]],[R[37]]]],[11,R[1012],E,R[1013],2,[[["self"]],[["bool"],[R[37],["bool"]]]]],[11,R[1014],E,R[1015],2,[[["self"],["bool"]],[R[37]]]],[11,R[1016],E,R[1017],2,[[["self"]],[[R[37],["u32"]],["u32"]]]],[11,R[1018],E,R[1019],2,[[["u32"],["self"]],[R[37]]]],[11,R[1020],E,R[1021],2,[[["self"]],[["bool"],[R[37],["bool"]]]]],[11,R[1022],E,R[1023],2,[[["self"],["bool"]],[R[37]]]],[11,"ttl",E,R[483],2,[[["self"]],[[R[37],["u32"]],["u32"]]]],[11,"set_ttl",E,R[484],2,[[["u32"],["self"]],[R[37]]]],[11,R[1024],E,R[1025],2,[[["ipv4addr"],["self"]],[R[37]]]],[11,R[1026],E,R[1027],2,[[["u32"],["self"],["ipv6addr"]],[R[37]]]],[11,R[1028],E,R[1029],2,[[["ipv4addr"],["self"]],[R[37]]]],[11,R[1030],E,R[1031],2,[[["u32"],["self"],["ipv6addr"]],[R[37]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[34],E,E,0,[[[U]],[R[37]]]],[11,R[43],E,E,0,[[["self"]],[T]]],[11,R[38],E,E,0,[[["self"]],[R[40]]]],[11,R[35],E,E,0,[[["self"]],[T]]],[11,R[36],E,E,0,[[],[R[37]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,"into",E,E,1,[[],[U]]],[11,R[34],E,E,1,[[[U]],[R[37]]]],[11,R[43],E,E,1,[[["self"]],[T]]],[11,R[38],E,E,1,[[["self"]],[R[40]]]],[11,R[35],E,E,1,[[["self"]],[T]]],[11,R[36],E,E,1,[[],[R[37]]]],[11,R[286],E,E,1,[[],["f"]]],[11,"from",E,E,3,[[[T]],[T]]],[11,"into",E,E,3,[[],[U]]],[11,R[34],E,E,3,[[[U]],[R[37]]]],[11,R[43],E,E,3,[[["self"]],[T]]],[11,R[38],E,E,3,[[["self"]],[R[40]]]],[11,R[35],E,E,3,[[["self"]],[T]]],[11,R[36],E,E,3,[[],[R[37]]]],[11,R[286],E,E,3,[[],["f"]]],[11,"from",E,E,2,[[[T]],[T]]],[11,"into",E,E,2,[[],[U]]],[11,R[34],E,E,2,[[[U]],[R[37]]]],[11,R[43],E,E,2,[[["self"]],[T]]],[11,R[38],E,E,2,[[["self"]],[R[40]]]],[11,R[35],E,E,2,[[["self"]],[T]]],[11,R[36],E,E,2,[[],[R[37]]]],[11,"fmt",E,E,0,[[[R[50]],["self"]],[R[37]]]],[11,"fmt",E,E,1,[[[R[50]],["self"]],[R[37]]]],[11,"fmt",E,E,3,[[[R[50]],["self"]],[R[37]]]],[11,"fmt",E,E,2,[[[R[50]],["self"]],[R[37]]]],[11,R[449],E,E,2,[[["self"]],["rawfd"]]],[11,"poll",E,E,1,[[["self"]],[["poll",["error"]],["error"]]]],[11,"poll",E,E,3,[[["self"]],[["error"],["poll",["error"]]]]],[11,"poll",E,E,0,[[["self"]],[[R[8]],["poll",[R[8]]]]]],[11,R[93],E,E,0,[[["self"]],[R[94]]]],[11,R[95],E,E,0,[[["self"]],["poll"]]],[11,"close",E,E,0,[[["self"]],["poll"]]]],"p":[[3,R[441]],[3,R[442]],[3,R[443]],[3,R[444]]]};
searchIndex[R[451]]={"doc":"Unix Domain Sockets for Tokio.","i":[[3,R[465],R[451],R[505],N,N],[3,R[466],E,R[447],N,N],[3,R[487],E,R[1032],N,N],[3,R[467],E,R[506],N,N],[3,R[442],E,R[1033],N,N],[3,R[444],E,R[1034],N,N],[3,R[469],E,R[1035],N,N],[3,R[468],E,R[507],N,N],[3,"UCred",E,R[1036],N,N],[12,"uid",E,R[1037],0,N],[12,"gid",E,R[1038],0,N],[11,"bind",E,R[1039],1,[[["p"]],[[R[37],[R[452]]],[R[452]]]]],[11,"pair",E,R[462],1,[[],[R[37]]]],[11,R[460],E,R[1040],1,[[[R[452]],["handle"]],[[R[37],[R[452]]],[R[452]]]]],[11,"unbound",E,R[1041],1,[[],[[R[37],[R[452]]],[R[452]]]]],[11,R[492],E,R[1042],1,[[["path"],["asref",["path"]],["self"]],[R[37]]]],[11,R[421],E,R[456],1,[[["ready"],["self"]],[["ready"],["poll",["ready","error"]],["error"]]]],[11,R[422],E,R[463],1,[[["self"]],[["ready"],["poll",["ready","error"]],["error"]]]],[11,R[455],E,R[470],1,[[["self"]],[[R[37],[R[440]]],[R[440]]]]],[11,R[464],E,R[1043],1,[[["self"]],[[R[37],[R[440]]],[R[440]]]]],[11,R[476],E,R[453],1,[[["self"]],[["poll",["error"]],["error"]]]],[11,R[472],E,R[453],1,[[["self"]],[["error"],["poll",["usize","error"]],["usize"]]]],[11,R[477],E,R[1044],1,[[[T]],[R[478]]]],[11,R[473],E,R[1045],1,[[["self"],["p"]],[["error"],["poll",["usize","error"]],["usize"]]]],[11,R[471],E,R[1046],1,[[["self"]],[["error"],["poll",["usize","error"]],["usize"]]]],[11,R[474],E,R[1047],1,[[["p"],[T]],[R[475]]]],[11,R[457],E,R[458],1,[[["self"]],[[R[37],[R[8]]],[R[8],["error"]]]]],[11,R[325],E,R[1048],1,[[[R[325]],["self"]],[R[37]]]],[11,"new",E,R[1049],2,[[[R[452]],["c"]],[R[1050]]]],[11,R[352],E,R[373],2,[[["self"]],[R[452]]]],[11,R[353],E,R[374],2,[[["self"]],[R[452]]]],[11,"bind",E,R[1051],3,[[["p"]],[[R[37],[R[454]]],[R[454]]]]],[11,R[460],E,R[1052],3,[[[R[454]],["handle"]],[[R[37],[R[454]]],[R[454]]]]],[11,R[455],E,R[1053],3,[[["self"]],[[R[37],[R[440]]],[R[440]]]]],[11,R[421],E,R[456],3,[[["ready"],["self"]],[["ready"],["poll",["ready","error"]],["error"]]]],[11,R[457],E,R[458],3,[[["self"]],[[R[37],[R[8]]],[R[8],["error"]]]]],[11,R[488],E,R[459],3,[[["self"]],[["error"],["poll",["error"]]]]],[11,R[489],E,R[459],3,[[["self"]],[["poll",["error"]],["error"]]]],[11,R[490],E,R[491],3,[[],[R[490]]]],[11,R[492],E,R[1054],4,[[["p"]],[R[482]]]],[11,R[460],E,R[1055],4,[[[R[461]],["handle"]],[[R[461]],[R[37],[R[461]]]]]],[11,"pair",E,R[462],4,[[],[R[37]]]],[11,R[421],E,R[456],4,[[["ready"],["self"]],[["ready"],["poll",["ready","error"]],["error"]]]],[11,R[422],E,R[463],4,[[["self"]],[["ready"],["poll",["ready","error"]],["error"]]]],[11,R[455],E,R[1056],4,[[["self"]],[[R[37],[R[440]]],[R[440]]]]],[11,R[464],E,R[1057],4,[[["self"]],[[R[37],[R[440]]],[R[440]]]]],[11,"peer_cred",E,R[1058],4,[[["self"]],[[R[37],["ucred"]],["ucred"]]]],[11,R[457],E,R[458],4,[[["self"]],[[R[37],[R[8]]],[R[8],["error"]]]]],[11,R[325],E,R[493],4,[[[R[325]],["self"]],[R[37]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,"into",E,E,1,[[],[U]]],[11,R[34],E,E,1,[[[U]],[R[37]]]],[11,R[43],E,E,1,[[["self"]],[T]]],[11,R[38],E,E,1,[[["self"]],[R[40]]]],[11,R[35],E,E,1,[[["self"]],[T]]],[11,R[36],E,E,1,[[],[R[37]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,"into",E,E,2,[[],[U]]],[11,R[34],E,E,2,[[[U]],[R[37]]]],[11,R[43],E,E,2,[[["self"]],[T]]],[11,R[38],E,E,2,[[["self"]],[R[40]]]],[11,R[35],E,E,2,[[["self"]],[T]]],[11,R[36],E,E,2,[[],[R[37]]]],[11,"from",E,E,5,[[[T]],[T]]],[11,"into",E,E,5,[[],[U]]],[11,R[34],E,E,5,[[[U]],[R[37]]]],[11,R[43],E,E,5,[[["self"]],[T]]],[11,R[38],E,E,5,[[["self"]],[R[40]]]],[11,R[35],E,E,5,[[["self"]],[T]]],[11,R[36],E,E,5,[[],[R[37]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,"into",E,E,3,[[],[U]]],[11,R[34],E,E,3,[[[U]],[R[37]]]],[11,R[43],E,E,3,[[["self"]],[T]]],[11,R[38],E,E,3,[[["self"]],[R[40]]]],[11,R[35],E,E,3,[[["self"]],[T]]],[11,R[36],E,E,3,[[],[R[37]]]],[11,"from",E,E,6,[[[T]],[T]]],[11,"into",E,E,6,[[],[U]]],[11,R[34],E,E,6,[[[U]],[R[37]]]],[11,R[43],E,E,6,[[["self"]],[T]]],[11,R[38],E,E,6,[[["self"]],[R[40]]]],[11,R[35],E,E,6,[[["self"]],[T]]],[11,R[36],E,E,6,[[],[R[37]]]],[11,R[286],E,E,6,[[],["f"]]],[11,"from",E,E,7,[[[T]],[T]]],[11,"into",E,E,7,[[],[U]]],[11,R[34],E,E,7,[[[U]],[R[37]]]],[11,R[43],E,E,7,[[["self"]],[T]]],[11,R[38],E,E,7,[[["self"]],[R[40]]]],[11,R[35],E,E,7,[[["self"]],[T]]],[11,R[36],E,E,7,[[],[R[37]]]],[11,R[286],E,E,7,[[],["f"]]],[11,"from",E,E,8,[[[T]],[T]]],[11,"into",E,E,8,[[],[U]]],[11,R[34],E,E,8,[[[U]],[R[37]]]],[11,R[43],E,E,8,[[["self"]],[T]]],[11,R[38],E,E,8,[[["self"]],[R[40]]]],[11,R[35],E,E,8,[[["self"]],[T]]],[11,R[36],E,E,8,[[],[R[37]]]],[11,R[286],E,E,8,[[],["f"]]],[11,"from",E,E,4,[[[T]],[T]]],[11,"into",E,E,4,[[],[U]]],[11,R[34],E,E,4,[[[U]],[R[37]]]],[11,R[43],E,E,4,[[["self"]],[T]]],[11,R[38],E,E,4,[[["self"]],[R[40]]]],[11,R[35],E,E,4,[[["self"]],[T]]],[11,R[36],E,E,4,[[],[R[37]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[32],E,E,0,[[["self"]],[T]]],[11,R[33],E,E,0,[[[T],["self"]]]],[11,R[34],E,E,0,[[[U]],[R[37]]]],[11,R[43],E,E,0,[[["self"]],[T]]],[11,R[38],E,E,0,[[["self"]],[R[40]]]],[11,R[35],E,E,0,[[["self"]],[T]]],[11,R[36],E,E,0,[[],[R[37]]]],[11,"eq",E,E,0,[[["ucred"],["self"]],["bool"]]],[11,"ne",E,E,0,[[["ucred"],["self"]],["bool"]]],[11,"clone",E,E,0,[[["self"]],["ucred"]]],[11,"fmt",E,E,1,[[[R[50]],["self"]],[R[37]]]],[11,"fmt",E,E,2,[[[R[50]],["self"]],[R[37]]]],[11,"fmt",E,E,5,[[[R[50]],["self"]],[R[37]]]],[11,"fmt",E,E,3,[[[R[50]],["self"]],[R[37]]]],[11,"fmt",E,E,6,[[[R[50]],["self"]],[R[37]]]],[11,"fmt",E,E,7,[[[R[50]],["self"]],[R[37]]]],[11,"fmt",E,E,8,[[[R[50]],["self"]],[R[37]]]],[11,"fmt",E,E,4,[[[R[50]],["self"]],[R[37]]]],[11,"fmt",E,E,0,[[[R[50]],["self"]],[R[37]]]],[11,"hash",E,E,0,[[["self"],["__h"]]]],[11,"write",E,E,4,[[["self"]],[[R[37],["usize"]],["usize"]]]],[11,"flush",E,E,4,[[["self"]],[R[37]]]],[11,"read",E,E,4,[[["self"]],[[R[37],["usize"]],["usize"]]]],[11,R[449],E,E,1,[[["self"]],["rawfd"]]],[11,R[449],E,E,3,[[["self"]],["rawfd"]]],[11,R[449],E,E,4,[[["self"]],["rawfd"]]],[11,"poll",E,E,6,[[["self"]],["poll"]]],[11,"poll",E,E,7,[[["self"]],["poll"]]],[11,"poll",E,E,8,[[["self"]],[[R[461]],["error"],["poll",[R[461],"error"]]]]],[11,"poll",E,E,2,[[["self"]],[["poll",[R[8]]],[R[8]]]]],[11,"poll",E,E,5,[[["self"]],[["error"],[R[8]],["poll",[R[8],"error"]]]]],[11,R[93],E,E,2,[[["self"]],[R[94]]]],[11,R[95],E,E,2,[[["self"]],["poll"]]],[11,"close",E,E,2,[[["self"]],["poll"]]],[11,R[325],E,E,4,[[["self"]],[["poll",["error"]],["error"]]]],[11,R[327],E,E,4,[[["b"],["self"]],[["error"],["poll",["usize","error"]],["usize"]]]],[11,R[332],E,E,4,[[["self"]],["bool"]]],[11,R[336],E,E,4,[[["b"],["self"]],[["error"],["poll",["usize","error"]],["usize"]]]]],"p":[[3,"UCred"],[3,R[465]],[3,R[466]],[3,R[467]],[3,R[468]],[3,R[487]],[3,R[442]],[3,R[444]],[3,R[469]]]};
searchIndex[R[479]]={"doc":R[1059],"i":[[3,R[487],R[479],R[1060],N,N],[3,R[485],E,R[501],N,N],[3,R[469],E,R[1061],N,N],[3,R[486],E,R[502],N,N],[11,"bind",E,R[1062],0,[[[R[440]]],[[R[37],[R[480]]],[R[480]]]]],[11,R[488],E,R[459],0,[[["self"]],[["poll",["error"]],["error"]]]],[11,R[489],E,R[459],0,[[["self"]],[["poll",["error"]],["error"]]]],[11,R[460],E,R[1063],0,[[["handle"],[R[480]]],[[R[37],[R[480]]],[R[480]]]]],[11,R[455],E,R[1064],0,[[["self"]],[[R[440]],[R[37],[R[440]]]]]],[11,R[490],E,R[491],0,[[],[R[490]]]],[11,"ttl",E,R[483],0,[[["self"]],[[R[37],["u32"]],["u32"]]]],[11,"set_ttl",E,R[484],0,[[["u32"],["self"]],[R[37]]]],[11,R[492],E,R[1065],1,[[[R[440]]],[R[482]]]],[11,R[460],E,R[1066],1,[[[R[481]],["handle"]],[[R[481]],[R[37],[R[481]]]]]],[11,R[1067],E,R[1068],1,[[[R[481]],["handle"],[R[440]]],[R[482]]]],[11,R[421],E,R[1069],1,[[["self"],["ready"]],[["poll",["ready","error"]],["error"],["ready"]]]],[11,R[422],E,R[1070],1,[[["self"]],[["poll",["ready","error"]],["error"],["ready"]]]],[11,R[455],E,R[1071],1,[[["self"]],[[R[440]],[R[37],[R[440]]]]]],[11,R[464],E,R[1072],1,[[["self"]],[[R[440]],[R[37],[R[440]]]]]],[11,"poll_peek",E,R[1073],1,[[["self"]],[["error"],["poll",["usize","error"]],["usize"]]]],[11,R[325],E,R[493],1,[[[R[325]],["self"]],[R[37]]]],[11,"nodelay",E,R[1074],1,[[["self"]],[["bool"],[R[37],["bool"]]]]],[11,R[1075],E,R[1076],1,[[["self"],["bool"]],[R[37]]]],[11,R[1077],E,R[1078],1,[[["self"]],[[R[37],["usize"]],["usize"]]]],[11,R[1079],E,R[1080],1,[[["self"],["usize"]],[R[37]]]],[11,R[1081],E,R[1082],1,[[["self"]],[[R[37],["usize"]],["usize"]]]],[11,R[1083],E,R[1084],1,[[["self"],["usize"]],[R[37]]]],[11,"keepalive",E,R[1085],1,[[["self"]],[[R[37],[R[8]]],[R[8],[R[249]]]]]],[11,R[1086],E,R[1087],1,[[["self"],[R[8],[R[249]]],[R[249]]],[R[37]]]],[11,"ttl",E,R[483],1,[[["self"]],[[R[37],["u32"]],["u32"]]]],[11,"set_ttl",E,R[484],1,[[["u32"],["self"]],[R[37]]]],[11,"linger",E,R[1088],1,[[["self"]],[[R[37],[R[8]]],[R[8],[R[249]]]]]],[11,"set_linger",E,R[1089],1,[[["self"],[R[8],[R[249]]],[R[249]]],[R[37]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,"into",E,E,2,[[],[U]]],[11,R[34],E,E,2,[[[U]],[R[37]]]],[11,R[43],E,E,2,[[["self"]],[T]]],[11,R[38],E,E,2,[[["self"]],[R[40]]]],[11,R[35],E,E,2,[[["self"]],[T]]],[11,R[36],E,E,2,[[],[R[37]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[34],E,E,0,[[[U]],[R[37]]]],[11,R[43],E,E,0,[[["self"]],[T]]],[11,R[38],E,E,0,[[["self"]],[R[40]]]],[11,R[35],E,E,0,[[["self"]],[T]]],[11,R[36],E,E,0,[[],[R[37]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,"into",E,E,3,[[],[U]]],[11,R[34],E,E,3,[[[U]],[R[37]]]],[11,R[43],E,E,3,[[["self"]],[T]]],[11,R[38],E,E,3,[[["self"]],[R[40]]]],[11,R[35],E,E,3,[[["self"]],[T]]],[11,R[36],E,E,3,[[],[R[37]]]],[11,R[286],E,E,3,[[],["f"]]],[11,"from",E,E,1,[[[T]],[T]]],[11,"into",E,E,1,[[],[U]]],[11,R[34],E,E,1,[[[U]],[R[37]]]],[11,R[43],E,E,1,[[["self"]],[T]]],[11,R[38],E,E,1,[[["self"]],[R[40]]]],[11,R[35],E,E,1,[[["self"]],[T]]],[11,R[36],E,E,1,[[],[R[37]]]],[11,"fmt",E,E,2,[[[R[50]],["self"]],[R[37]]]],[11,"fmt",E,E,0,[[[R[50]],["self"]],[R[37]]]],[11,"fmt",E,E,3,[[[R[50]],["self"]],[R[37]]]],[11,"fmt",E,E,1,[[[R[50]],["self"]],[R[37]]]],[11,"write",E,E,1,[[["self"]],[[R[37],["usize"]],["usize"]]]],[11,"flush",E,E,1,[[["self"]],[R[37]]]],[11,"read",E,E,1,[[["self"]],[[R[37],["usize"]],["usize"]]]],[11,R[449],E,E,0,[[["self"]],["rawfd"]]],[11,R[449],E,E,1,[[["self"]],["rawfd"]]],[11,"poll",E,E,3,[[["self"]],[[R[481]],["error"],["poll",[R[481],"error"]]]]],[11,"poll",E,E,2,[[["self"]],[["error"],[R[8]],["poll",[R[8],"error"]]]]],[11,R[325],E,E,1,[[["self"]],[["poll",["error"]],["error"]]]],[11,R[327],E,E,1,[[["b"],["self"]],[["error"],["poll",["usize","error"]],["usize"]]]],[11,R[332],E,E,1,[[["self"]],["bool"]]],[11,R[336],E,E,1,[[["b"],["self"]],[["error"],["poll",["usize","error"]],["usize"]]]]],"p":[[3,R[485]],[3,R[486]],[3,R[487]],[3,R[469]]]};
searchIndex[R[63]]={"doc":"Asynchronous synchronization primitives.","i":[[0,"lock",R[63],R[1090],N,N],[3,"Lock",R[84],R[1091],N,N],[3,R[103],E,R[1092],N,N],[11,"new",E,R[1093],0,[[[T]],["self"]]],[11,"poll_lock",E,R[1094],0,[[["self"]],[["async",[R[64]]],[R[64]]]]],[0,"mpsc",R[63],R[1095],N,N],[3,R[70],R[85],R[1096],N,N],[3,"Sender",E,R[1097],N,N],[3,R[98],E,R[1098],N,N],[3,R[99],E,R[1099],N,N],[5,R[79],E,R[1100],N,[[["usize"]]]],[5,R[1101],E,R[1102],N,[[]]],[11,"close",E,R[67],1,[[["self"]]]],[11,"poll_ready",E,R[1103],2,[[["self"]],[[R[65]],["poll",[R[65]]]]]],[11,R[68],E,R[1104],2,[[["self"],[T]],[[R[66]],[R[37],[R[66]]]]]],[11,"close",E,R[67],3,[[["self"]]]],[11,R[68],E,R[1105],4,[[["self"],[T]],[[R[37],[R[69]]],[R[69]]]]],[0,"error",E,R[1106],N,N],[3,R[71],R[86],R[1107],N,N],[3,R[80],E,R[1108],N,N],[3,R[104],E,R[1109],N,N],[3,R[107],E,R[1110],N,N],[3,R[105],E,R[1111],N,N],[3,R[106],E,R[1112],N,N],[0,"oneshot",R[63],R[1113],N,N],[3,"Sender",R[72],R[1114],N,N],[3,R[70],E,R[1115],N,N],[5,R[79],E,R[1116],N,[[]]],[0,"error",E,R[1117],N,N],[3,R[71],R[88],R[1118],N,N],[3,R[108],E,R[1119],N,N],[11,"send",R[72],R[1120],5,[[[T]],[R[37]]]],[11,R[83],E,R[73],5,[[["self"]],["poll"]]],[11,R[78],E,R[73],5,[[["self"]],["bool"]]],[11,"close",E,R[1121],6,[[["self"]]]],[11,"try_recv",E,R[1122],6,[[["self"]],[[R[37],[R[74]]],[R[74]]]]],[0,R[75],R[63],"Thread-safe, asynchronous counting semaphore.",N,N],[3,R[100],R[89],"Futures-aware semaphore.",N,N],[3,"Permit",E,"A semaphore permit",N,N],[3,R[109],E,"Error returned by `Permit::poll_acquire`.",N,N],[3,R[101],E,"Error returned by `Permit::try_acquire`.",N,N],[11,"new",E,"Creates a new semaphore with the initial number of permits",7,[[["usize"]],[R[75]]]],[11,"available_permits",E,"Returns the current number of available permits",7,[[["self"]],["usize"]]],[11,"close",E,"Close the semaphore. This prevents the semaphore from…",7,[[["self"]]]],[11,"add_permits",E,"Add `n` new permits to the semaphore.",7,[[["self"],["usize"]]]],[11,"new",E,"Create a new `Permit`.",8,[[],["permit"]]],[11,"is_acquired",E,"Returns true if the permit has been acquired",8,[[["self"]],["bool"]]],[11,"poll_acquire",E,"Try to acquire the permit. If no permits are available,…",8,[[["self"],[R[75]]],[["poll",[R[76]]],[R[76]]]]],[11,"try_acquire",E,"Try to acquire the permit.",8,[[["self"],[R[75]]],[[R[77]],[R[37],[R[77]]]]]],[11,"release",E,"Release a permit back to the semaphore",8,[[["self"],[R[75]]]]],[11,"forget",E,"Forget the permit without releasing it back to the…",8,[[["self"]]]],[11,R[78],E,"Returns true if the error was caused by a closed semaphore.",9,[[["self"]],["bool"]]],[11,"is_no_permits",E,"Returns true if the error was caused by calling…",9,[[["self"]],["bool"]]],[0,"task",R[63],"Thread-safe task notification primitives.",N,N],[3,R[102],R[90],R[1123],N,N],[11,"new",E,R[1124],10,[[],[R[691]]]],[11,R[431],E,R[1125],10,[[["self"]]]],[11,R[1126],E,R[1127],10,[[["self"],["task"]]]],[11,"notify",E,R[1128],10,[[["self"]]]],[11,"take_task",E,"Attempts to take the `Task` value out of the `AtomicTask`…",10,[[["self"]],[[R[8],["task"]],["task"]]]],[0,"watch",R[63],R[1129],N,N],[3,R[70],R[81],R[1130],N,N],[3,"Sender",E,R[1131],N,N],[3,"Ref",E,R[1132],N,N],[5,R[79],E,R[1133],N,[[[T]]]],[0,"error",E,R[1134],N,N],[3,R[71],R[91],R[1135],N,N],[3,R[80],E,R[1136],N,N],[11,R[352],R[81],R[1137],11,[[["self"]],["ref"]]],[11,"poll_ref",E,R[1138],11,[[["self"]],[["poll",[R[8],R[82]]],[R[82]],[R[8],["ref"]]]]],[11,R[450],E,R[1139],12,[[["self"],[T]],[[R[65]],[R[37],[R[65]]]]]],[11,R[83],E,R[1140],12,[[["self"]],["poll"]]],[11,"from",R[84],E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[32],E,E,0,[[["self"]],[T]]],[11,R[33],E,E,0,[[[T],["self"]]]],[11,R[34],E,E,0,[[[U]],[R[37]]]],[11,R[43],E,E,0,[[["self"]],[T]]],[11,R[38],E,E,0,[[["self"]],[R[40]]]],[11,R[35],E,E,0,[[["self"]],[T]]],[11,R[36],E,E,0,[[],[R[37]]]],[11,"from",E,E,13,[[[T]],[T]]],[11,"into",E,E,13,[[],[U]]],[11,R[42],E,E,13,[[["self"]],[R[87]]]],[11,R[34],E,E,13,[[[U]],[R[37]]]],[11,R[43],E,E,13,[[["self"]],[T]]],[11,R[38],E,E,13,[[["self"]],[R[40]]]],[11,R[35],E,E,13,[[["self"]],[T]]],[11,R[36],E,E,13,[[],[R[37]]]],[11,"from",R[85],E,1,[[[T]],[T]]],[11,"into",E,E,1,[[],[U]]],[11,R[34],E,E,1,[[[U]],[R[37]]]],[11,R[43],E,E,1,[[["self"]],[T]]],[11,R[38],E,E,1,[[["self"]],[R[40]]]],[11,R[35],E,E,1,[[["self"]],[T]]],[11,R[36],E,E,1,[[],[R[37]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,"into",E,E,2,[[],[U]]],[11,R[32],E,E,2,[[["self"]],[T]]],[11,R[33],E,E,2,[[[T],["self"]]]],[11,R[34],E,E,2,[[[U]],[R[37]]]],[11,R[43],E,E,2,[[["self"]],[T]]],[11,R[38],E,E,2,[[["self"]],[R[40]]]],[11,R[35],E,E,2,[[["self"]],[T]]],[11,R[36],E,E,2,[[],[R[37]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,"into",E,E,3,[[],[U]]],[11,R[34],E,E,3,[[[U]],[R[37]]]],[11,R[43],E,E,3,[[["self"]],[T]]],[11,R[38],E,E,3,[[["self"]],[R[40]]]],[11,R[35],E,E,3,[[["self"]],[T]]],[11,R[36],E,E,3,[[],[R[37]]]],[11,"from",E,E,4,[[[T]],[T]]],[11,"into",E,E,4,[[],[U]]],[11,R[32],E,E,4,[[["self"]],[T]]],[11,R[33],E,E,4,[[[T],["self"]]]],[11,R[34],E,E,4,[[[U]],[R[37]]]],[11,R[43],E,E,4,[[["self"]],[T]]],[11,R[38],E,E,4,[[["self"]],[R[40]]]],[11,R[35],E,E,4,[[["self"]],[T]]],[11,R[36],E,E,4,[[],[R[37]]]],[11,"from",R[86],E,14,[[[T]],[T]]],[11,"into",E,E,14,[[],[U]]],[11,R[42],E,E,14,[[["self"]],[R[87]]]],[11,R[34],E,E,14,[[[U]],[R[37]]]],[11,R[43],E,E,14,[[["self"]],[T]]],[11,R[38],E,E,14,[[["self"]],[R[40]]]],[11,R[35],E,E,14,[[["self"]],[T]]],[11,R[36],E,E,14,[[],[R[37]]]],[11,"from",E,E,15,[[[T]],[T]]],[11,"into",E,E,15,[[],[U]]],[11,R[42],E,E,15,[[["self"]],[R[87]]]],[11,R[34],E,E,15,[[[U]],[R[37]]]],[11,R[43],E,E,15,[[["self"]],[T]]],[11,R[38],E,E,15,[[["self"]],[R[40]]]],[11,R[35],E,E,15,[[["self"]],[T]]],[11,R[36],E,E,15,[[],[R[37]]]],[11,"from",E,E,16,[[[T]],[T]]],[11,"into",E,E,16,[[],[U]]],[11,R[42],E,E,16,[[["self"]],[R[87]]]],[11,R[34],E,E,16,[[[U]],[R[37]]]],[11,R[43],E,E,16,[[["self"]],[T]]],[11,R[38],E,E,16,[[["self"]],[R[40]]]],[11,R[35],E,E,16,[[["self"]],[T]]],[11,R[36],E,E,16,[[],[R[37]]]],[11,"from",E,E,17,[[[T]],[T]]],[11,"into",E,E,17,[[],[U]]],[11,R[42],E,E,17,[[["self"]],[R[87]]]],[11,R[34],E,E,17,[[[U]],[R[37]]]],[11,R[43],E,E,17,[[["self"]],[T]]],[11,R[38],E,E,17,[[["self"]],[R[40]]]],[11,R[35],E,E,17,[[["self"]],[T]]],[11,R[36],E,E,17,[[],[R[37]]]],[11,"from",E,E,18,[[[T]],[T]]],[11,"into",E,E,18,[[],[U]]],[11,R[42],E,E,18,[[["self"]],[R[87]]]],[11,R[34],E,E,18,[[[U]],[R[37]]]],[11,R[43],E,E,18,[[["self"]],[T]]],[11,R[38],E,E,18,[[["self"]],[R[40]]]],[11,R[35],E,E,18,[[["self"]],[T]]],[11,R[36],E,E,18,[[],[R[37]]]],[11,"from",E,E,19,[[[T]],[T]]],[11,"into",E,E,19,[[],[U]]],[11,R[42],E,E,19,[[["self"]],[R[87]]]],[11,R[34],E,E,19,[[[U]],[R[37]]]],[11,R[43],E,E,19,[[["self"]],[T]]],[11,R[38],E,E,19,[[["self"]],[R[40]]]],[11,R[35],E,E,19,[[["self"]],[T]]],[11,R[36],E,E,19,[[],[R[37]]]],[11,"from",R[72],E,5,[[[T]],[T]]],[11,"into",E,E,5,[[],[U]]],[11,R[34],E,E,5,[[[U]],[R[37]]]],[11,R[43],E,E,5,[[["self"]],[T]]],[11,R[38],E,E,5,[[["self"]],[R[40]]]],[11,R[35],E,E,5,[[["self"]],[T]]],[11,R[36],E,E,5,[[],[R[37]]]],[11,"from",E,E,6,[[[T]],[T]]],[11,"into",E,E,6,[[],[U]]],[11,R[34],E,E,6,[[[U]],[R[37]]]],[11,R[43],E,E,6,[[["self"]],[T]]],[11,R[38],E,E,6,[[["self"]],[R[40]]]],[11,R[35],E,E,6,[[["self"]],[T]]],[11,R[36],E,E,6,[[],[R[37]]]],[11,R[286],E,E,6,[[],["f"]]],[11,"from",R[88],E,20,[[[T]],[T]]],[11,"into",E,E,20,[[],[U]]],[11,R[42],E,E,20,[[["self"]],[R[87]]]],[11,R[34],E,E,20,[[[U]],[R[37]]]],[11,R[43],E,E,20,[[["self"]],[T]]],[11,R[38],E,E,20,[[["self"]],[R[40]]]],[11,R[35],E,E,20,[[["self"]],[T]]],[11,R[36],E,E,20,[[],[R[37]]]],[11,"from",E,E,21,[[[T]],[T]]],[11,"into",E,E,21,[[],[U]]],[11,R[42],E,E,21,[[["self"]],[R[87]]]],[11,R[34],E,E,21,[[[U]],[R[37]]]],[11,R[43],E,E,21,[[["self"]],[T]]],[11,R[38],E,E,21,[[["self"]],[R[40]]]],[11,R[35],E,E,21,[[["self"]],[T]]],[11,R[36],E,E,21,[[],[R[37]]]],[11,"from",R[89],E,7,[[[T]],[T]]],[11,"into",E,E,7,[[],[U]]],[11,R[34],E,E,7,[[[U]],[R[37]]]],[11,R[43],E,E,7,[[["self"]],[T]]],[11,R[38],E,E,7,[[["self"]],[R[40]]]],[11,R[35],E,E,7,[[["self"]],[T]]],[11,R[36],E,E,7,[[],[R[37]]]],[11,"from",E,E,8,[[[T]],[T]]],[11,"into",E,E,8,[[],[U]]],[11,R[34],E,E,8,[[[U]],[R[37]]]],[11,R[43],E,E,8,[[["self"]],[T]]],[11,R[38],E,E,8,[[["self"]],[R[40]]]],[11,R[35],E,E,8,[[["self"]],[T]]],[11,R[36],E,E,8,[[],[R[37]]]],[11,"from",E,E,22,[[[T]],[T]]],[11,"into",E,E,22,[[],[U]]],[11,R[42],E,E,22,[[["self"]],[R[87]]]],[11,R[34],E,E,22,[[[U]],[R[37]]]],[11,R[43],E,E,22,[[["self"]],[T]]],[11,R[38],E,E,22,[[["self"]],[R[40]]]],[11,R[35],E,E,22,[[["self"]],[T]]],[11,R[36],E,E,22,[[],[R[37]]]],[11,"from",E,E,9,[[[T]],[T]]],[11,"into",E,E,9,[[],[U]]],[11,R[42],E,E,9,[[["self"]],[R[87]]]],[11,R[34],E,E,9,[[[U]],[R[37]]]],[11,R[43],E,E,9,[[["self"]],[T]]],[11,R[38],E,E,9,[[["self"]],[R[40]]]],[11,R[35],E,E,9,[[["self"]],[T]]],[11,R[36],E,E,9,[[],[R[37]]]],[11,"from",R[90],E,10,[[[T]],[T]]],[11,"into",E,E,10,[[],[U]]],[11,R[34],E,E,10,[[[U]],[R[37]]]],[11,R[43],E,E,10,[[["self"]],[T]]],[11,R[38],E,E,10,[[["self"]],[R[40]]]],[11,R[35],E,E,10,[[["self"]],[T]]],[11,R[36],E,E,10,[[],[R[37]]]],[11,"from",R[81],E,11,[[[T]],[T]]],[11,"into",E,E,11,[[],[U]]],[11,R[32],E,E,11,[[["self"]],[T]]],[11,R[33],E,E,11,[[[T],["self"]]]],[11,R[34],E,E,11,[[[U]],[R[37]]]],[11,R[43],E,E,11,[[["self"]],[T]]],[11,R[38],E,E,11,[[["self"]],[R[40]]]],[11,R[35],E,E,11,[[["self"]],[T]]],[11,R[36],E,E,11,[[],[R[37]]]],[11,"from",E,E,12,[[[T]],[T]]],[11,"into",E,E,12,[[],[U]]],[11,R[34],E,E,12,[[[U]],[R[37]]]],[11,R[43],E,E,12,[[["self"]],[T]]],[11,R[38],E,E,12,[[["self"]],[R[40]]]],[11,R[35],E,E,12,[[["self"]],[T]]],[11,R[36],E,E,12,[[],[R[37]]]],[11,"from",E,E,23,[[[T]],[T]]],[11,"into",E,E,23,[[],[U]]],[11,R[34],E,E,23,[[[U]],[R[37]]]],[11,R[43],E,E,23,[[["self"]],[T]]],[11,R[38],E,E,23,[[["self"]],[R[40]]]],[11,R[35],E,E,23,[[["self"]],[T]]],[11,R[36],E,E,23,[[],[R[37]]]],[11,"from",R[91],E,24,[[[T]],[T]]],[11,"into",E,E,24,[[],[U]]],[11,R[42],E,E,24,[[["self"]],[R[87]]]],[11,R[34],E,E,24,[[[U]],[R[37]]]],[11,R[43],E,E,24,[[["self"]],[T]]],[11,R[38],E,E,24,[[["self"]],[R[40]]]],[11,R[35],E,E,24,[[["self"]],[T]]],[11,R[36],E,E,24,[[],[R[37]]]],[11,"from",E,E,25,[[[T]],[T]]],[11,"into",E,E,25,[[],[U]]],[11,R[42],E,E,25,[[["self"]],[R[87]]]],[11,R[34],E,E,25,[[[U]],[R[37]]]],[11,R[43],E,E,25,[[["self"]],[T]]],[11,R[38],E,E,25,[[["self"]],[R[40]]]],[11,R[35],E,E,25,[[["self"]],[T]]],[11,R[36],E,E,25,[[],[R[37]]]],[11,"clone",R[84],E,0,[[["self"]],["self"]]],[11,"clone",R[85],E,2,[[["self"]],["self"]]],[11,"clone",E,E,4,[[["self"]],["self"]]],[11,"clone",R[81],E,11,[[["self"]],["self"]]],[11,"from",R[84],E,0,[[[T]],["self"]]],[11,"from",R[86],E,15,[[],[R[66]]]],[11,"from",E,E,18,[[],[R[69]]]],[11,"drop",R[84],E,13,[[["self"]]]],[11,"drop",R[72],E,5,[[["self"]]]],[11,"drop",E,E,6,[[["self"]]]],[11,"drop",R[81],E,11,[[["self"]]]],[11,"drop",E,E,12,[[["self"]]]],[11,R[295],R[84],E,0,[[],["self"]]],[11,R[295],R[90],E,10,[[],["self"]]],[11,"deref_mut",R[84],E,13,[[["self"]]]],[11,"fmt",E,E,0,[[[R[50]],["self"]],[R[37]]]],[11,"fmt",E,E,13,[[[R[50]],["self"]],[R[37]]]],[11,"fmt",R[85],E,2,[[[R[50]],["self"]],[R[37]]]],[11,"fmt",E,E,1,[[[R[50]],["self"]],[R[37]]]],[11,"fmt",R[86],E,14,[[[R[50]],["self"]],[R[37]]]],[11,"fmt",E,E,15,[[[R[50]],["self"]],[R[37]]]],[11,"fmt",E,E,16,[[[R[50]],["self"]],[R[37]]]],[11,"fmt",R[85],E,4,[[[R[50]],["self"]],[R[37]]]],[11,"fmt",E,E,3,[[[R[50]],["self"]],[R[37]]]],[11,"fmt",R[86],E,17,[[[R[50]],["self"]],[R[37]]]],[11,"fmt",E,E,18,[[[R[50]],["self"]],[R[37]]]],[11,"fmt",E,E,19,[[[R[50]],["self"]],[R[37]]]],[11,"fmt",R[72],E,5,[[[R[50]],["self"]],[R[37]]]],[11,"fmt",E,E,6,[[[R[50]],["self"]],[R[37]]]],[11,"fmt",R[88],E,20,[[[R[50]],["self"]],[R[37]]]],[11,"fmt",E,E,21,[[[R[50]],["self"]],[R[37]]]],[11,"fmt",R[89],E,8,[[[R[50]],["self"]],[R[37]]]],[11,"fmt",E,E,22,[[[R[50]],["self"]],[R[37]]]],[11,"fmt",E,E,9,[[[R[50]],["self"]],[R[37]]]],[11,"fmt",E,E,7,[[[R[50]],["self"]],[R[37]]]],[11,"fmt",R[90],E,10,[[[R[50]],["self"]],[R[37]]]],[11,"fmt",R[81],E,11,[[[R[50]],["self"]],[R[37]]]],[11,"fmt",E,E,12,[[[R[50]],["self"]],[R[37]]]],[11,"fmt",E,E,23,[[[R[50]],["self"]],[R[37]]]],[11,"fmt",R[91],E,24,[[[R[50]],["self"]],[R[37]]]],[11,"fmt",E,E,25,[[[R[50]],["self"]],[R[37]]]],[11,"fmt",R[84],E,13,[[[R[50]],["self"]],[R[37]]]],[11,"fmt",R[86],E,14,[[[R[50]],["self"]],[R[37]]]],[11,"fmt",E,E,15,[[[R[50]],["self"]],[R[37]]]],[11,"fmt",E,E,16,[[[R[50]],["self"]],[R[37]]]],[11,"fmt",E,E,17,[[[R[50]],["self"]],[R[37]]]],[11,"fmt",E,E,18,[[[R[50]],["self"]],[R[37]]]],[11,"fmt",E,E,19,[[[R[50]],["self"]],[R[37]]]],[11,"fmt",R[88],E,20,[[[R[50]],["self"]],[R[37]]]],[11,"fmt",E,E,21,[[[R[50]],["self"]],[R[37]]]],[11,"fmt",R[89],E,22,[[[R[50]],["self"]],[R[37]]]],[11,"fmt",E,E,9,[[[R[50]],["self"]],[R[37]]]],[11,"fmt",R[91],E,24,[[[R[50]],["self"]],[R[37]]]],[11,"fmt",E,E,25,[[[R[50]],["self"]],[R[37]]]],[11,"deref",R[84],E,13,[[["self"]]]],[11,"deref",R[81],E,23,[[["self"]],[T]]],[11,R[92],R[86],E,14,[[["self"]],["str"]]],[11,R[92],E,E,15,[[["self"]],["str"]]],[11,R[92],E,E,16,[[["self"]],["str"]]],[11,R[92],E,E,17,[[["self"]],["str"]]],[11,R[92],E,E,18,[[["self"]],["str"]]],[11,R[92],E,E,19,[[["self"]],["str"]]],[11,R[92],R[88],E,20,[[["self"]],["str"]]],[11,R[92],E,E,21,[[["self"]],["str"]]],[11,R[92],R[89],E,22,[[["self"]],["str"]]],[11,R[92],E,E,9,[[["self"]],["str"]]],[11,R[92],R[91],E,24,[[["self"]],["str"]]],[11,R[92],E,E,25,[[["self"]],["str"]]],[11,"poll",R[72],E,6,[[["self"]],[["poll",[R[82]]],[R[82]]]]],[11,"poll",R[85],E,1,[[["self"]],[["poll",[R[8]]],[R[8]]]]],[11,"poll",E,E,3,[[["self"]],[["poll",[R[8]]],[R[8]]]]],[11,"poll",R[81],E,11,[[["self"]],[["poll",[R[8],R[82]]],[R[82]],[R[8]]]]],[11,R[93],R[85],E,2,[[["self"],[T]],[R[94]]]],[11,R[95],E,E,2,[[["self"]],["poll"]]],[11,"close",E,E,2,[[["self"]],["poll"]]],[11,R[93],E,E,4,[[["self"],[T]],[R[94]]]],[11,R[95],E,E,4,[[["self"]],["poll"]]],[11,"close",E,E,4,[[["self"]],["poll"]]],[11,R[93],R[81],E,12,[[["self"],[T]],[[R[65]],[R[94],[R[65]]]]]],[11,R[95],E,E,12,[[["self"]],[[R[65]],["poll",[R[65]]]]]],[11,R[96],R[86],R[97],15,[[],[T]]],[11,R[78],E,R[1141],15,[[["self"]],["bool"]]],[11,"is_full",E,R[1142],15,[[["self"]],["bool"]]],[11,R[96],E,R[97],18,[[],[T]]]],"p":[[3,"Lock"],[3,R[70]],[3,"Sender"],[3,R[98]],[3,R[99]],[3,"Sender"],[3,R[70]],[3,R[100]],[3,"Permit"],[3,R[101]],[3,R[102]],[3,R[70]],[3,"Sender"],[3,R[103]],[3,R[80]],[3,R[104]],[3,R[71]],[3,R[105]],[3,R[106]],[3,R[107]],[3,R[71]],[3,R[108]],[3,R[109]],[3,"Ref"],[3,R[71]],[3,R[80]]]};
initSearch(searchIndex);addSearchOptions(searchIndex);